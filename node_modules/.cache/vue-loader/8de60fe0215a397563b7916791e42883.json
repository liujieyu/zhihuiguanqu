{"remainingRequest":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\visualplace\\zhihuiguanqu\\src\\warm\\warm-dispatch\\warm-gatedispatching\\gatedispatching.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\src\\warm\\warm-dispatch\\warm-gatedispatching\\gatedispatching.vue","mtime":1645514326432},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\";\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\nimport App from \"@/App.vue\";\nexport default {\n  data(){\n          return{\n              loading:false,\n              showname:'泄流曲线',\n              tableBox_show:1,\n              ddtypelist:[{\n                value: '1',\n                label: '先导流洞'\n              }, {\n                value: '2',\n                label: '先溢洪洞'\n              }],\n              form:{\n                  ddtype:'1',   \n              },\n              theight:window.innerHeight-290,\n              data:[],\n              data2:{},\n              list_input:{\n                  total:100,\n                  pagesize:50,\n                  pagesizeopts:[10,20,50,75,100,200],\n                  current:1,\n              },\n          }\n      },\n              // 引入过滤方法到此组件\n      mixins: [FilterMethods,GetDataMethods], \n      mounted(){ \n         this.$refs.achart.style.width=document.body.offsetWidth+\"px\"; \n         this.$refs.achart.style.height=(document.body.offsetHeight-258)+\"px\";\n          this.reloadchart();         \n          this.Reload();\n      }, \n      methods:{\n        Reload(){\n              this.loading = true;\n              var _currentPage = this.list_input.current;\n              var _pageSizes = this.list_input.pagesize;\n              var _bgincount=(_currentPage - 1) * _pageSizes+1;\n              var _endcount=_currentPage * _pageSizes;                \n              this.axios.get('/gatedd/xhxx',{params:{begincount:_bgincount,endcount:_endcount,sign:this.form.ddtype}}).then((res)=>{\n                  this.loading = false;\n                  this.data = res.data.rows;\n                  this.list_input.total = res.data.total;\n              });\n          },\n        // 处理页码切换\n          CurrentChange(index) {\n            this.list_input.current = index;\n            this.Reload();             \n          },\n          // 处理每页显示条数切换\n          PagesizeChange(pagesize) {\n            this.list_input.pagesize = pagesize;\n            this.list_input.current=1;\n            this.Reload();\n          },\n          TYPEsearch(){\n            this.list_input.current=1;\n            this.Reload();\n            this.reloadchart();\n          },\n          showchart(){\n            if(this.tableBox_show==1){\n              this.tableBox_show=0;\n              this.showname='泄流表格';\n              this.$refs.achart.style.display=\"\";\n              this.$refs.tablediv.style.display=\"none\";\n            }else{\n              this.tableBox_show=1;\n              this.showname='泄流曲线';\n              this.$refs.achart.style.display=\"none\";\n              this.$refs.tablediv.style.display=\"\";\n            }\n          },\n          //导出\n          exportExcel(){\n            //this.axios.get('/excel/exportgate', {params: {begincount:0,endcount:99999,sign:this.form.ddtype}});\n            window.location.href='/excel/exportgate?sign='+this.form.ddtype+'&begincount=0&endcount=99999';\n          },\n          //曲线图加载\n          reloadchart(){\n            this.axios.get('/gatedd/xhchart', {params: {sign:this.form.ddtype}}).then(res => {\n                  var _data = JSON.parse(JSON.stringify(res.data));\n                  var echartData = {\n                      chartName: \"曲线图\",\n                      x: new Object(),\n                      y1: new Object(),\n                      y2: new Object(),\n                      y3: new Object(),\n                      y4: new Object(),\n                      y5: new Object()\n                  }\n                  echartData.x.list=FilterMethods.methods.newArrayByObjArray(_data, \"Z\", val => { // 过滤\n                      if (isNaN(val) || val === \"\" || val == null) {\n                          return 2520.00;\n                      }\n                      return parseFloat(val).toFixed(2);\n                  });\n                  echartData.y1.list=FilterMethods.methods.newArrayByObjArray(_data, \"DL_Q\", val => { // 过滤\n                      if (isNaN(val) || val === \"\" || val == null) {\n                          return 1.000;\n                      }\n                      return parseFloat(val).toFixed(3);\n                  });\n                  echartData.y2.list=FilterMethods.methods.newArrayByObjArray(_data, \"XH_Q\", val => { // 过滤\n                      if (isNaN(val) || val === \"\" || val == null) {\n                          return 1.000;\n                      }\n                      return parseFloat(val).toFixed(3);\n                  });\n                  echartData.y3.list=FilterMethods.methods.newArrayByObjArray(_data, \"SUM_Q\", val => { // 过滤\n                      if (isNaN(val) || val === \"\" || val == null) {\n                          return 1.000;\n                      }\n                      return parseFloat(val).toFixed(3);\n                  });\n                  this.data2 = echartData;\n                  console.log(this.data2);\n                  this.drawchart();\n              });\n          },\n           drawchart() {\n             var obj_c=this.$refs.achart;\n              var achart = this.$echarts.init(obj_c);\n              console.log(achart);\n              achart.resize();\n              achart.setOption({\n                  title: {text: \"流量曲线图\"},\n                  tooltip: {\n                      trigger: \"axis\"\n                  },\n                  legend: {\n                      data: [\"导流洞流量\", \"溢洪洞流量\", \"合计流量\",\"导流洞开度\",\"溢洪洞开度\"]\n                  },\n                  calculable: true,\n                  xAxis: [\n                      {\n                          type: \"category\",\n                          boundaryGap: false,\n                          data: this.data2.x.list,\n                          axisLabel: { show: true,interval: parseInt(this.data2.x.list.length/14)},\n                      }\n                  ],\n                  yAxis: [\n                      {\n                          name: \"流量\",\n                          type: \"value\",\n                          min: 0,\n                          max: 1100\n                      },\n                      {\n                          name: \"闸门开度\",\n                          type: \"value\",\n                          min: 0,\n                          max: 4.1\n                      }\n                  ],\n                  series: [\n                      {\n                          name: \"导流洞流量\",\n                          type: \"line\",\n                          yAxisIndex: 0,\n                          data: this.data2.y1.list,\n                          smooth:true,\n                          itemStyle: {\n                              normal: {\n                                  color: \"#006400\",//折线点的颜色\n                                  lineStyle: {\n                                      color: \"#006400\"//折线的颜色\n                                  }\n                              }\n                          },\n                          // data: [0.36, 0.28, 0.36, 0.02, 0.12]\n                      },\n                      {\n                          name: \"溢洪洞流量\",\n                          type: \"line\",\n                          yAxisIndex: 0,\n                          data: this.data2.y2.list,\n                          smooth:true,\n                          itemStyle: {\n                              normal: {\n                                  color: \"#8B0000\",//折线点的颜色\n                                  lineStyle: {\n                                      color: \"#8B0000\"//折线的颜色\n                                  }\n                              }\n                          },\n                      },\n                      {\n                          name: \"合计流量\",\n                          type: \"line\",\n                          yAxisIndex: 0,\n                          data: this.data2.y3.list,\n                          smooth:true,\n                          itemStyle: {\n                              normal: {\n                                  color: \"#9400D3\",//折线点的颜色\n                                  lineStyle: {\n                                      color: \"#9400D3\"//折线的颜色\n                                  }\n                              }\n                          },\n                      },\n                  ]\n              });\n          },\n      }\n}\n",{"version":3,"sources":["gatedispatching.vue"],"names":[],"mappingsfile":"gatedispatching.vue","sourceRoot":"src/warm/warm-dispatch/warm-gatedispatching","sourcesContent":["<template>\r\n  <div>\r\n\t<Content class=\"searchcon\">\r\n      <Row type=\"flex\" :gutter=\"16\" class=\"rowtocol\">\r\n        <Col>\r\n          调度方式：\r\n          <Select v-model=\"form.ddtype\" :clearable=\"false\" @on-change=\"TYPEsearch\" style=\"width:120px;margin-left: 5px;margin-right: 20px;\">\r\n            <Option\r\n              v-for=\"obj in ddtypelist\"\r\n              :key=\"obj.value\"\r\n              :label=\"obj.label\"\r\n              :value=\"obj.value\">\r\n            </Option>\r\n          </Select>\r\n        </Col>\r\n        <Col>\r\n          <Button type=\"primary\" style=\"width: auto;margin-right: 20px;\" @click=\"showchart\">{{showname}}</Button>\r\n        </col>\r\n        <Col>\r\n          <Button type=\"primary\" style=\"width: auto;margin-right: 20px;\" @click=\"exportExcel\">导出</Button>\r\n        </col>\r\n      </Row>\r\n      <Divider />\r\n      <Row>\r\n        <Col style='font-size: 14px;' class=\"borsLine\">\r\n      库水位：m，闸门开启高度：m，泄流量：m³/s\r\n      </Col>\r\n      </Row>\r\n      <div ref=\"tablediv\">\r\n      <el-table\r\n        :data=\"data\"\r\n        border\r\n        :height=\"theight\"\r\n        v-loading=\"loading\"\r\n        style=\"width: 100%\">\r\n        <el-table-column\r\n          label=\" \"\r\n          prop=\"ROWID\"\r\n          align=\"center\"\r\n          width=\"65\"\r\n          fixed=\"left\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          label=\"库水位\"\r\n          prop=\"Z\"\r\n          align=\"center\"\r\n          min-width=\"80\"\r\n          fixed=\"left\">\r\n        </el-table-column>\r\n        <el-table-column label=\"导流洞\" align=\"center\">\r\n          <el-table-column\r\n            prop=\"DLKDNAME\"\r\n            label=\"闸门开启高度\"\r\n            min-width=\"120\"\r\n            align=\"center\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"DL_Q\"\r\n            label=\"泄流量\"\r\n            min-width=\"120\"\r\n            align=\"center\">\r\n          </el-table-column>\r\n        </el-table-column>\r\n        <el-table-column label=\"溢洪洞\" align=\"center\">\r\n          <el-table-column\r\n            prop=\"XHKDNAME\"\r\n            label=\"闸门开启高度\"\r\n            min-width=\"120\"\r\n            align=\"center\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"XH_Q\"\r\n            label=\"泄流量\"\r\n            min-width=\"120\"\r\n            align=\"center\">\r\n          </el-table-column>\r\n        </el-table-column>\r\n        <el-table-column\r\n          label=\"联合泄流量\"\r\n          prop=\"SUM_Q\"\r\n          align=\"center\"\r\n          min-width=\"120\"\r\n          fixed=\"left\">\r\n        </el-table-column>\r\n      </el-table>\r\n      <div style=\"margin-top: 10px;margin-right:10px;overflow: hidden\">\r\n        <div style=\"float: right;\">\r\n          <Page \r\n            :total=\"list_input.total\" \r\n            :current=\"list_input.current\" show-sizer \r\n            :page-size=\"list_input.pagesize\" :page-size-opts=\"list_input.pagesizeopts\"\r\n            @on-change=\"CurrentChange\"\r\n            @on-page-size-change=\"PagesizeChange\"\r\n            size=\"small\"\r\n            show-total\r\n            show-elevator>\r\n          </Page>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <div ref=\"achart\" style=\"width: 100%;height: 500px;margin-top: 1%;display:none;\"></div>\r\n\t</Content>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/javascript\">\r\n  import FilterMethods from \"@/assets/commonJS/FilterMethods\";\r\n  import GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\r\n  import App from \"@/App.vue\";\r\n  export default {\r\n    data(){\r\n            return{\r\n                loading:false,\r\n                showname:'泄流曲线',\r\n                tableBox_show:1,\r\n                ddtypelist:[{\r\n                  value: '1',\r\n                  label: '先导流洞'\r\n                }, {\r\n                  value: '2',\r\n                  label: '先溢洪洞'\r\n                }],\r\n                form:{\r\n                    ddtype:'1',   \r\n                },\r\n                theight:window.innerHeight-290,\r\n                data:[],\r\n                data2:{},\r\n                list_input:{\r\n                    total:100,\r\n                    pagesize:50,\r\n                    pagesizeopts:[10,20,50,75,100,200],\r\n                    current:1,\r\n                },\r\n            }\r\n        },\r\n                // 引入过滤方法到此组件\r\n        mixins: [FilterMethods,GetDataMethods], \r\n        mounted(){ \r\n           this.$refs.achart.style.width=document.body.offsetWidth+\"px\"; \r\n           this.$refs.achart.style.height=(document.body.offsetHeight-258)+\"px\";\r\n            this.reloadchart();         \r\n            this.Reload();\r\n        }, \r\n        methods:{\r\n          Reload(){\r\n                this.loading = true;\r\n                var _currentPage = this.list_input.current;\r\n                var _pageSizes = this.list_input.pagesize;\r\n                var _bgincount=(_currentPage - 1) * _pageSizes+1;\r\n                var _endcount=_currentPage * _pageSizes;                \r\n                this.axios.get('/gatedd/xhxx',{params:{begincount:_bgincount,endcount:_endcount,sign:this.form.ddtype}}).then((res)=>{\r\n                    this.loading = false;\r\n                    this.data = res.data.rows;\r\n                    this.list_input.total = res.data.total;\r\n                });\r\n            },\r\n          // 处理页码切换\r\n            CurrentChange(index) {\r\n              this.list_input.current = index;\r\n              this.Reload();             \r\n            },\r\n            // 处理每页显示条数切换\r\n            PagesizeChange(pagesize) {\r\n              this.list_input.pagesize = pagesize;\r\n              this.list_input.current=1;\r\n              this.Reload();\r\n            },\r\n            TYPEsearch(){\r\n              this.list_input.current=1;\r\n              this.Reload();\r\n              this.reloadchart();\r\n            },\r\n            showchart(){\r\n              if(this.tableBox_show==1){\r\n                this.tableBox_show=0;\r\n                this.showname='泄流表格';\r\n                this.$refs.achart.style.display=\"\";\r\n                this.$refs.tablediv.style.display=\"none\";\r\n              }else{\r\n                this.tableBox_show=1;\r\n                this.showname='泄流曲线';\r\n                this.$refs.achart.style.display=\"none\";\r\n                this.$refs.tablediv.style.display=\"\";\r\n              }\r\n            },\r\n            //导出\r\n            exportExcel(){\r\n              //this.axios.get('/excel/exportgate', {params: {begincount:0,endcount:99999,sign:this.form.ddtype}});\r\n              window.location.href='/excel/exportgate?sign='+this.form.ddtype+'&begincount=0&endcount=99999';\r\n            },\r\n            //曲线图加载\r\n            reloadchart(){\r\n              this.axios.get('/gatedd/xhchart', {params: {sign:this.form.ddtype}}).then(res => {\r\n                    var _data = JSON.parse(JSON.stringify(res.data));\r\n                    var echartData = {\r\n                        chartName: \"曲线图\",\r\n                        x: new Object(),\r\n                        y1: new Object(),\r\n                        y2: new Object(),\r\n                        y3: new Object(),\r\n                        y4: new Object(),\r\n                        y5: new Object()\r\n                    }\r\n                    echartData.x.list=FilterMethods.methods.newArrayByObjArray(_data, \"Z\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 2520.00;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n                    echartData.y1.list=FilterMethods.methods.newArrayByObjArray(_data, \"DL_Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 1.000;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n                    echartData.y2.list=FilterMethods.methods.newArrayByObjArray(_data, \"XH_Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 1.000;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n                    echartData.y3.list=FilterMethods.methods.newArrayByObjArray(_data, \"SUM_Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 1.000;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n                    this.data2 = echartData;\r\n                    console.log(this.data2);\r\n                    this.drawchart();\r\n                });\r\n            },\r\n             drawchart() {\r\n               var obj_c=this.$refs.achart;\r\n                var achart = this.$echarts.init(obj_c);\r\n                console.log(achart);\r\n                achart.resize();\r\n                achart.setOption({\r\n                    title: {text: \"流量曲线图\"},\r\n                    tooltip: {\r\n                        trigger: \"axis\"\r\n                    },\r\n                    legend: {\r\n                        data: [\"导流洞流量\", \"溢洪洞流量\", \"合计流量\",\"导流洞开度\",\"溢洪洞开度\"]\r\n                    },\r\n                    calculable: true,\r\n                    xAxis: [\r\n                        {\r\n                            type: \"category\",\r\n                            boundaryGap: false,\r\n                            data: this.data2.x.list,\r\n                            axisLabel: { show: true,interval: parseInt(this.data2.x.list.length/14)},\r\n                        }\r\n                    ],\r\n                    yAxis: [\r\n                        {\r\n                            name: \"流量\",\r\n                            type: \"value\",\r\n                            min: 0,\r\n                            max: 1100\r\n                        },\r\n                        {\r\n                            name: \"闸门开度\",\r\n                            type: \"value\",\r\n                            min: 0,\r\n                            max: 4.1\r\n                        }\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: \"导流洞流量\",\r\n                            type: \"line\",\r\n                            yAxisIndex: 0,\r\n                            data: this.data2.y1.list,\r\n                            smooth:true,\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    color: \"#006400\",//折线点的颜色\r\n                                    lineStyle: {\r\n                                        color: \"#006400\"//折线的颜色\r\n                                    }\r\n                                }\r\n                            },\r\n                            // data: [0.36, 0.28, 0.36, 0.02, 0.12]\r\n                        },\r\n                        {\r\n                            name: \"溢洪洞流量\",\r\n                            type: \"line\",\r\n                            yAxisIndex: 0,\r\n                            data: this.data2.y2.list,\r\n                            smooth:true,\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    color: \"#8B0000\",//折线点的颜色\r\n                                    lineStyle: {\r\n                                        color: \"#8B0000\"//折线的颜色\r\n                                    }\r\n                                }\r\n                            },\r\n                        },\r\n                        {\r\n                            name: \"合计流量\",\r\n                            type: \"line\",\r\n                            yAxisIndex: 0,\r\n                            data: this.data2.y3.list,\r\n                            smooth:true,\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    color: \"#9400D3\",//折线点的颜色\r\n                                    lineStyle: {\r\n                                        color: \"#9400D3\"//折线的颜色\r\n                                    }\r\n                                }\r\n                            },\r\n                        },\r\n                    ]\r\n                });\r\n            },\r\n        }\r\n  }\r\n</script>  "]}]}