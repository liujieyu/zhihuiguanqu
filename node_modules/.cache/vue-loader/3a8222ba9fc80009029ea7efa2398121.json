{"remainingRequest":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\visualplace\\zhihuiguanqu\\src\\warm\\warm-file\\file-upload\\uploadfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\src\\warm\\warm-file\\file-upload\\uploadfile.vue","mtime":1645514326254},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n        data(){\r\n            return{\r\n                href:'/file/upload',\r\n                uploadcount:0,\r\n                pdfUrl:'',\r\n                html:''\r\n            }\r\n        },\r\n        mounted(){\r\n           //let url = 'http://localhost:8080/'+this.$WarmTable+'/file/preview?fileName=需求ljx-1基础数据3和hx-闸门调度管理1.13.docx';\r\n           //let url='static/html/web/compressed.tracemonkey-pldi-09.pdf';\r\n           //let url='http://localhost:8080/table_war_exploded/file/showhtml/进度控制表和团队构成.xls';\r\n           //this.pdfUrl='http://localhost:8080/table_war_exploded/pdf/web/viewer.html?file=/table_war_explodedfile/showpdf/需求ljx-1基础数据4.docx';\r\n           //this.pdfUrl = 'http://127.0.0.1:8012/onlinePreview?url='+encodeURIComponent(url);\r\n            this.axios.get('/file/showhtml/进度控制表和团队构成.xls').then((res)=>{\r\n                    this.html=res.data;\r\n                });\r\n        },\r\n        methods:{\r\n            upLoadSuccess(response, file, fileList) {\r\n                this.resErrorStr();\r\n                if(this.uploadcount==fileList.length){\r\n                    this.$message({ type: 'success', message: '上传文件成功！' });\r\n                    this.uploadcount=0;\r\n                    this.$refs.upload.clearFiles();\r\n                }\r\n            },\r\n            resErrorStr() {\r\n                this.uploadcount=0;\r\n                if (this.$refs.upload.uploadFiles) { // 如果存在这个值\r\n                    let filesList = this.$refs.upload.uploadFiles.slice()\r\n                    for (let i = 0; i < filesList.length; i++) {\r\n                        if (filesList[i].response) {\r\n                            if (filesList[i].response == \"上传失败\") { // 如果该文件上传后返回的状态值不是200，则说明该文件上传错误\r\n                              let  UpLoadAllErrorStr = `${filesList[i].name}${filesList[i].response}`;\r\n                                this.$message({\r\n                                    type: 'error',\r\n                                    dangerouslyUseHTMLString: true,\r\n                                    message: UpLoadAllErrorStr\r\n                                });\r\n                            }else{\r\n                                this.uploadcount++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            handleRemove(file, fileList) {\r\n                console.log(file, fileList);\r\n            },\r\n            handlePreview(file) {\r\n                console.log(file);\r\n            },\r\n            beforeRemove(file, fileList) {\r\n               // return this.$confirm(`确定移除 ${ file.name }？`);\r\n            }\r\n        }\r\n}\r\n",{"version":3,"sources":["uploadfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"uploadfile.vue","sourceRoot":"src/warm/warm-file/file-upload","sourcesContent":["<template>\r\n\t<div>\r\n        <Content class=\"searchcon\">\r\n            <el-upload\r\n            ref='upload'\r\n            class=\"upload-demo\"\r\n            :action=\"href\"\r\n            :on-preview=\"handlePreview\"\r\n            :on-remove=\"handleRemove\"\r\n            :before-remove=\"beforeRemove\"\r\n            multiple\r\n            :on-success='upLoadSuccess'\r\n            accept=\".doc,.docx,.xls,.xlsx,.txt,.PDF,.html\">\r\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n            <div slot=\"tip\" class=\"el-upload__tip\">只能上传doc/docx/xls/xlsx/txt/pdf/html文件</div>\r\n            </el-upload>\r\n            <p v-html=\"html\"></p>\r\n            <iframe class=\"prism-player\" :src=\"pdfUrl\" width=\"100%\" height=\"500\"></iframe>\r\n        </Content>\r\n    </div>\r\n</template>\r\n<script type=\"text/javascript\">\r\nexport default {\r\n        data(){\r\n            return{\r\n                href:'/file/upload',\r\n                uploadcount:0,\r\n                pdfUrl:'',\r\n                html:''\r\n            }\r\n        },\r\n        mounted(){\r\n           //let url = 'http://localhost:8080/'+this.$WarmTable+'/file/preview?fileName=需求ljx-1基础数据3和hx-闸门调度管理1.13.docx';\r\n           //let url='static/html/web/compressed.tracemonkey-pldi-09.pdf';\r\n           //let url='http://localhost:8080/table_war_exploded/file/showhtml/进度控制表和团队构成.xls';\r\n           //this.pdfUrl='http://localhost:8080/table_war_exploded/pdf/web/viewer.html?file=/table_war_explodedfile/showpdf/需求ljx-1基础数据4.docx';\r\n           //this.pdfUrl = 'http://127.0.0.1:8012/onlinePreview?url='+encodeURIComponent(url);\r\n            this.axios.get('/file/showhtml/进度控制表和团队构成.xls').then((res)=>{\r\n                    this.html=res.data;\r\n                });\r\n        },\r\n        methods:{\r\n            upLoadSuccess(response, file, fileList) {\r\n                this.resErrorStr();\r\n                if(this.uploadcount==fileList.length){\r\n                    this.$message({ type: 'success', message: '上传文件成功！' });\r\n                    this.uploadcount=0;\r\n                    this.$refs.upload.clearFiles();\r\n                }\r\n            },\r\n            resErrorStr() {\r\n                this.uploadcount=0;\r\n                if (this.$refs.upload.uploadFiles) { // 如果存在这个值\r\n                    let filesList = this.$refs.upload.uploadFiles.slice()\r\n                    for (let i = 0; i < filesList.length; i++) {\r\n                        if (filesList[i].response) {\r\n                            if (filesList[i].response == \"上传失败\") { // 如果该文件上传后返回的状态值不是200，则说明该文件上传错误\r\n                              let  UpLoadAllErrorStr = `${filesList[i].name}${filesList[i].response}`;\r\n                                this.$message({\r\n                                    type: 'error',\r\n                                    dangerouslyUseHTMLString: true,\r\n                                    message: UpLoadAllErrorStr\r\n                                });\r\n                            }else{\r\n                                this.uploadcount++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            handleRemove(file, fileList) {\r\n                console.log(file, fileList);\r\n            },\r\n            handlePreview(file) {\r\n                console.log(file);\r\n            },\r\n            beforeRemove(file, fileList) {\r\n               // return this.$confirm(`确定移除 ${ file.name }？`);\r\n            }\r\n        }\r\n}\r\n</script>"]}]}