{"remainingRequest":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\visualplace\\zhihuiguanqu\\src\\components\\Details\\Details-shuikushuiqing.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\src\\components\\Details\\Details-shuikushuiqing.vue","mtime":1647074034154},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\babel.config.js","mtime":1577669403468},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseFloat from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FilterMethods from \"../../assets/commonJS/FilterMethods\"; // 过滤方法\n\nimport GetDataMethods from \"../../assets/commonJS/GetDataMethods\"; // 获取数据方法\n\nimport { timingSafeEqual } from \"crypto\";\nimport { type } from \"os\";\nimport { types } from \"util\";\nimport { stat } from \"fs\";\nimport { filter } from \"minimatch\";\nexport default {\n  props: {\n    info: {}\n  },\n  data: function data() {\n    return {\n      // 激活标签栏\n      activeName: \"shuiqingshuju\",\n      // 站点\n      siteInfo: {},\n      //   多选框对象\n      checkBox: {},\n      //   选择框对象\n      select: {\n        // 当前激活的水位数据快速查询选项\n        activeQuickSearchList: [],\n        // 查询绑定值\n        select: \"rec6\",\n        // 日期选择器绑定值\n        shuiqing_datePicker: null,\n        // 水位数据历史表\n        shuiqingList: [{\n          value: \"historyTable\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          label: \"历史水情\"\n        }, {\n          value: \"hourTable\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          label: \"小时水情\"\n        }, {\n          value: \"dayTable\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          label: \"日水情\"\n        }, {\n          value: \"monthTable\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          label: \"月水情\"\n        }],\n        // 水位数据历史表绑定值\n        shuiqing_select: \"historyTable\"\n      },\n      // 表格\n      table: {\n        // 水情\n        shuiqing: {\n          // 表头设置\n          columns: {\n            // 历史表\n            historyTable: [{\n              type: \"index\",\n              title: \" \",\n              width: 60,\n              align: \"center\",\n              // 自定义序号\n              indexMethod: function indexMethod(item) {\n                var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n                return index;\n              },\n              ellipsis: true\n            }, {\n              title: \"时间\",\n              key: \"tm\",\n              width: 150,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库前水位(m)\",\n              width: 150,\n              key: \"RZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库下水位(m)\",\n              width: 150,\n              key: \"BLRZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 140,\n              title: \"入库流量(m³/s)\",\n              key: \"INQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 140,\n              title: \"出库流量(m³/s)\",\n              key: \"OTQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }],\n            // 小时表\n            hourTable: [{\n              title: \" \",\n              type: \"index\",\n              width: 50,\n              align: \"center\",\n              // 自定义序号\n              indexMethod: function indexMethod(item) {\n                var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n                return index;\n              },\n              ellipsis: true\n            }, {\n              title: \"时间\",\n              key: \"dt\",\n              width: 150,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库前水位(m)\",\n              width: 150,\n              key: \"RZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库下水位(m)\",\n              width: 150,\n              key: \"BLRZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 160,\n              title: \"平均入库流量(m³/s)\",\n              key: \"INQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 160,\n              title: \"平均出库流量(m³)\",\n              key: \"OTQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }],\n            // 日表\n            dayTable: [{\n              title: \" \",\n              type: \"index\",\n              width: 50,\n              align: \"center\",\n              // 自定义序号\n              indexMethod: function indexMethod(item) {\n                var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n                return index;\n              },\n              ellipsis: true\n            }, {\n              title: \"时间\",\n              key: \"tm\",\n              width: 150,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库前水位(m)\",\n              width: 150,\n              key: \"RZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库下水位(m)\",\n              width: 150,\n              key: \"BLRZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 170,\n              title: \"平均入库流量(m³/s)\",\n              key: \"INQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 170,\n              title: \"平均出库流量(m³)\",\n              key: \"OTQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }],\n            // 月表\n            monthTable: [{\n              title: \" \",\n              type: \"index\",\n              width: 50,\n              align: \"center\",\n              // 自定义序号\n              indexMethod: function indexMethod(item) {\n                var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n                return index;\n              },\n              ellipsis: true\n            }, {\n              title: \"时间\",\n              key: \"dt\",\n              width: 150,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库水位(m)\",\n              width: 150,\n              key: \"RZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库下水位(m)\",\n              width: 150,\n              key: \"BLRZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 180,\n              title: \"平均入库流量(m³/s)\",\n              key: \"INQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 170,\n              title: \"平均出库流量(m³)\",\n              key: \"OTQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }]\n          },\n          // 正在激活的表头\n          activeColumns: [],\n          // 表体内容\n          Rows: [],\n          // 过滤后的表体内容\n          Rows_filter: [],\n          // 日期时间选择器的选项配置\n          datePickerOptions: {\n            historyTable: {\n              shortcuts: [{\n                text: \"最近6小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 6);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近12小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 12);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近24小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近36小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 36);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近72小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 72);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }]\n            },\n            hourTable: {\n              shortcuts: [{\n                text: \"最近6小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 6);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近12小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 12);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近24小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近36小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 36);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近72小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 72);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }]\n            },\n            dayTable: {\n              shortcuts: [{\n                text: \"最近10天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 10);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近15天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 15);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近30天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近60天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 60);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近90天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }]\n            },\n            monthTable: {\n              shortcuts: []\n            }\n          },\n          // 日期时间选择器类型\n          datePickerType: \"date\",\n          // 日期时间选择器值\n          date: null,\n          // 排序\n          sort: null,\n          // 表格是否加载中\n          loading: false,\n          // 总条数\n          total: 0,\n          // 当前页\n          currentPage: 1,\n          // 每页显示数量\n          pageSizes: 20,\n          // 表格高度\n          height: 430\n        },\n        // 关系曲线\n        guanxiquxian: {\n          // 表头设置\n          columns: [{\n            title: \" \",\n            type: \"index\",\n            width: 60,\n            align: \"center\",\n            // 自定义序号\n            indexMethod: function indexMethod(item) {\n              var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n              return index;\n            },\n            ellipsis: true\n          }, {\n            // width: 100,\n            title: \"时间\",\n            key: \"TM\",\n            align: \"center\"\n          }, {\n            title: \"水位(m)\",\n            width: 110,\n            key: \"RZ\",\n            align: \"center\"\n          }, {\n            title: \"库容（万m³）\",\n            key: \"W\",\n            width: 140,\n            align: \"center\"\n          }],\n          // 日期时间选择器的选项配置\n          datePickerOptions: {\n            shortcuts: [{\n              text: \"最近5年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 5);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近3年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 3);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近2年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 2);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近1年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 1);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }]\n          },\n          // 表体内容\n          Rows: [],\n          // 过滤后的表体内容\n          Rows_filter: [],\n          // 表格是否加载中\n          loading: false,\n          // 日期时间选择器值\n          date: null,\n          // 总条数\n          total: 0,\n          // 表格高度\n          height: 440,\n          // 当前页\n          currentPage: 1,\n          // 每页显示数量\n          pageSizes: 20\n        },\n        // 特征水位\n        tezhengshuiqing: {\n          // 表头设置\n          columns: [{\n            title: \" \",\n            type: \"index\",\n            width: 50,\n            align: \"center\",\n            // 自定义序号\n            indexMethod: function indexMethod(item) {\n              var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n              return index;\n            },\n            ellipsis: true\n          }, {\n            // width: 100,\n            title: \"最高水位时间\",\n            key: \"TMHZ\",\n            align: \"center\",\n            sortable: true\n          }, {\n            // width: 100,\n            title: \"年最高水位(m)\",\n            key: \"THZ\",\n            align: \"center\",\n            sortable: true\n          }],\n          // 表体内容\n          Rows: [],\n          // 过滤后的表体内容\n          Rows_filter: [],\n          // 总条数\n          total: 0,\n          // 表格是否加载中\n          loading: false,\n          // 当前页\n          currentPage: 1,\n          // 日期时间选择器值\n          date: null,\n          // 日期时间选择器的选项配置\n          datePickerOptions: {\n            shortcuts: [{\n              text: \"最近5年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 5);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近3年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 3);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近2年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 2);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近1年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 1);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }]\n          },\n          // 表格高度\n          height: 410,\n          // 每页显示数量\n          pageSizes: 20,\n          alarmData: {\n            FWL: \"\",\n            // 4-6月汛限水位\n            FWL79: \"\",\n            // 7-9月汛限水位\n            SJWL: \"\",\n            // 设计洪水位\n            JYWL: \"\" // 经验水位\n\n          }\n        }\n      },\n      // 图形\n      chart: {\n        shuiqing: null\n      },\n      //   日期数据\n      date: {\n        shuiqing: \"\"\n      },\n      // 输入框对象\n      input: {\n        // 关系曲线换算的\n        huansuan: {\n          waterLever: \"\",\n          flowLever: \"\"\n        }\n      },\n      //   导出按钮加载控制\n      outPutLoading: false,\n      //   导出确认对话框控制\n      outPutModal: false,\n      // 整块区域的加载控制\n      boxLoading: false,\n      //预警数据\n      yujingdata: {\n        FWL: null,\n        // 4-6月汛限水位\n        FWL79: null,\n        // 7-9月汛限水位\n        SJWL: null,\n        // 设计洪水位\n        JYWL: null // 经验水位\n\n      },\n      tableType: ''\n    };\n  },\n  mixins: [FilterMethods, GetDataMethods],\n  methods: {\n    //   导出站点信息\n    outPutSiteInfo: function outPutSiteInfo() {\n      var _this = this;\n\n      //   关闭导出确认对话框\n      this.outPutModal = false; //   按钮加载\n\n      this.outPutLoading = true;\n      setTimeout(function () {\n        _this.outPutLoading = false;\n\n        _this.$Modal.success({\n          title: \"关于导出\",\n          content: \"站点信息表导出成功\"\n        });\n      }, 500);\n    },\n    //   确认导出\n    outPutSure: function outPutSure() {\n      this.outPutSiteInfo();\n    },\n    // 日期时间选择器变化触发事件\n    // handleDatePickerChange(val, valType) {\n    //   var timeInterval = `${val[0].replace(/\\//g, \"-\")},${val[1].replace(\n    //     /\\//g,\n    //     \"-\"\n    //   )}`;\n    //   this.select.shuiqing_datePicker = timeInterval;\n    // },\n    datePicke_on_ok: function datePicke_on_ok(tableType) {\n      var _this2 = this;\n\n      this.table[\"shuiqing\"].currentPage = 1; // 重置当前页\n\n      this.table.shuiqing.loading = true; // 表格加载中\n\n      var body = {\n        STCD: this.siteInfo.STCD,\n        TM: \"bt,\".concat(this.select.shuiqing_datePicker)\n      };\n      var pageSizes = this.table.shuiqing.pageSizes;\n      var currentPage = 1;\n      this.getTableData_shuiqing(tableType, pageSizes, currentPage, body, function (data) {\n        _this2.setTableTotal(\"shuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\n\n\n        _this2.setTableData(\"shuiqing\", data.data); // 更新水情历史数据表的数据\n\n\n        _this2.table.shuiqing.loading = false; // 取消表格加载\n      });\n    },\n    // 查询\n    search_shuiqing: function search_shuiqing(tableType) {\n      var _this3 = this;\n\n      var tableType = tableType || this.select.shuiqing_select;\n      this.letTableLoading(\"shuiqing\"); // 表格加载中\n\n      console.log('+++++++++++++' + tableType); // 传递参数\n\n      var body = {\n        STCD: this.siteInfo.STCD,\n        _page: this.table.shuiqing.currentPage || 1,\n        _page_size: this.table.shuiqing.pageSizes || 20\n      }; // 如果有选择排序，则传递排序参数\n\n      if (this.table.shuiqing.sort) {\n        var _sort = this.$FilterData.sort_Filter(this.table.shuiqing.sort);\n\n        if (_sort) {\n          body._orderby = _sort;\n        }\n      } // 如果有选择日期进行查询，根据表格类型传递参数\n\n\n      if (this.table.shuiqing.date) {\n        switch (tableType) {\n          case \"historyTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2];\n            break;\n\n          case \"dayTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1].substr(0, 10);\n            body.Time_max = DTT[2].substr(0, 10);\n            break;\n\n          case \"hourTable\":\n            console.log('~~~~~~~~~~~~~~~~~~~~~~~' + tableType);\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2];\n            break;\n\n          case \"monthTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date, \"monthTable\").split(\",\");\n            body.Time_min = DTT[1].substring(0, 7);\n            body.Time_max = DTT[2].substring(0, 7); // body.YE = this.$FilterData.elDatePicker_Filter(\n            //   this.table.shuiqing.date,\n            //   \"monthTable\"\n            // ).YE;\n            // body.MON = this.$FilterData.elDatePicker_Filter(\n            //   this.table.shuiqing.date,\n            //   \"monthTable\"\n            // ).MON;\n\n            break;\n        }\n      } // 获取水库水情历史数据\n\n\n      this.$GetData.Survey_History_SKSQ(tableType, body, {\n        default: true,\n        myFilter: function myFilter(data) {\n          data.map(function (val) {\n            val.currentPage = body._page;\n            val.pageSizes = body._page_size;\n            return val;\n          });\n          return data;\n        }\n      }, function (data) {\n        _this3.setTableTotal(\"shuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\n\n\n        _this3.setTableData(\"shuiqing\", data.data); // 更新水情历史数据表的数据\n\n\n        body._page_size = 999999999;\n        body._page = 1;\n\n        _this3.$GetData.Survey_History_SKSQ(tableType, body, {\n          default: true,\n          myFilter: function myFilter(data) {\n            data.map(function (val) {\n              val.currentPage = body._page;\n              val.pageSizes = body._page_size;\n              return val;\n            });\n            return data;\n          }\n        }, function (chartData) {\n          _this3.createChart_shuiqingshuju(\"shuiqingChart\", tableType, chartData.data); // 水情表格\n\n        });\n\n        _this3.cancelTableLoading(\"shuiqing\"); // 取消表格加载\n\n      });\n    },\n    // 设置表格总条数\n    setTableTotal: function setTableTotal(tableName, total) {\n      this.table[tableName].total = total;\n    },\n    // 表格加载中\n    letTableLoading: function letTableLoading(tableName) {\n      this.table[tableName].loading = true;\n    },\n    // 取消表格加载\n    cancelTableLoading: function cancelTableLoading(tableName) {\n      this.table[tableName].loading = false;\n    },\n    // 绘图\n    createChart_guanxiquxian: function createChart_guanxiquxian(idName) {\n      var myChart = this.$echarts.init(document.getElementById(idName));\n      myChart.setOption({\n        title: {// text: this.info.STNM\n          // subtext: \"纯属虚构\"\n        },\n        tooltip: {\n          trigger: \"axis\"\n        },\n        legend: {\n          data: [\"流量\", \"水位\"]\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {\n              show: true\n            },\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: [\"line\", \"bar\"]\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        calculable: true,\n        xAxis: [{\n          type: \"category\",\n          boundaryGap: false,\n          data: [\"00:00-02:00\", \"02:00-04:00\", \"04:00-06:00\", \"06:00-08:00\", \"08:00-10:00\"]\n        }],\n        yAxis: [{\n          name: \"流量 m³/s\",\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value}\"\n          }\n        }, {\n          name: \"水位 m\",\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value} \"\n          }\n        }],\n        series: [{\n          name: \"流量\",\n          type: \"line\",\n          data: [11, 11, 15, 13, 12, 13, 10],\n          markLine: {\n            data: [{\n              type: \"average\",\n              name: \"平均值\"\n            }]\n          }\n        }, {\n          name: \"水位\",\n          type: \"line\",\n          data: [1, 4, 2, 5, 3, 2, 0],\n          yAxisIndex: 1,\n          markLine: {\n            data: [{\n              type: \"average\",\n              name: \"平均值\"\n            }],\n            effect: {\n              show: false,\n              loop: true,\n              period: 15,\n              scaleSize: 10,\n              color: null,\n              shadowColor: null,\n              shadowBlur: null\n            }\n          }\n        }]\n      });\n    },\n    // 制图\n    createChart_shuiqingshuju: function createChart_shuiqingshuju(id, tableType, data) {\n      var ele = document.getElementById(id);\n\n      if (data.length > 0) {\n        var echartData = this.$App.transform_SKSQ_data_into_ehart_data(data, tableType, true); // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n\n        var mintime = echartData.x.list[0].slice(0, 10),\n            maxtime = echartData.x.list[echartData.x.list.length - 1].slice(0, 10);\n        var nowDate = new Date();\n\n        if (mintime.slice(0, 4) == maxtime.slice(0, 4) && maxtime.slice(0, 4) == nowDate.getFullYear()) {\n          for (var i = 0; i < echartData.x.list.length; i++) {\n            var time = echartData.x.list[i].substr(5);\n            echartData.x.list[i] = time;\n          }\n        }\n\n        switch (echartData.chartName) {\n          case \"历史表\":\n            echartData.chartName = \"历史水情图\";\n            break;\n\n          case \"小时表\":\n            echartData.chartName = \"小时水情图\";\n            break;\n\n          case \"日表\":\n            echartData.chartName = \"日水情图\";\n            break;\n\n          case \"月表\":\n            echartData.chartName = \"月水情图\";\n            break;\n\n          case \"年表\":\n            echartData.chartName = \"年水情图\";\n            break;\n        }\n\n        console.log(echartData);\n        console.log(echartData.x.list);\n\n        if (!this.chart.shuiqing) {\n          this.chart.shuiqing = this.$echarts.init(ele);\n        }\n\n        this.chart.shuiqing.setOption({\n          title: {\n            text: echartData.chartName\n          },\n          tooltip: {\n            trigger: \"axis\"\n          },\n          legend: {\n            data: [echartData.y1.name, echartData.y2.name],\n            y: \"bottom\"\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              mark: {\n                show: true\n              },\n              magicType: {\n                show: true,\n                type: [\"line\", \"bar\"]\n              },\n              saveAsImage: {\n                show: true\n              }\n            }\n          },\n          calculable: true,\n          animation: true,\n          xAxis: [{\n            type: \"category\",\n            boundaryGap: false,\n            data: echartData.x.list\n          }],\n          yAxis: [{\n            name: \"\\u6C34\\u4F4D m\",\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value} \"\n            },\n            scale: true,\n            max: echartData.y1.max,\n            min: echartData.y1.min\n          }],\n          series: [{\n            name: echartData.y1.name,\n            type: \"line\",\n            data: echartData.y1.list\n          }, {\n            name: echartData.y2.name,\n            type: \"line\",\n            data: echartData.y2.list\n          }]\n        });\n      }\n    },\n    // 加载站点数据\n    loadSiteData: function loadSiteData(data) {\n      this.siteInfo = data;\n    },\n    // 组件加载中\n    componentLoading: function componentLoading() {\n      this.boxLoading = true;\n    },\n    // 取消组件加载\n    cancelComponentLoading: function cancelComponentLoading() {\n      this.boxLoading = false;\n    },\n    // 处理页码切换_水位数据\n    handleCurrentChange_shuiqing: function handleCurrentChange_shuiqing(index) {\n      this.table[\"shuiqing\"].currentPage = index;\n      this.search_shuiqing(this.shuiqing_select);\n    },\n    // 处理页码切换_关系曲线\n    handleCurrentChange_guanxiquxian: function handleCurrentChange_guanxiquxian(index) {\n      this.table[\"guanxiquxian\"].currentPage = index;\n      this.search_guanxiquxian();\n    },\n    // 处理页码切换_特征水位\n    handleCurrentChange_tezhengshuiqing: function handleCurrentChange_tezhengshuiqing() {\n      this.table[\"tezhengshuiqing\"].currentPage = index;\n      this.search_tezhengshuiqing();\n    },\n    // 处理每页显示条数切换_水位数据\n    handleSizeChange_shuiqing: function handleSizeChange_shuiqing(pageSizes) {\n      this.table[\"shuiqing\"].pageSizes = pageSizes;\n      this.table[\"shuiqing\"].currentPage = 1;\n      this.search_shuiqing(this.shuiqing_select);\n    },\n    // 处理每页显示条数切换_关系曲线\n    handleSizeChange_guanxiquxian: function handleSizeChange_guanxiquxian(pageSizes) {\n      this.table[\"guanxiquxian\"].pageSizes = pageSizes;\n      this.table[\"guanxiquxian\"].currentPage = 1;\n      this.search_guanxiquxian();\n    },\n    // 处理每页显示条数切换_特征水位\n    handleSizeChange_tezhengshuiqing: function handleSizeChange_tezhengshuiqing(pageSizes) {\n      this.table[\"tezhengshuiqing\"].pageSizes = pageSizes;\n      this.table[\"tezhengshuiqing\"].currentPage = 1;\n      this.search_tezhengshuiqing();\n    },\n    // 分页过滤\n    pageFilter: function pageFilter(currentPage, pageSizes, tableName) {\n      // 截取数组\n      var newList = this.table[tableName].Rows_filter.slice((currentPage - 1) * pageSizes, currentPage * pageSizes);\n      return newList;\n    },\n    // 水情历史数据表 当前正在激活的表头\n    setActiveColumns_shuiqing: function setActiveColumns_shuiqing(tableType) {\n      console.log(this.info);\n      console.log(tableType);\n      console.log(this.table.shuiqing.columns);\n      this.table.shuiqing.activeColumns = this.table.shuiqing.columns[tableType];\n      this.select.shuiqing_select = tableType;\n      console.log(this.table.shuiqing.activeColumns);\n    },\n    // 切换 水情历史数据表类型\n    tableTypeOnChange_shuiqing: function tableTypeOnChange_shuiqing(tableType) {\n      console.log(this.table);\n      console.log('............................' + tableType);\n      this.tableType = tableType;\n      this.table[\"shuiqing\"].currentPage = 1;\n      this.table[\"shuiqing\"].date = null;\n      this.table[\"shuiqing\"].sort = null;\n      console.log(this.table);\n      this.setDatePickerType_shuiqing(tableType); // 设置日期时间选择器的类型\n      // this.select[\"shuiqing_select\"] = tableType; // 设置选中的表\n      // this.setSelectOption_quickSearch(tableType); // 设置数据表快速查询选择框内容\n\n      this.setActiveColumns_shuiqing(tableType); // 设置水情历史数据表 当前激活的表头\n\n      this.table.shuiqing.loading = true; // 表格加载中\n\n      if (this[\"setTableDefaultDate_shuiqing_\".concat(tableType)]) {\n        this[\"setTableDefaultDate_shuiqing_\".concat(tableType)]();\n      } // 获取对应水情历史数据表的数据\n\n\n      this.search_shuiqing(tableType);\n    },\n    // 设置水位数据历史表默认查询日期\n    setTableDefaultDate_shuiqing_historyTable: function setTableDefaultDate_shuiqing_historyTable() {\n      var end = new Date();\n      var start = zeroPointOfTheDay();\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置水位数据小时表默认查询日期\n    setTableDefaultDate_shuiqing_hourTable: function setTableDefaultDate_shuiqing_hourTable() {\n      var end = new Date();\n      var start = zeroPointOfTheDay();\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置水位数据日表默认查询日期\n    setTableDefaultDate_shuiqing_dayTable: function setTableDefaultDate_shuiqing_dayTable() {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置水位数据月表默认查询日期\n    setTableDefaultDate_shuiqing_monthTable: function setTableDefaultDate_shuiqing_monthTable() {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 160);\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置日期时间选择器的类型\n    setDatePickerType_shuiqing: function setDatePickerType_shuiqing(tableType) {\n      var datePickerType;\n\n      switch (tableType) {\n        case \"historyTable\":\n          datePickerType = \"datetimerange\";\n          break;\n\n        case \"hourTable\":\n          datePickerType = \"datetimerange\";\n          break;\n\n        case \"dayTable\":\n          datePickerType = \"daterange\";\n          break;\n\n        case \"monthTable\":\n          datePickerType = \"monthrange\";\n          break;\n      }\n\n      this.table[\"shuiqing\"].datePickerType = datePickerType;\n    },\n    // 设置数据表快速查询选择框内容\n    setSelectOption_quickSearch: function setSelectOption_quickSearch(tableType) {\n      this.select.activeQuickSearchList = this.select.quickSearch[tableType];\n      this.select.select = this.select.activeQuickSearchList[0] ? this.select.activeQuickSearchList[0].value : null; // 设置默认值为第一项\n    },\n    // 获取特征水位表格的数据\n    getTableData_tezhengshuiqing: function getTableData_tezhengshuiqing(pageSizes, currentPage, body, callback, callback_beforeFilter) {\n      var _this4 = this;\n\n      this.axios.get(\"/guanqu/admin/ST_G_CQORD?_page_size=\".concat(pageSizes || 20, \"&_page=\").concat(currentPage || 1), {\n        params: body\n      }).then(function (res) {\n        if (typeof callback_beforeFilter == \"function\") {\n          callback_beforeFilter({\n            data: res.data.rows || [],\n            total: res.data.total || 0\n          });\n        }\n\n        console.log(\"tezhengshuiqing\", res); // 水位数据过滤\n\n        var data = res.data.rows.map(function (val) {\n          val.currentPage = _this4.table.shuiqing.currentPage; // 添加数据当前页码\n\n          val.pageSizes = _this4.table.shuiqing.pageSizes; // 添加当前每页条数到数据\n\n          val.TMMXQ = _this4.dateFilter(val.TMMXQ); // 日期过滤\n\n          val.TMXQ = _this4.Z_Filter(val.TMXQ, 3); // 平均流量过滤\n\n          val.YMXQZ = _this4.Z_Filter(val.YMXQZ); // 平均水位过滤\n\n          val.WQ = _this4.Z_Filter(val.WQ, 3); // 小时累计水量过滤\n\n          return val;\n        });\n\n        if (typeof callback == \"function\") {\n          callback({\n            data: data,\n            total: res.data.total\n          });\n        }\n      });\n    },\n    // 获取特征水位预警信息表的数据\n    getTableData_tezhengshuiqing_Alarm: function getTableData_tezhengshuiqing_Alarm(body, callback, callback_beforeFilter) {\n      var _this5 = this;\n\n      this.axios.get(\"/guanqu/admin/ST_Canal_Alarm\", {\n        params: body\n      }).then(function (res) {\n        var data = res.data.rows;\n\n        if (typeof callback_beforeFilter == \"function\") {\n          callback_beforeFilter(res);\n        } // 水位数据过滤\n\n\n        var data = res.data.rows.map(function (val) {\n          val.Q = _this5.Z_Filter(val.Q, 3); // 流量过滤\n\n          val.Z = _this5.Z_Filter(val.Z); // 水位过滤\n\n          val.JYQ = _this5.Z_Filter(val.JYQ, 3); // 预警流量过滤\n\n          val.JYZ = _this5.Z_Filter(val.JYZ); // 预警水位过滤\n\n          return val;\n        });\n\n        if (typeof callback == \"function\") {\n          callback(data);\n        }\n      });\n    },\n    // 更新 XX 表格的数据\n    setTableData: function setTableData(tableName, data) {\n      this.table[tableName].Rows_filter = data;\n    },\n    // 获取对应关系曲线数据表的数据\n    getTableData_guanxiquxian: function getTableData_guanxiquxian(callback) {\n      this.axios.get(\"/guanqu/admin/ST_ZQRL_B\", {\n        params: {\n          STCD: this.info.STCD\n        }\n      }).then(function (res) {\n        var data = res.data.rows;\n\n        if (typeof callback == \"function\") {\n          callback(data);\n        }\n      });\n    },\n    // 更新水情历史数据表的数据\n    setTableData_guanxiquxian: function setTableData_guanxiquxian(data) {\n      this.table.guanxiquxian.Rows_filter = data;\n    },\n    // 根据关联编号获取关联站点\n    getRelateSiteByRelateCode: function getRelateSiteByRelateCode(callback) {\n      var RELATECODE = this.info.RELATECODE;\n\n      if (RELATECODE && RELATECODE != 0) {\n        this.axios.get(\"/guanqu/admin/ST_STBPRP_B\", {\n          params: {\n            RELATECODE: RELATECODE\n          }\n        }).then(function (res) {\n          var data = res.data.rows;\n\n          if (typeof callback == \"function\") {\n            callback(data);\n          }\n        });\n      }\n    },\n    // 根据行政区划编码获取行政区划\n    getCompartmentByADDVCD: function getCompartmentByADDVCD(callback) {\n      var ADDVCD = this.info.rowinfo.ADDVCD;\n\n      if (ADDVCD && ADDVCD != \"\") {\n        this.axios.get(\"/guanqu/admin/WRP_AD_B\", {\n          params: {\n            AD_CD: ADDVCD\n          }\n        }).then(function (res) {\n          var data = res.data.rows;\n\n          if (typeof callback == \"function\") {\n            callback(data);\n          }\n        });\n      }\n    },\n    // 特征水位表格查询\n    search_tezhengshuiqing: function search_tezhengshuiqing() {\n      var _this6 = this;\n\n      // this.letTableLoading(\"tezhengshuiqing\"); // 表格加载中\n      // 传递站码参数\n      var body = {\n        STCD: this.siteInfo.STCD,\n        _page: this.table.tezhengshuiqing.currentPage,\n        _page_size: this.table.tezhengshuiqing.pageSizes\n      };\n\n      if (this.table.tezhengshuiqing.date) {\n        body.YR = this.$FilterData.elDatePicker_Filter(this.table.tezhengshuiqing.date, \"maxQTable\");\n      }\n\n      this.$GetData.Survey_History_SKSQ(\"maxZ\", body, {\n        default: true,\n        myFilter: function myFilter(data) {\n          data.map(function (val) {\n            val.currentPage = body._page;\n            val.pageSizes = body._page_size;\n            return val;\n          });\n          return data;\n        }\n      }, function (data) {\n        _this6.setTableTotal(\"tezhengshuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\n\n\n        _this6.setTableData(\"tezhengshuiqing\", data.data); // 更新特征水位数据表的数据\n\n\n        _this6.cancelTableLoading(\"tezhengshuiqing\"); // 取消表格加载\n\n      }); // // 获取特征水位表格数据\n      // this.getTableData_tezhengshuiqing(pageSizes, currentPage, body, data => {\n      // });\n    },\n    // 设置特征水位预警信息数据\n    setAlarmData_tezhengshuiqing: function setAlarmData_tezhengshuiqing(data) {\n      this.table.tezhengshuiqing.alarmData = data;\n    },\n    // 处理日期时间选择器确定事件_水位数据\n    handleDatePickerChange: function handleDatePickerChange(item) {\n      this.table.shuiqing.currentPage = 1;\n      this.shuiqing_select = this.tableType;\n      console.log(this.shuiqing_select);\n      this.search_shuiqing(this.shuiqing_select);\n    },\n    // 设置水库水情预警信息\n    set_SKSQ_alarmInfo: function set_SKSQ_alarmInfo(STCD) {\n      var _this7 = this;\n\n      console.warn(\"set_SKSQ_alarmInfo\", STCD);\n      this.$GetData.Survey_History_SKSQ(\"alarmTable\", {\n        STCD: STCD\n      }, true, function (data) {\n        var yujingdata = data.data[0];\n        _this7.yujingdata.FWL = yujingdata.FWL;\n        _this7.yujingdata.FWL79 = yujingdata.FWL79;\n        _this7.yujingdata.SJWL = yujingdata.SJWL;\n        _this7.yujingdata.JYWL = yujingdata.JYWL; // 如果查询日期是 4-6 月，如果是 7-9 月\n        // if (is_Between_4_and_6(date)) {\n        //   this.yujingdata.FWL = yujingdata.FWL\n        // } else if (is_Between_7_and_9(date)) {\n        //   this.yujingdata.FWL = yujingdata.FWL79\n        // }\n        // console.log(\"Survey_History_SKSQ\", data.data)\n      }); // function is_Between_4_and_6 (date) {\n      //   var start, start_Year, start_Month, start_Day, start_Hours, start_Minutes;\n      //           start = date[0];\n      //           start_Year = start.getFullYear();\n      //           start_Month = addZero((start.getMonth() + 1));\n      //           start_Day = addZero(start.getDate());\n      //           start_Hours = addZero(start.getHours());\n      //           start_Minutes = addZero(start.getMinutes());\n      //           start = `${start_Year}-${start_Month}-${start_Day} ${start_Hours}:${start_Minutes}`;\n      //           var end, end_Year, end_Month, end_Day, end_Hours, end_Minutes;\n      //           end = date[1];\n      //           end_Year = end.getFullYear();\n      //           end_Month = addZero(end.getMonth() + 1);\n      //           end_Day = addZero(end.getDate());\n      //           end_Hours = addZero(end.getHours());\n      //           end_Minutes = addZero(end.getMinutes());\n      //   console.log(\"date\", date)\n      // }\n      // function is_Between_7_and_9 (date) {\n      // }\n    },\n    handleDatePickerChange_tezhengshuiqing: function handleDatePickerChange_tezhengshuiqing() {\n      this.table.tezhengshuiqing.currentPage = 1;\n      this.search_tezhengshuiqing();\n    },\n    handleDatePickerChange_guanxiquxian: function handleDatePickerChange_guanxiquxian(item) {\n      console.log(\"item\", item);\n      this.search_guanxiquxian();\n    },\n    // 设置 xx表格 时间选择器值\n    setTableDate: function setTableDate(tableName, val) {\n      this.table[tableName].date = val;\n    },\n    // 特征水情表默认查询时间\n    setTableDefaultDate_tezhengshuiqing: function setTableDefaultDate_tezhengshuiqing() {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 5);\n      var timeSlot = [start, end];\n      this.setTableDate(\"tezhengshuiqing\", timeSlot);\n    },\n    // 排序\n    sort_change_shuiqing: function sort_change_shuiqing(item) {\n      this.table.shuiqing.sort = item;\n      this.search_shuiqing(this.shuiqing_select);\n    },\n    // 查询关系曲线表格\n    search_guanxiquxian: function search_guanxiquxian() {\n      // this.letTableLoading(\"guanxiquxian\");\n      // // 传递参数\n      // var body = {\n      //   STCD: this.siteInfo.STCD,\n      //   _page: this.table[\"guanxiquxian\"].currentPage || 1,\n      //   _page_size: this.table[\"guanxiquxian\"].pageSizes || 20\n      // };\n      var end = new Date();\n      var start = zeroPointOfTheDay();\n      var timeSlot = [start, end];\n      this.setTableDate(\"guanxiquxian\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n\n      this.loadkrlineBydate(); // 如果有选择日期进行查询，根据表格类型传递参数\n      // if (this.table.guanxiquxian.date) {\n      //   body.YR = this.$FilterData.elDatePicker_Filter(\n      //     this.table.guanxiquxian.date,\n      //     \"onlyYear\"\n      //   );\n      // }\n      // this.$GetData.Base_MonitoringSites(\n      //   \"Z_Q_relation\",\n      //   body,\n      //   {\n      //     default: true,\n      //     myFilter: data => {\n      //       data.map(val => {\n      //         val.currentPage = body._page;\n      //         val.pageSizes = body._page_size;\n      //         return val;\n      //       });\n      //       return data;\n      //     }\n      //   },\n      //   data => {\n      //     this.setTableTotal(\"guanxiquxian\", data.total);\n      //     this.setTableData(\"guanxiquxian\", data.data);\n      //     this.cancelTableLoading(\"guanxiquxian\");\n      //   }\n      // );\n    },\n    loadkrlineBydate: function loadkrlineBydate() {\n      var _this8 = this;\n\n      var obj = {\n        begintime: this.table.guanxiquxian.date[0],\n        endtime: this.table.guanxiquxian.date[1],\n        sitename: this.siteInfo.STCD\n      };\n      this.axios.get('/fieldinfo/swkrdatabydate', {\n        params: obj\n      }).then(function (res) {\n        var _data = res.data; // 数据深拷贝\n\n        _data = _data.map(function (val) {\n          val.currentPage = 1;\n          val.pageSizes = 20;\n          return val;\n        });\n\n        _this8.setTableData(\"guanxiquxian\", _data);\n\n        _this8.setTableTotal(\"guanxiquxian\", _data.length);\n\n        _this8.table[\"guanxiquxian\"].currentPage = 1;\n        _this8.table[\"guanxiquxian\"].pageSizes = 20;\n        var echartData = {\n          chartName: \"\",\n          x: new Object(),\n          y1: new Object(),\n          y2: new Object(),\n          y3: new Object(),\n          markdata: [] // y1轴\n\n        };\n        echartData.y1.name = \"水位\"; // Y1轴名字\n\n        echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n          // 过滤\n          if (isNaN(val) || val === \"\" || val == null) {\n            return 0;\n          }\n\n          return _parseFloat(val).toFixed(2);\n        }); //设置markLine\n\n        var jhsw = new Object();\n        jhsw.name = '校核水位 ' + 2524.12;\n        jhsw.yAxis = 2524.12;\n        jhsw.label = {\n          formatter: '{b}',\n          position: 'middle',\n          color: 'orange'\n        };\n        echartData.markdata.push(jhsw);\n        var zcsw = new Object();\n        zcsw.name = '正常蓄水位 ' + 2520.2;\n        zcsw.yAxis = 2520.2;\n        zcsw.label = {\n          formatter: '{b}',\n          position: 'middle',\n          color: 'orange'\n        };\n        echartData.markdata.push(zcsw);\n        var y1max = 2525,\n            y1min = Math.floor(FilterMethods.methods.get_echart_min(echartData.y1.list));\n\n        if (y1min > 2514) {\n          y1min = 2514;\n        } else {\n          var ssw = new Object();\n          ssw.name = '死水位 ' + 2514;\n          ssw.yAxis = 2514;\n          ssw.label = {\n            formatter: '{b}',\n            position: 'middle',\n            color: 'orange'\n          };\n          echartData.markdata.push(ssw);\n        }\n\n        echartData.y1.max = y1max; // y1最大值\n\n        echartData.y1.min = y1min; // y1最小值\n        // y2轴\n\n        echartData.y2.name = \"库容\"; // Y2轴名字\n\n        echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"W\", function (val) {\n          // 过滤\n          if (isNaN(val) || val === \"\" || val == null) {\n            return 0;\n          }\n\n          return _parseFloat(val).toFixed(2);\n        });\n        var y2max = Math.ceil(FilterMethods.methods.get_echart_max(echartData.y2.list)),\n            y2min = Math.floor(FilterMethods.methods.get_echart_min(echartData.y2.list));\n        echartData.y2.max = y2max; // y2最大值\n\n        echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n        // x轴\n\n        echartData.x.list = _data.map(function (val, index, array) {\n          // var time = `${index}:00 ~ ${index + 1}:00`;\n          var time = val.TM;\n          return time;\n        });\n        var datalist1 = [];\n        var datalist2 = [];\n\n        for (var i = 0; i < echartData.x.list.length; i++) {\n          var obj_data1 = [echartData.x.list[i], echartData.y1.list[i]];\n          datalist1.push(obj_data1);\n          var obj_data2 = [echartData.x.list[i], echartData.y2.list[i]];\n          datalist2.push(obj_data2);\n        }\n\n        echartData.y1.list = datalist1;\n        echartData.y2.list = datalist2;\n\n        _this8.createKrchart(echartData);\n      });\n    },\n    //带条件的库容曲线\n    createKrchart: function createKrchart(echartData) {\n      var myChart = this.$echarts.init(document.getElementById(\"guanxiChart\"));\n      myChart.setOption({\n        title: {\n          text: \"\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            animation: false\n          }\n        },\n        legend: {\n          data: [echartData.y1.name, echartData.y2.name]\n        },\n        axisPointer: {\n          link: {\n            xAxisIndex: 'all'\n          }\n        },\n        grid: [{\n          left: 38,\n          right: 18,\n          height: '34%'\n        }, {\n          left: 38,\n          right: 18,\n          top: '60%',\n          height: '33.5%'\n        }],\n        xAxis: [{\n          type: 'time',\n          boundaryGap: false,\n          data: echartData.x.list //axisLabel:{interval:parseInt(echartData.x.list.length/5),rotate:0},\n\n        }, {\n          gridIndex: 1,\n          type: 'time',\n          boundaryGap: false,\n          data: echartData.x.list,\n          position: 'bottom'\n        }],\n        yAxis: [{\n          name: echartData.y1.name + '(m)',\n          type: \"value\",\n          minInterval: 1,\n          min: echartData.y1.min,\n          max: echartData.y1.max\n        }, {\n          gridIndex: 1,\n          name: echartData.y2.name + '(万m³)',\n          type: \"value\",\n          minInterval: 1,\n          min: 200,\n          max: 1000\n        }],\n        series: [{\n          name: echartData.y1.name,\n          type: \"line\",\n          yAxisIndex: 0,\n          smooth: true,\n          data: echartData.y1.list,\n          markLine: {\n            symbol: 'none',\n            itemStyle: {\n              normal: {\n                lineStyle: {\n                  color: 'orange'\n                }\n              }\n            },\n            data: echartData.markdata\n          }\n        }, {\n          name: echartData.y2.name,\n          type: \"line\",\n          xAxisIndex: 1,\n          yAxisIndex: 1,\n          smooth: true,\n          data: echartData.y2.list\n        }]\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this9 = this;\n\n    // 组件加载中\n    console.log(this.info);\n    this.componentLoading();\n    this.shuiqing_select = this.info.rowinfo.tableType.sksq; // 获取详情数据\n\n    this.axios.get(\"/guanqu/table/details?ID=\".concat(this.info.rowinfo.STCD, \"&pk=STCD\")).then(function (res) {\n      //获取预警数据\n      _this9.axios.get('/guanqu/table/ST_RSV_Alarm?STCD=' + res.data.STCD).then(function (res) {\n        console.log(res);\n        _this9.yujingdata = res.data.list[0];\n        _this9.yujingdata.FWL = _this9.Z_Filter(_this9.yujingdata.FWL);\n        _this9.yujingdata.FWL79 = _this9.Z_Filter(_this9.yujingdata.FWL79);\n      }); // 站点信息\n      // 根据关联编号获取关联站点\n\n\n      _this9.getRelateSiteByRelateCode(function (data) {\n        console.log(\"RelateSite\", data);\n      }); // 根据行政区划码获取行政区划名\n\n\n      _this9.getCompartmentByADDVCD(function (data) {\n        _this9.siteInfo.AD_NM = data[0].AD_NM;\n      }); // 根据河流编码获取河流名\n\n\n      _this9.$GetData.Base_R_I({\n        RVCD: _this9.info.rowinfo.RVCD\n      }, true, function (data) {\n        _this9.siteInfo.RVCD = data.data[0].RVNM;\n      }); // 根据流域编码获取流域名\n\n\n      _this9.$GetData.Base_B_I({\n        CTCD: _this9.info.rowinfo.CTCD\n      }, true, function (data) {\n        _this9.siteInfo.CTCD = data.data[0].CTNM;\n      });\n\n      console.log(res.data); // 加载站点数据\n\n      _this9.loadSiteData(res.data); // 加载取消\n\n\n      _this9.cancelComponentLoading(); // 水位数据\n\n\n      _this9.tableTypeOnChange_shuiqing(_this9.info.rowinfo.tableType.sksq); // 设置 默认的水情历史数据表\n      // 关系曲线\n      // this.search_guanxiquxian();\n      // 特征水位最大流量表数据\n      // if (this.setTableDefaultDate_tezhengshuiqing) {\n      //   this.setTableDefaultDate_tezhengshuiqing(); // 默认查询日期\n      // }\n\n\n      _this9.search_tezhengshuiqing(); // 设置水库水情预警信息\n\n\n      _this9.set_SKSQ_alarmInfo(_this9.siteInfo.STCD); // 关系曲线\n\n\n      _this9.search_guanxiquxian(); // this.getTableData_tezhengshuiqing_Alarm(\n      //   {\n      //     STCD: this.siteInfo.STCD\n      //   },\n      //   data => {\n      //     this.setAlarmData_tezhengshuiqing(data[0]);\n      //   }\n      // );\n\n    });\n  }\n};",{"version":3,"sources":["Details-shuikushuiqing.vue"],"names":[],"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","sourcesContent":["<template>\r\n  <div v-loading=\"boxLoading\">\r\n    <el-tabs type=\"border-card\" v-model=\"activeName\" @tab-click>\r\n      <!-- 站点信息 -->\r\n      <el-tab-pane name=\"zhandianxinxi\">\r\n        <span slot=\"label\">\r\n          <i class=\"el-icon-tickets\"></i> 站点信息\r\n        </span>\r\n        <div class=\"drawer-profile\">\r\n          <!-- 导出按钮 \r\n          <Button size=\"small\" class=\"outPutButton\" type=\"success\" @click=\"$App.developing_tip\">\r\n            <div>导出</div>\r\n            -->\r\n          </Button>\r\n          <!-- 信息表 -->\r\n          <div>\r\n            <!-- 信息内容 -->\r\n            <div>\r\n              <!-- table start -->\r\n              <table\r\n                style=\"border: 1px solid #EBEEF5\"\r\n                border\r\n                cellspacing=\"0\"\r\n                width=\"100%\"\r\n                class=\"table_detail\"\r\n              >\r\n                <tr>\r\n                  <td align=\"right\" class=\"dt_name\">站名：</td>\r\n                  <td\r\n                    align=\"center\"\r\n                    class=\"dt_vale\"\r\n                    style=\"border-right: 1px solid #EBEEF5\"\r\n                  >{{ siteInfo.STNM || \"&nbsp;\" }}</td>\r\n                  <td align=\"right\" class=\"dt_name\">国家定类：</td>\r\n                  <td\r\n                    align=\"center\"\r\n                    class=\"dt_vale\"\r\n                  >{{ this.STTP_Filter(siteInfo.STTP) || \"&nbsp;\" }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td align=\"right\" class=\"dt_name\">等级：</td>\r\n                  <td\r\n                    align=\"center\"\r\n                    class=\"dt_vale\"\r\n                    style=\"border-right: 1px solid #EBEEF5\"\r\n                  >{{ this.$FilterData.STGR_Filter(siteInfo.STGR) || \"&nbsp;\" }}</td>\r\n                  <td align=\"right\" class=\"dt_name\">行政区划：</td>\r\n                  <td align=\"center\" class=\"dt_vale\">{{ siteInfo.AD_NM || \"&nbsp;\" }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td align=\"right\" class=\"dt_name\">经度：</td>\r\n                  <td\r\n                    align=\"center\"\r\n                    class=\"dt_vale\"\r\n                    style=\"border-right: 1px solid #EBEEF5\"\r\n                  >{{ siteInfo.LGTD || \"&nbsp;\" }}</td>\r\n                  <td align=\"right\" class=\"dt_name\">纬度：</td>\r\n                  <td align=\"center\" class=\"dt_vale\">{{ siteInfo.LTTD || \"&nbsp;\" }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td align=\"right\" class=\"dt_name\">站址：</td>\r\n                  <td\r\n                    align=\"center\"\r\n                    class=\"dt_vale\"\r\n                    style=\"border-right: 1px solid #EBEEF5\"\r\n                  >{{ siteInfo.STLC || \"&nbsp;\" }}</td>\r\n                  <td align=\"right\" class=\"dt_name\">水系：</td>\r\n                  <td align=\"center\" class=\"dt_vale\">{{ siteInfo.HNNM || \"&nbsp;\" }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td align=\"right\" class=\"dt_name\">流域：</td>\r\n                  <td\r\n                    align=\"center\"\r\n                    class=\"dt_vale\"\r\n                    style=\"border-right: 1px solid #EBEEF5\"\r\n                  >{{ siteInfo.CTCD || \"&nbsp;\" }}</td>\r\n                  <td align=\"right\" class=\"dt_name\">河流：</td>\r\n                  <td align=\"center\" class=\"dt_vale\">{{ siteInfo.RVCD || \"&nbsp;\" }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td align=\"right\" class=\"dt_name\">建站日期：</td>\r\n                  <td\r\n                    align=\"center\"\r\n                    class=\"dt_vale\"\r\n                    style=\"border-right: 1px solid #EBEEF5\"\r\n                  >{{ siteInfo.ESSTDT || \"&nbsp;\" }}</td>\r\n                  <td align=\"right\" class=\"dt_name\">建设单位：</td>\r\n                  <td align=\"center\" class=\"dt_vale\">{{ siteInfo.DLOG || \"&nbsp;\" }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td align=\"right\" class=\"dt_name\" style=\"border-bottom: none\">录入时间：</td>\r\n                  <td\r\n                    align=\"center\"\r\n                    class=\"dt_vale\"\r\n                    style=\"border-right: 1px solid #EBEEF5;border-bottom: none\"\r\n                  ></td>\r\n                  <td align=\"right\" class=\"dt_name\" style=\"border-bottom: none\">实时视频</td>\r\n                  <td align=\"center\" class=\"dt_vale\" style=\"border-bottom: none\">\r\n                    <Button type=\"info\" @click=\"$App.developing_tip(info)\" size=\"small\">视频监控</Button>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n              <!-- table end -->\r\n\r\n              <!-- <Row class=\"row\">\r\n                <Col span=\"5\" align=\"right\">站名：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.STNM || \"&nbsp;\" }}</Col>\r\n                <Col span=\"5\" align=\"right\">国家定类：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ this.STTP_Filter(siteInfo.STTP) || \"&nbsp;\" }}</Col>\r\n              </Row>\r\n              <Row class=\"row\">\r\n                <Col span=\"5\" align=\"right\">等级：</Col>\r\n                <Col\r\n                  span=\"7\"\r\n                  align=\"center\"\r\n                >{{ this.$FilterData.STGR_Filter(siteInfo.STGR) || \"&nbsp;\" }}</Col>\r\n                <Col span=\"5\" align=\"right\">行政区划：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.AD_NM || \"&nbsp;\" }}</Col>\r\n              </Row>\r\n              <Row class=\"row\">\r\n                <Col span=\"5\" align=\"right\">经度：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.LGTD || \"&nbsp;\" }}</Col>\r\n                <Col span=\"5\" align=\"right\">纬度：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.LTTD || \"&nbsp;\" }}</Col>\r\n              </Row>\r\n              <Row class=\"row\">\r\n                <Col span=\"5\" align=\"right\">站址：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.STLC || \"&nbsp;\" }}</Col>\r\n                <Col span=\"5\" align=\"right\">水系：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.HNNM || \"&nbsp;\" }}</Col>\r\n              </Row>\r\n              <Row class=\"row\">\r\n                <Col span=\"5\" align=\"right\">流域：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.CTCD || \"&nbsp;\" }}</Col>\r\n                <Col span=\"5\" align=\"right\">河流：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.RVCD || \"&nbsp;\" }}</Col>\r\n              </Row>\r\n              <Row class=\"row\">\r\n                <Col span=\"5\" align=\"right\">建站日期：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.ESSTDT || \"&nbsp;\" }}</Col>\r\n                <Col span=\"5\" align=\"right\">建设单位：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.DLOG || \"&nbsp;\" }}</Col>\r\n              </Row>\r\n              <Row class=\"row\">\r\n                <Col span=\"5\" align=\"right\">隶属单位：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.ATCUNIT || \"&nbsp;\" }}</Col>\r\n                <Col span=\"5\" align=\"right\">管理单位：</Col>\r\n                <Col span=\"7\" align=\"center\">{{ siteInfo.DLOG || \"&nbsp;\" }}</Col>\r\n              </Row>-->\r\n              <!--              <Row class=\"row\">-->\r\n              <!--                <Col span=\"5\" align=\"right\">录入时间：</Col>-->\r\n              <!--                <Col-->\r\n              <!--                  span=\"7\"-->\r\n              <!--                  align=\"center\"-->\r\n              <!--                >{{ this.$FilterData.dateFilter(siteInfo.MODITIME,8) || \"&nbsp;\" }}</Col>-->\r\n              <!--                <Col span=\"5\" align=\"right\">图像按钮：</Col>-->\r\n              <!--                <Col span=\"12\" align=\"center\" style=\"border-right: 1px solid rgb(200, 200, 200); \">-->\r\n              <!--                  <Button type=\"info\" @click=\"$App.developing_tip\" size=\"small\">查看图片</Button>-->\r\n              <!--                </Col>-->\r\n              <!--              </Row>-->\r\n            </div>\r\n            <!-- 分割线 -->\r\n            <div class=\"divider\"></div>\r\n            <Row>\r\n              <el-col class=\"dt_remark\">\r\n                <Col span=\"24\">备注：{{ siteInfo.COMMENTS || \"&nbsp;\" }}</Col>\r\n              </el-col>\r\n            </Row>\r\n          </div>\r\n          <!-- 分割线 -->\r\n          <div class=\"divider\"></div>\r\n\r\n          <!-- 分割线 -->\r\n          <div class=\"divider\"></div>\r\n          <!-- 关联渠道和闸门 -->\r\n          <div>\r\n            <!-- <Row class=\"relationRow\">\r\n              <Col span=\"4\">关联要素</Col>\r\n              <Col span=\"20\">\r\n                <Button\r\n                  @click=\"$App.developing_tip\"\r\n                  v-for=\"item in siteInfo.GUANLIAN\"\r\n                >{{ item.SLNM }}</Button>\r\n                <div v-if=\"siteInfo.GUANLIAN && siteInfo.GUANLIAN.length == 0\">暂无此站点的关联要素</div>\r\n              </Col>\r\n            </Row>-->\r\n            <el-col\r\n              style=\"border: 1px #EBEEF5 solid;border-radius: 2px;padding-left: 10px;padding-bottom: 20px\"\r\n            >\r\n              <Row class=\"relationRow\">\r\n                <Col span=\"4\">同时监测：</Col>\r\n                <Col span=\"20\">\r\n                  <!-- <Button\r\n                    @click=\"$App.developing_tip\"\r\n                    v-for=\"item in siteInfo.GUANLIAN\"\r\n                  >{{ item.SLNM }}</Button>-->\r\n                  <div></div>\r\n                </Col>\r\n              </Row>\r\n              <Row class=\"relationRow\">\r\n                <Col span=\"4\">关联站点：</Col>\r\n                <Col span=\"20\">\r\n                  <!-- <Button\r\n                    @click=\"$App.developing_tip\"\r\n                    v-for=\"item in siteInfo.GUANLIAN\"\r\n                  >{{ item.SLNM }}</Button>-->\r\n                  <div></div>\r\n                </Col>\r\n              </Row>\r\n              <Row class=\"relationRow\">\r\n                <Col span=\"4\">关联要素：</Col>\r\n                <Col span=\"20\">\r\n                  <!-- <Button\r\n                    @click=\"$App.developing_tip\"\r\n                    v-for=\"item in siteInfo.GUANLIAN\"\r\n                  >{{ item.SLNM }}</Button>-->\r\n                  <div></div>\r\n                </Col>\r\n              </Row>\r\n            </el-col>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <!-- 水位数据 -->\r\n      <el-tab-pane name=\"shuiqingshuju\">\r\n        <span slot=\"label\">\r\n          <Icon type=\"ios-water-outline\" style=\"font-size:20px\" />水位数据\r\n        </span>\r\n        <div class=\"drawer-profile\">\r\n          <!-- 导出按钮\r\n          <Button size=\"small\" class=\"outPutButton\" type=\"success\" @click=\"$App.developing_tip\">\r\n            <div>导出</div>\r\n          </Button>\r\n           -->\r\n          <div>\r\n            <!-- 分割线 -->\r\n            <div class=\"divider\"></div>\r\n            <!-- 查询，导出行 -->\r\n                <Row :gutter=\"16\" type=\"flex\" justify=\"end\" align=\"middle\">\r\n                  <Col span=\"2\">\r\n                    <span style=\"letter-spacing:2px\">查询</span>\r\n                  </Col>\r\n                  <!-- 开始到结束时间选择 -->\r\n                  <Col span=\"19\">\r\n                    <el-date-picker\r\n                      v-model=\"table.shuiqing.date\"\r\n                      range-separator=\"至\"\r\n                      start-placeholder=\"开始日期\"\r\n                      end-placeholder=\"结束日期\"\r\n                      @change=\"handleDatePickerChange\"\r\n                      :picker-options=\"table.shuiqing.datePickerOptions[select.shuiqing_select]\"\r\n                      unlink-panels\r\n                      :type=\"table.shuiqing.datePickerType\"\r\n                      size=\"mini\"\r\n                      style=\"min-width: 360px\"\r\n                    ></el-date-picker>\r\n                  </Col>\r\n                </Row>\r\n                <!-- 分割线 -->\r\n                 <div class=\"divider\"></div>\r\n                  <Row :gutter=\"16\" type=\"flex\" justify=\"center\" align=\"middle\">\r\n                    <Col>\r\n                      4-6月汛限水位: {{yujingdata.FWL}} m &nbsp;7-9月汛限水位：{{yujingdata.FWL79}} m\r\n                    </Col>\r\n                  </Row>\r\n                <!-- 分割线 -->\r\n                <div class=\"divider\"></div>\r\n            <!-- 选项卡 -->\r\n            <Tabs type=\"card\">\r\n              <!-- 表格 -->\r\n              <TabPane label=\"水情数据\">\r\n                <!-- 表格用于展示数据 -->\r\n                <div>\r\n                  <Table\r\n                    :columns=\"table.shuiqing.activeColumns\"\r\n                    :data=\"table.shuiqing.Rows_filter\"\r\n                    :loading=\"table.shuiqing.loading\"\r\n                    border\r\n                    size=\"small\"\r\n                    :height=\"table.shuiqing.height\"\r\n                    @on-sort-change=\"sort_change_shuiqing\"\r\n                  ></Table>\r\n                  <!-- 分割线 -->\r\n                  <div class=\"divider\"></div>\r\n                  <!-- 分页器 -->\r\n                  <el-pagination\r\n                    background\r\n                    :page-size=\"table.shuiqing.pageSizes\"\r\n                    layout=\"sizes, total, prev, pager, next, jumper \"\r\n                    :page-sizes=\"[20, 50, 100, 200]\"\r\n                    :total=\"table.shuiqing.total\"\r\n                    :pager-count=\"5\"\r\n                    :current-page=\"table.shuiqing.currentPage\"\r\n                    @current-change=\"handleCurrentChange_shuiqing\"\r\n                    @size-change=\"handleSizeChange_shuiqing\"\r\n                    class=\"pageController\"\r\n                    small\r\n                  ></el-pagination>\r\n                  <!-- 分割线 -->\r\n                  <div class=\"divider\"></div>\r\n                </div>\r\n              </TabPane>\r\n              <TabPane label=\"水情图\">\r\n                <!-- 绘图 -->\r\n                <div\r\n                  id=\"shuiqingChart\"\r\n                  v-show=\"table.shuiqing.Rows_filter.length > 0\"\r\n                  :style=\"{width: '540px', height: '400px',margin: 'auto'}\"\r\n                ></div>\r\n                <div\r\n                  v-show=\"table.shuiqing.Rows_filter.length == 0\"\r\n                  :style=\"{width: '540px', height: '400px',margin: 'auto', display:'flex', alignItems:'center', justifyContent: 'center'}\"\r\n                >暂无数据</div>\r\n              </TabPane>\r\n              <!-- 历史表选择框 -->\r\n              <Select\r\n                @on-change=\"tableTypeOnChange_shuiqing\"\r\n                prefix=\"ios-calendar-outline\"\r\n                v-model=\"select.shuiqing_select\"\r\n                slot=\"extra\"\r\n              >\r\n                <Option\r\n                  v-for=\"item in select.shuiqingList\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                  :key=\"item.value\"\r\n                ></Option>\r\n              </Select>\r\n            </Tabs>\r\n\r\n            <!-- 分割线 -->\r\n            <!-- <div class=\"divider\"></div> -->\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <!-- 关系曲线 -->\r\n            <el-tab-pane name=\"guanxiquxian\">\r\n                <span slot=\"label\">\r\n                <Icon type=\"md-trending-up\" style=\"font-size:20px\"/>水位库容\r\n                </span>\r\n                <div class=\"drawer-profile\">\r\n                <!-- 导出按钮\r\n                <Button size=\"small\" class=\"outPutButton\" type=\"success\" @click=\"$App.developing_tip\">\r\n                    <div>导出</div>\r\n                </Button>\r\n                 -->\r\n                <!-- 查询&换算 -->\r\n                     <Row :gutter=\"19\" type=\"flex\" align=\"middle\" style=\"margin-bottom:10px;\">\r\n                            <Col span=\"2\">\r\n                            <span></span>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                            <span>水位：</span>\r\n                            </Col>\r\n                            <Col span=\"6\">\r\n                            <Input\r\n                                v-model=\"input.huansuan.waterLever\"\r\n                                placeholder=\"水深 m\"\r\n                                style=\"min-width: 90px\"\r\n                                size=\"small\"\r\n                            />\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                            <Button type=\"info\" size=\"small\" @click=\"$App.developing_tip\">换算</Button>\r\n                            </Col>\r\n                            <Col span=\"3\">\r\n                            <span>库容：</span>\r\n                            </Col>\r\n                            <Col span=\"6\">\r\n                            <Input\r\n                                v-model=\"input.huansuan.flowLever\"\r\n                                placeholder=\"库容万m³\"\r\n                                style=\"min-width: 90px\"\r\n                                size=\"small\"\r\n                            />\r\n                            </Col>                           \r\n                        </Row>\r\n                        <Row :gutter=\"16\" type=\"flex\" justify=\"end\" align=\"middle\">\r\n                        <Col span=\"2\">\r\n                            <span style=\"letter-spacing:2px\">查询</span>\r\n                        </Col>\r\n                        <!-- 时间选择 -->\r\n                        <Col span=\"19\">\r\n                        <el-date-picker\r\n                            v-model=\"table.guanxiquxian.date\"\r\n                            range-separator=\"至\"\r\n                            start-placeholder=\"开始日期\"\r\n                            end-placeholder=\"结束日期\"\r\n                            @change=\"handleDatePickerChange_guanxiquxian\"\r\n                            :picker-options=\"table.guanxiquxian.datePickerOptions\"\r\n                            unlink-panels\r\n                            type=\"datetimerange\"\r\n                            value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                            size=\"mini\"\r\n                            style=\"min-width: 360px\"\r\n                        ></el-date-picker>\r\n                        </Col>\r\n                    </Row>\r\n                    <!-- 分割线 -->\r\n                    <div class=\"divider\"></div>\r\n                <Tabs type=\"card\">\r\n                    <TabPane label=\"关系曲线\">\r\n                    <!-- 绘图 -->\r\n                    <div id=\"guanxiChart\" :style=\"{width: '530px', height: '450px',margin: 'auto'}\"></div>\r\n                    </TabPane>\r\n                    <TabPane label=\"关系数据\">\r\n                    <!-- 表格用于展示数据 -->\r\n                    <div>\r\n                        <Table\r\n                        :columns=\"table.guanxiquxian.columns\"\r\n                        :data=\"table.guanxiquxian.Rows_filter\"\r\n                        :loading=\"table.guanxiquxian.loading\"\r\n                        border\r\n                        size=\"small\"\r\n                        :height=\"table.guanxiquxian.height\"\r\n                        ></Table>\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                        <!-- 分页器 -->\r\n                        <el-pagination\r\n                        background\r\n                        :page-size=\"20\"\r\n                        layout=\"total, prev, pager, next, jumper\"\r\n                        :total=\"table.guanxiquxian.total\"\r\n                        :pager-count=\"5\"\r\n                        :current-page=\"table.guanxiquxian.currentPage\"\r\n                        @current-change=\"handleCurrentChange_guanxiquxian\"\r\n                        @size-change=\"handleSizeChange_guanxiquxian\"\r\n                        class=\"pageController\"\r\n                        small\r\n                        ></el-pagination>\r\n                    </div>\r\n                    <!-- 分割线 -->\r\n                    <div class=\"divider\"></div>\r\n                    </TabPane>\r\n                </Tabs>\r\n                </div>\r\n            </el-tab-pane>\r\n      <!-- 特征水位 -->\r\n      <el-tab-pane label=\"特征水位\" name=\"tezhengshuiqing\">\r\n        <span slot=\"label\">\r\n          <Icon type=\"ios-speedometer-outline\" style=\"font-size:20px\" />特征水位\r\n        </span>\r\n\r\n        <div class=\"drawer-profile\">\r\n          <!-- 指标信息 -->\r\n          <div>\r\n            <Row class=\"row\">\r\n              <Col span=\"5\" align=\"right\">4-6月汛限水位：</Col>\r\n              <Col span=\"7\" align=\"center\">{{ `${$FilterData.Float_Filter(yujingdata.FWL)} m`  || \"&nbsp;\" }}</Col>\r\n              <Col span=\"5\" align=\"right\">7-9月汛限水位：</Col>\r\n              <Col span=\"7\" align=\"center\">{{ `${$FilterData.Float_Filter(yujingdata.FWL79)} m` || \"&nbsp;\" }}</Col>\r\n            </Row>\r\n            <Row class=\"row last_row\">\r\n              <Col span=\"5\" align=\"right\">设计洪水位：</Col>\r\n              <Col span=\"7\" align=\"center\">{{ `${$FilterData.Float_Filter(yujingdata.SJWL)} m` || \"&nbsp;\" }}</Col>\r\n              <Col span=\"5\" align=\"right\">经验水位：</Col>\r\n              <Col span=\"7\" align=\"center\">{{ `${$FilterData.Float_Filter(yujingdata.JYWL)} m` || \"&nbsp;\" }}</Col>\r\n            </Row>\r\n            <!-- 分割线 -->\r\n            <div class=\"divider\"></div>\r\n          </div>\r\n          <!-- 导出按钮 \r\n          <Button size=\"small\" class=\"outPutButton\" type=\"success\" @click=\"$App.developing_tip\">\r\n            <div>导出</div>\r\n          </Button>\r\n          -->\r\n          <!-- 查询，导出行 -->\r\n          <Row :gutter=\"16\" type=\"flex\" justify=\"center\" align=\"middle\">\r\n            <Col span=\"2\">\r\n              <span style=\"letter-spacing:2px\">查询</span>\r\n            </Col>\r\n            <!-- 开始到结束时间选择 -->\r\n            <Col span=\"15\">\r\n              <el-date-picker\r\n                v-model=\"table.tezhengshuiqing.date\"\r\n                range-separator=\"至\"\r\n                start-placeholder=\"开始日期\"\r\n                end-placeholder=\"结束日期\"\r\n                @change=\"handleDatePickerChange_tezhengshuiqing\"\r\n                :picker-options=\"table.tezhengshuiqing.datePickerOptions\"\r\n                unlink-panels\r\n                type=\"monthrange\"\r\n                size=\"mini\"\r\n                style=\"min-width: 360px\"\r\n              ></el-date-picker>\r\n            </Col>\r\n            <Col span=\"3\"></Col>\r\n          </Row>\r\n          <!-- 分割线 -->\r\n          <div class=\"divider\"></div>\r\n\r\n          <!-- 表格用于展示数据 -->\r\n          <div>\r\n            <Table\r\n              :columns=\"table.tezhengshuiqing.columns\"\r\n              :data=\"table.tezhengshuiqing.Rows_filter\"\r\n              :loading=\"table.tezhengshuiqing.loading\"\r\n              border\r\n              size=\"small\"\r\n              :height=\"table.tezhengshuiqing.height\"\r\n            ></Table>\r\n            <!-- 分割线 -->\r\n            <div class=\"divider\"></div>\r\n            <!-- 分页器 -->\r\n            <el-pagination\r\n              background\r\n              :page-size=\"table.tezhengshuiqing.pageSizes\"\r\n              layout=\"sizes, total, prev, pager, next, jumper \"\r\n              :page-sizes=\"[20, 50, 100, 200]\"\r\n              :total=\"table.tezhengshuiqing.total\"\r\n              :pager-count=\"5\"\r\n              :current-page=\"table.tezhengshuiqing.currentPage\"\r\n              @current-change=\"handleCurrentChange_tezhengshuiqing\"\r\n              @size-change=\"handleSizeChange_tezhengshuiqing\"\r\n              class=\"pageController\"\r\n              small\r\n            ></el-pagination>\r\n          </div>\r\n          <!-- 分割线 -->\r\n          <div class=\"divider\"></div>\r\n        </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n\r\n    <!-- 导出提示对话框 -->\r\n    <Modal\r\n      v-model=\"outPutModal\"\r\n      v-loading=\"loading\"\r\n      title=\"关于导出\"\r\n      @on-ok=\"outPutSure\"\r\n      @on-cancel=\"cancel\"\r\n    >\r\n      <p>您确认导出该站点的信息表吗？</p>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport FilterMethods from \"../../assets/commonJS/FilterMethods\"; // 过滤方法\r\nimport GetDataMethods from \"../../assets/commonJS/GetDataMethods\"; // 获取数据方法\r\nimport { timingSafeEqual } from \"crypto\";\r\nimport { type } from \"os\";\r\nimport { types } from \"util\";\r\nimport { stat } from \"fs\";\r\nimport { filter } from \"minimatch\";\r\nexport default {\r\n  props: {\r\n    info: {}\r\n  },\r\n  data() {\r\n    return {\r\n      // 激活标签栏\r\n      activeName: \"shuiqingshuju\",\r\n      // 站点\r\n      siteInfo: {},\r\n      //   多选框对象\r\n      checkBox: {},\r\n      //   选择框对象\r\n      select: {\r\n        // 当前激活的水位数据快速查询选项\r\n        activeQuickSearchList: [],\r\n        // 查询绑定值\r\n        select: \"rec6\",\r\n        // 日期选择器绑定值\r\n        shuiqing_datePicker: null,\r\n        // 水位数据历史表\r\n        shuiqingList: [\r\n          {\r\n            value: \"historyTable\",\r\n            size: \"small\",\r\n            // iconType: \"logo-facebook\",\r\n            label: \"历史水情\"\r\n          },\r\n          {\r\n            value: \"hourTable\",\r\n            size: \"small\",\r\n            // iconType: \"logo-facebook\",\r\n            label: \"小时水情\"\r\n          },\r\n          {\r\n            value: \"dayTable\",\r\n            size: \"small\",\r\n            // iconType: \"logo-facebook\",\r\n            label: \"日水情\"\r\n          },\r\n          {\r\n            value: \"monthTable\",\r\n            size: \"small\",\r\n            // iconType: \"logo-facebook\",\r\n            label: \"月水情\"\r\n          }\r\n        ],\r\n        // 水位数据历史表绑定值\r\n        shuiqing_select: \"historyTable\"\r\n      },\r\n      // 表格\r\n      table: {\r\n        // 水情\r\n        shuiqing: {\r\n          // 表头设置\r\n          columns: {\r\n            // 历史表\r\n            historyTable: [\r\n              {\r\n                type: \"index\",\r\n                title: \" \",\r\n                width: 60,\r\n                align: \"center\",\r\n                // 自定义序号\r\n                indexMethod(item) {\r\n                  var index =\r\n                    item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n                  return index;\r\n                },\r\n                ellipsis: true\r\n              },\r\n              {\r\n                title: \"时间\",\r\n                key: \"tm\",\r\n                width: 150,\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                title: \"库前水位(m)\",\r\n                width: 150,\r\n                key: \"RZ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                title: \"库下水位(m)\",\r\n                width: 150,\r\n                key: \"BLRZ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                width: 140,\r\n                title: \"入库流量(m³/s)\",\r\n                key: \"INQ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                width: 140,\r\n                title: \"出库流量(m³/s)\",\r\n                key: \"OTQ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              }\r\n            ],\r\n            // 小时表\r\n            hourTable: [\r\n              {\r\n                title: \" \",\r\n                type: \"index\",\r\n                width: 50,\r\n                align: \"center\",\r\n                // 自定义序号\r\n                indexMethod(item) {\r\n                  var index =\r\n                    item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n                  return index;\r\n                },\r\n                ellipsis: true\r\n              },\r\n              {\r\n                title: \"时间\",\r\n                key: \"dt\",\r\n                width: 150,\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                title: \"库前水位(m)\",\r\n                width: 150,\r\n                key: \"RZ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                title: \"库下水位(m)\",\r\n                width: 150,\r\n                key: \"BLRZ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                width: 160,\r\n                title: \"平均入库流量(m³/s)\",\r\n                key: \"INQ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                width: 160,\r\n                title: \"平均出库流量(m³)\",\r\n                key: \"OTQ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              }\r\n            ],\r\n            // 日表\r\n            dayTable: [\r\n              {\r\n                title: \" \",\r\n                type: \"index\",\r\n                width: 50,\r\n                align: \"center\",\r\n                // 自定义序号\r\n                indexMethod(item) {\r\n                  var index =\r\n                    item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n\r\n                  return index;\r\n                },\r\n                ellipsis: true\r\n              },\r\n              {\r\n                title: \"时间\",\r\n                key: \"tm\",\r\n                width: 150,\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                title: \"库前水位(m)\",\r\n                width: 150,\r\n                key: \"RZ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                title: \"库下水位(m)\",\r\n                width: 150,\r\n                key: \"BLRZ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                width: 170,\r\n                title: \"平均入库流量(m³/s)\",\r\n                key: \"INQ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                width: 170,\r\n                title: \"平均出库流量(m³)\",\r\n                key: \"OTQ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              }\r\n            ],\r\n            // 月表\r\n            monthTable: [\r\n              {\r\n                title: \" \",\r\n                type: \"index\",\r\n                width: 50,\r\n                align: \"center\",\r\n                // 自定义序号\r\n                indexMethod(item) {\r\n                  var index =\r\n                    item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n\r\n                  return index;\r\n                },\r\n                ellipsis: true\r\n              },\r\n              {\r\n                title: \"时间\",\r\n                key: \"dt\",\r\n                width: 150,\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                title: \"库水位(m)\",\r\n                width: 150,\r\n                key: \"RZ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                title: \"库下水位(m)\",\r\n                width: 150,\r\n                key: \"BLRZ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                width: 180,\r\n                title: \"平均入库流量(m³/s)\",\r\n                key: \"INQ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              },\r\n              {\r\n                width: 170,\r\n                title: \"平均出库流量(m³)\",\r\n                key: \"OTQ\",\r\n                align: \"center\",\r\n                sortable: \"custom\"\r\n              }\r\n            ]\r\n          },\r\n          // 正在激活的表头\r\n          activeColumns: [],\r\n          // 表体内容\r\n          Rows: [],\r\n          // 过滤后的表体内容\r\n          Rows_filter: [],\r\n          // 日期时间选择器的选项配置\r\n          datePickerOptions: {\r\n            historyTable: {\r\n              shortcuts: [\r\n                {\r\n                  text: \"最近6小时\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 6);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近12小时\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 12);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近24小时\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 24);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近36小时\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 36);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近72小时\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 72);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            hourTable: {\r\n              shortcuts: [\r\n                {\r\n                  text: \"最近6小时\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 6);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近12小时\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 12);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近24小时\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 24);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近36小时\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 36);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近72小时\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 72);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            dayTable: {\r\n              shortcuts: [\r\n                {\r\n                  text: \"最近10天\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 10);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近15天\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 15);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近30天\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近60天\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 60);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                },\r\n                {\r\n                  text: \"最近90天\",\r\n                  onClick(picker) {\r\n                    const end = new Date();\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                    picker.$emit(\"pick\", [start, end]);\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            monthTable: {\r\n              shortcuts: []\r\n            }\r\n          },\r\n          // 日期时间选择器类型\r\n          datePickerType: \"date\",\r\n          // 日期时间选择器值\r\n          date: null,\r\n          // 排序\r\n          sort: null,\r\n          // 表格是否加载中\r\n          loading: false,\r\n          // 总条数\r\n          total: 0,\r\n          // 当前页\r\n          currentPage: 1,\r\n          // 每页显示数量\r\n          pageSizes: 20,\r\n          // 表格高度\r\n          height: 430\r\n        },\r\n        // 关系曲线\r\n        guanxiquxian: {\r\n          // 表头设置\r\n          columns: [\r\n            {\r\n              title: \" \",\r\n              type: \"index\",\r\n              width: 60,\r\n              align: \"center\",\r\n              // 自定义序号\r\n              indexMethod(item) {\r\n                var index =\r\n                  item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n\r\n                return index;\r\n              },\r\n              ellipsis: true\r\n            },\r\n            {\r\n              // width: 100,\r\n              title: \"时间\",\r\n              key: \"TM\",\r\n              align: \"center\"\r\n            },\r\n            {\r\n              title: \"水位(m)\",\r\n              width: 110,\r\n              key: \"RZ\",\r\n              align: \"center\"\r\n            },\r\n            {\r\n              title: \"库容（万m³）\",\r\n              key: \"W\",\r\n              width: 140,\r\n              align: \"center\"\r\n            }\r\n          ],\r\n          // 日期时间选择器的选项配置\r\n          datePickerOptions: {\r\n            shortcuts: [\r\n              {\r\n                text: \"最近5年\",\r\n                onClick(picker) {\r\n                  const end = new Date();\r\n                  const start = new Date();\r\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 5);\r\n                  picker.$emit(\"pick\", [start, end]);\r\n                }\r\n              },\r\n              {\r\n                text: \"最近3年\",\r\n                onClick(picker) {\r\n                  const end = new Date();\r\n                  const start = new Date();\r\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 3);\r\n                  picker.$emit(\"pick\", [start, end]);\r\n                }\r\n              },\r\n              {\r\n                text: \"最近2年\",\r\n                onClick(picker) {\r\n                  const end = new Date();\r\n                  const start = new Date();\r\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 2);\r\n                  picker.$emit(\"pick\", [start, end]);\r\n                }\r\n              },\r\n              {\r\n                text: \"最近1年\",\r\n                onClick(picker) {\r\n                  const end = new Date();\r\n                  const start = new Date();\r\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 1);\r\n                  picker.$emit(\"pick\", [start, end]);\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          // 表体内容\r\n          Rows: [],\r\n          // 过滤后的表体内容\r\n          Rows_filter: [],\r\n          // 表格是否加载中\r\n          loading: false,\r\n          // 日期时间选择器值\r\n          date: null,\r\n          // 总条数\r\n          total: 0,\r\n          // 表格高度\r\n          height: 440,\r\n          // 当前页\r\n          currentPage: 1,\r\n          // 每页显示数量\r\n          pageSizes: 20\r\n        },\r\n        // 特征水位\r\n        tezhengshuiqing: {\r\n          // 表头设置\r\n          columns: [\r\n            {\r\n              title: \" \",\r\n              type: \"index\",\r\n              width: 50,\r\n              align: \"center\",\r\n              // 自定义序号\r\n              indexMethod(item) {\r\n                var index =\r\n                  item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n\r\n                return index;\r\n              },\r\n              ellipsis: true\r\n            },\r\n            {\r\n              // width: 100,\r\n              title: \"最高水位时间\",\r\n              key: \"TMHZ\",\r\n              align: \"center\",\r\n              sortable: true\r\n            },\r\n            {\r\n              // width: 100,\r\n              title: \"年最高水位(m)\",\r\n              key: \"THZ\",\r\n              align: \"center\",\r\n              sortable: true\r\n            }\r\n          ],\r\n          // 表体内容\r\n          Rows: [],\r\n          // 过滤后的表体内容\r\n          Rows_filter: [],\r\n          // 总条数\r\n          total: 0,\r\n          // 表格是否加载中\r\n          loading: false,\r\n          // 当前页\r\n          currentPage: 1,\r\n          // 日期时间选择器值\r\n          date: null,\r\n          // 日期时间选择器的选项配置\r\n          datePickerOptions: {\r\n            shortcuts: [\r\n              {\r\n                text: \"最近5年\",\r\n                onClick(picker) {\r\n                  const end = new Date();\r\n                  const start = new Date();\r\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 5);\r\n                  picker.$emit(\"pick\", [start, end]);\r\n                }\r\n              },\r\n              {\r\n                text: \"最近3年\",\r\n                onClick(picker) {\r\n                  const end = new Date();\r\n                  const start = new Date();\r\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 3);\r\n                  picker.$emit(\"pick\", [start, end]);\r\n                }\r\n              },\r\n              {\r\n                text: \"最近2年\",\r\n                onClick(picker) {\r\n                  const end = new Date();\r\n                  const start = new Date();\r\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 2);\r\n                  picker.$emit(\"pick\", [start, end]);\r\n                }\r\n              },\r\n              {\r\n                text: \"最近1年\",\r\n                onClick(picker) {\r\n                  const end = new Date();\r\n                  const start = new Date();\r\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 1);\r\n                  picker.$emit(\"pick\", [start, end]);\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          // 表格高度\r\n          height: 410,\r\n          // 每页显示数量\r\n          pageSizes: 20,\r\n          alarmData: {\r\n            FWL: \"\", // 4-6月汛限水位\r\n            FWL79: \"\", // 7-9月汛限水位\r\n            SJWL: \"\", // 设计洪水位\r\n            JYWL: \"\" // 经验水位\r\n          }\r\n        }\r\n      },\r\n      // 图形\r\n      chart: {\r\n        shuiqing: null\r\n      },\r\n      //   日期数据\r\n      date: {\r\n        shuiqing: \"\"\r\n      },\r\n      // 输入框对象\r\n      input: {\r\n        // 关系曲线换算的\r\n        huansuan: {\r\n          waterLever: \"\",\r\n          flowLever: \"\"\r\n        }\r\n      },\r\n      //   导出按钮加载控制\r\n      outPutLoading: false,\r\n      //   导出确认对话框控制\r\n      outPutModal: false,\r\n      // 整块区域的加载控制\r\n      boxLoading: false,\r\n      //预警数据\r\n      yujingdata: {\r\n        FWL: null, // 4-6月汛限水位\r\n        FWL79: null, // 7-9月汛限水位\r\n        SJWL: null, // 设计洪水位\r\n        JYWL: null // 经验水位\r\n      },\r\n      tableType: ''\r\n    };\r\n  },\r\n  mixins: [FilterMethods, GetDataMethods],\r\n  methods: {\r\n    //   导出站点信息\r\n    outPutSiteInfo() {\r\n      //   关闭导出确认对话框\r\n      this.outPutModal = false;\r\n      //   按钮加载\r\n      this.outPutLoading = true;\r\n      setTimeout(() => {\r\n        this.outPutLoading = false;\r\n        this.$Modal.success({\r\n          title: \"关于导出\",\r\n          content: \"站点信息表导出成功\"\r\n        });\r\n      }, 500);\r\n    },\r\n    //   确认导出\r\n    outPutSure() {\r\n      this.outPutSiteInfo();\r\n    },\r\n    // 日期时间选择器变化触发事件\r\n    // handleDatePickerChange(val, valType) {\r\n    //   var timeInterval = `${val[0].replace(/\\//g, \"-\")},${val[1].replace(\r\n    //     /\\//g,\r\n    //     \"-\"\r\n    //   )}`;\r\n    //   this.select.shuiqing_datePicker = timeInterval;\r\n    // },\r\n    datePicke_on_ok(tableType) {\r\n      this.table[\"shuiqing\"].currentPage = 1; // 重置当前页\r\n      this.table.shuiqing.loading = true; // 表格加载中\r\n      var body = {\r\n        STCD: this.siteInfo.STCD,\r\n        TM: `bt,${this.select.shuiqing_datePicker}`\r\n      };\r\n      var pageSizes = this.table.shuiqing.pageSizes;\r\n      var currentPage = 1;\r\n      this.getTableData_shuiqing(\r\n        tableType,\r\n        pageSizes,\r\n        currentPage,\r\n        body,\r\n        data => {\r\n          this.setTableTotal(\"shuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\r\n          this.setTableData(\"shuiqing\", data.data); // 更新水情历史数据表的数据\r\n          this.table.shuiqing.loading = false; // 取消表格加载\r\n        }\r\n      );\r\n    },\r\n    // 查询\r\n    search_shuiqing(tableType) {\r\n      var tableType = tableType || this.select.shuiqing_select;\r\n      this.letTableLoading(\"shuiqing\"); // 表格加载中\r\n      console.log('+++++++++++++'+tableType);\r\n\r\n\r\n\r\n      // 传递参数\r\n      var body = {\r\n        STCD: this.siteInfo.STCD,\r\n        _page: this.table.shuiqing.currentPage || 1,\r\n        _page_size: this.table.shuiqing.pageSizes || 20\r\n      };\r\n\r\n      // 如果有选择排序，则传递排序参数\r\n      if (this.table.shuiqing.sort) {\r\n        var _sort = this.$FilterData.sort_Filter(this.table.shuiqing.sort);\r\n        if (_sort) {\r\n          body._orderby = _sort;\r\n        }\r\n      }\r\n\r\n      // 如果有选择日期进行查询，根据表格类型传递参数\r\n      if (this.table.shuiqing.date) {\r\n        switch (tableType) {\r\n          case \"historyTable\":\r\n            var DTT = this.$FilterData\r\n              .elDatePicker_Filter(this.table.shuiqing.date)\r\n              .split(\",\");\r\n            body.Time_min = DTT[1];\r\n            body.Time_max = DTT[2];\r\n            break;\r\n          case \"dayTable\":\r\n            var DTT = this.$FilterData\r\n              .elDatePicker_Filter(this.table.shuiqing.date)\r\n              .split(\",\");\r\n            body.Time_min = DTT[1].substr(0,10);\r\n            body.Time_max = DTT[2].substr(0,10);\r\n            break;\r\n          case \"hourTable\":\r\n            console.log('~~~~~~~~~~~~~~~~~~~~~~~'+tableType);\r\n            var DTT = this.$FilterData\r\n              .elDatePicker_Filter(this.table.shuiqing.date)\r\n              .split(\",\");\r\n            body.Time_min = DTT[1];\r\n            body.Time_max = DTT[2];\r\n            break;\r\n          case \"monthTable\":\r\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date,\"monthTable\").split(\",\");\r\n            body.Time_min = DTT[1].substring(0,7);\r\n            body.Time_max = DTT[2].substring(0,7);\r\n            // body.YE = this.$FilterData.elDatePicker_Filter(\r\n            //   this.table.shuiqing.date,\r\n            //   \"monthTable\"\r\n            // ).YE;\r\n            // body.MON = this.$FilterData.elDatePicker_Filter(\r\n            //   this.table.shuiqing.date,\r\n            //   \"monthTable\"\r\n            // ).MON;\r\n            break;\r\n        }\r\n      }\r\n\r\n      // 获取水库水情历史数据\r\n      this.$GetData.Survey_History_SKSQ(\r\n        tableType,\r\n        body,\r\n        {\r\n          default: true,\r\n          myFilter: data => {\r\n            data.map(val => {\r\n              val.currentPage = body._page;\r\n              val.pageSizes = body._page_size;\r\n              return val;\r\n            });\r\n            return data;\r\n          }\r\n        },\r\n        data => {\r\n          this.setTableTotal(\"shuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\r\n          this.setTableData(\"shuiqing\", data.data); // 更新水情历史数据表的数据\r\n          body._page_size = 999999999;\r\n          body._page = 1;\r\n          this.$GetData.Survey_History_SKSQ(\r\n            tableType,\r\n            body,\r\n            {\r\n              default: true,\r\n              myFilter: data => {\r\n                data.map(val => {\r\n                  val.currentPage = body._page;\r\n                  val.pageSizes = body._page_size;\r\n                  return val;\r\n                });\r\n                return data;\r\n              }\r\n            },\r\n            chartData => {\r\n              this.createChart_shuiqingshuju(\r\n                \"shuiqingChart\",\r\n                tableType,\r\n                chartData.data\r\n              ); // 水情表格\r\n            }\r\n          );\r\n\r\n          this.cancelTableLoading(\"shuiqing\"); // 取消表格加载\r\n        }\r\n      );\r\n    },\r\n    // 设置表格总条数\r\n    setTableTotal(tableName, total) {\r\n      this.table[tableName].total = total;\r\n    },\r\n    // 表格加载中\r\n    letTableLoading(tableName) {\r\n      this.table[tableName].loading = true;\r\n    },\r\n    // 取消表格加载\r\n    cancelTableLoading(tableName) {\r\n      this.table[tableName].loading = false;\r\n    },\r\n    // 绘图\r\n    createChart_guanxiquxian(idName) {\r\n      let myChart = this.$echarts.init(document.getElementById(idName));\r\n\r\n      myChart.setOption({\r\n        title: {\r\n          // text: this.info.STNM\r\n          // subtext: \"纯属虚构\"\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\"\r\n        },\r\n        legend: {\r\n          data: [\"流量\", \"水位\"]\r\n        },\r\n        toolbox: {\r\n          show: true,\r\n          feature: {\r\n            mark: { show: true },\r\n            dataView: { show: true, readOnly: false },\r\n            magicType: { show: true, type: [\"line\", \"bar\"] },\r\n            restore: { show: true },\r\n            saveAsImage: { show: true }\r\n          }\r\n        },\r\n        calculable: true,\r\n        xAxis: [\r\n          {\r\n            type: \"category\",\r\n            boundaryGap: false,\r\n            data: [\r\n              \"00:00-02:00\",\r\n              \"02:00-04:00\",\r\n              \"04:00-06:00\",\r\n              \"06:00-08:00\",\r\n              \"08:00-10:00\"\r\n            ]\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            name: \"流量 m³/s\",\r\n            type: \"value\",\r\n            axisLabel: {\r\n              formatter: \"{value}\"\r\n            }\r\n          },\r\n          {\r\n            name: \"水位 m\",\r\n            type: \"value\",\r\n            axisLabel: {\r\n              formatter: \"{value} \"\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: \"流量\",\r\n            type: \"line\",\r\n            data: [11, 11, 15, 13, 12, 13, 10],\r\n            markLine: {\r\n              data: [{ type: \"average\", name: \"平均值\" }]\r\n            }\r\n          },\r\n          {\r\n            name: \"水位\",\r\n            type: \"line\",\r\n            data: [1, 4, 2, 5, 3, 2, 0],\r\n            yAxisIndex: 1,\r\n            markLine: {\r\n              data: [{ type: \"average\", name: \"平均值\" }],\r\n              effect: {\r\n                show: false,\r\n                loop: true,\r\n                period: 15,\r\n                scaleSize: 10,\r\n                color: null,\r\n                shadowColor: null,\r\n                shadowBlur: null\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      });\r\n    },\r\n\r\n    // 制图\r\n    createChart_shuiqingshuju(id, tableType, data) {\r\n      var ele = document.getElementById(id);\r\n\r\n      if (data.length > 0) {\r\n        var echartData = this.$App.transform_SKSQ_data_into_ehart_data(\r\n          data,\r\n          tableType,\r\n          true\r\n        ); // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        var mintime=echartData.x.list[0].slice(0, 10),maxtime=echartData.x.list[echartData.x.list.length-1].slice(0, 10);\r\n        var nowDate=new Date();\r\n        if(mintime.slice(0,4)==maxtime.slice(0,4) && maxtime.slice(0,4)==nowDate.getFullYear()){\r\n            for(var i=0;i<echartData.x.list.length;i++){\r\n              var time = echartData.x.list[i].substr(5);\r\n              echartData.x.list[i]=time;\r\n            }\r\n        }\r\n        switch (echartData.chartName) {\r\n                case \"历史表\":\r\n                    echartData.chartName=\"历史水情图\";\r\n                    break;\r\n                case \"小时表\":\r\n                    echartData.chartName=\"小时水情图\";\r\n                    break;\r\n                case \"日表\":\r\n                    echartData.chartName=\"日水情图\";\r\n                    break;\r\n                case \"月表\":\r\n                    echartData.chartName=\"月水情图\";\r\n                    break;\r\n                case \"年表\":\r\n                    echartData.chartName=\"年水情图\";\r\n                    break;\r\n                }\r\n        console.log(echartData);\r\n        console.log(echartData.x.list);\r\n        if (!this.chart.shuiqing) {\r\n          this.chart.shuiqing = this.$echarts.init(ele);\r\n        }\r\n        this.chart.shuiqing.setOption({\r\n          title: {\r\n            text: echartData.chartName\r\n          },\r\n          tooltip: {\r\n            trigger: \"axis\"\r\n          },\r\n          legend: {\r\n            data: [echartData.y1.name, echartData.y2.name],\r\n            y: \"bottom\"\r\n          },\r\n          toolbox: {\r\n            show: true,\r\n            feature: {\r\n              mark: { show: true },\r\n              magicType: { show: true, type: [\"line\", \"bar\"] },\r\n              saveAsImage: { show: true }\r\n            }\r\n          },\r\n          calculable: true,\r\n          animation: true,\r\n          xAxis: [\r\n            {\r\n              type: \"category\",\r\n              boundaryGap: false,\r\n              data: echartData.x.list,\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              name: `水位 m`,\r\n              type: \"value\",\r\n              axisLabel: {\r\n                formatter: \"{value} \"\r\n              },\r\n              scale: true,\r\n               max: echartData.y1.max,\r\n               min: echartData.y1.min\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: echartData.y1.name,\r\n              type: \"line\",\r\n              data: echartData.y1.list\r\n            },\r\n            {\r\n              name: echartData.y2.name,\r\n              type: \"line\",\r\n              data: echartData.y2.list\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    },\r\n    // 加载站点数据\r\n    loadSiteData(data) {\r\n      this.siteInfo = data;\r\n    },\r\n    // 组件加载中\r\n    componentLoading() {\r\n      this.boxLoading = true;\r\n    },\r\n    // 取消组件加载\r\n    cancelComponentLoading() {\r\n      this.boxLoading = false;\r\n    },\r\n    // 处理页码切换_水位数据\r\n    handleCurrentChange_shuiqing(index) {\r\n      this.table[\"shuiqing\"].currentPage = index;\r\n      this.search_shuiqing(this.shuiqing_select);\r\n    },\r\n    // 处理页码切换_关系曲线\r\n    handleCurrentChange_guanxiquxian(index) {\r\n      this.table[\"guanxiquxian\"].currentPage = index;\r\n      this.search_guanxiquxian();\r\n    },\r\n    // 处理页码切换_特征水位\r\n    handleCurrentChange_tezhengshuiqing() {\r\n      this.table[\"tezhengshuiqing\"].currentPage = index;\r\n      this.search_tezhengshuiqing();\r\n    },\r\n    // 处理每页显示条数切换_水位数据\r\n    handleSizeChange_shuiqing(pageSizes) {\r\n      this.table[\"shuiqing\"].pageSizes = pageSizes;\r\n      this.table[\"shuiqing\"].currentPage = 1;\r\n      this.search_shuiqing(this.shuiqing_select);\r\n    },\r\n    // 处理每页显示条数切换_关系曲线\r\n    handleSizeChange_guanxiquxian(pageSizes) {\r\n      this.table[\"guanxiquxian\"].pageSizes = pageSizes;\r\n      this.table[\"guanxiquxian\"].currentPage = 1;\r\n      this.search_guanxiquxian();\r\n    },\r\n    // 处理每页显示条数切换_特征水位\r\n    handleSizeChange_tezhengshuiqing(pageSizes) {\r\n      this.table[\"tezhengshuiqing\"].pageSizes = pageSizes;\r\n      this.table[\"tezhengshuiqing\"].currentPage = 1;\r\n      this.search_tezhengshuiqing();\r\n    },\r\n    // 分页过滤\r\n    pageFilter(currentPage, pageSizes, tableName) {\r\n      // 截取数组\r\n      var newList = this.table[tableName].Rows_filter.slice(\r\n        (currentPage - 1) * pageSizes,\r\n        currentPage * pageSizes\r\n      );\r\n\r\n      return newList;\r\n    },\r\n    // 水情历史数据表 当前正在激活的表头\r\n    setActiveColumns_shuiqing(tableType) {\r\n        console.log(this.info);\r\n        console.log(tableType);\r\n        console.log(this.table.shuiqing.columns);\r\n      this.table.shuiqing.activeColumns = this.table.shuiqing.columns[tableType];\r\n      this.select.shuiqing_select = tableType\r\n      console.log(this.table.shuiqing.activeColumns);\r\n    },\r\n    // 切换 水情历史数据表类型\r\n    tableTypeOnChange_shuiqing(tableType) {\r\n      console.log(this.table);\r\n      console.log('............................'+tableType);\r\n      this.tableType = tableType\r\n      this.table[\"shuiqing\"].currentPage = 1;\r\n      this.table[\"shuiqing\"].date = null;\r\n      this.table[\"shuiqing\"].sort = null;\r\n        console.log(this.table);\r\n      this.setDatePickerType_shuiqing(tableType); // 设置日期时间选择器的类型\r\n      // this.select[\"shuiqing_select\"] = tableType; // 设置选中的表\r\n      // this.setSelectOption_quickSearch(tableType); // 设置数据表快速查询选择框内容\r\n      this.setActiveColumns_shuiqing(tableType); // 设置水情历史数据表 当前激活的表头\r\n      this.table.shuiqing.loading = true; // 表格加载中\r\n      if (this[`setTableDefaultDate_shuiqing_${tableType}`]) {\r\n        this[`setTableDefaultDate_shuiqing_${tableType}`]();\r\n      }\r\n      // 获取对应水情历史数据表的数据\r\n      this.search_shuiqing(tableType);\r\n    },\r\n    // 设置水位数据历史表默认查询日期\r\n    setTableDefaultDate_shuiqing_historyTable() {\r\n      const end = new Date();\r\n      const start = zeroPointOfTheDay();\r\n\r\n      var timeSlot = [start, end];\r\n\r\n      this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n      function zeroPointOfTheDay() {\r\n        var date = new Date();\r\n        date.setHours(0);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0);\r\n        return date;\r\n      }\r\n    },\r\n    // 设置水位数据小时表默认查询日期\r\n    setTableDefaultDate_shuiqing_hourTable() {\r\n      const end = new Date();\r\n      const start = zeroPointOfTheDay();\r\n\r\n      var timeSlot = [start, end];\r\n\r\n      this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n      function zeroPointOfTheDay() {\r\n        var date = new Date();\r\n        date.setHours(0);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0);\r\n        return date;\r\n      }\r\n    },\r\n    // 设置水位数据日表默认查询日期\r\n    setTableDefaultDate_shuiqing_dayTable() {\r\n      const end = new Date();\r\n      const start = new Date();\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n\r\n      var timeSlot = [start, end];\r\n\r\n      this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n      function zeroPointOfTheDay() {\r\n        var date = new Date();\r\n        date.setHours(0);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0);\r\n        return date;\r\n      }\r\n    },\r\n    // 设置水位数据月表默认查询日期\r\n    setTableDefaultDate_shuiqing_monthTable() {\r\n      const end = new Date();\r\n      const start = new Date();\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 160);\r\n\r\n      var timeSlot = [start, end];\r\n\r\n      this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n      function zeroPointOfTheDay() {\r\n        var date = new Date();\r\n        date.setHours(0);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0);\r\n        return date;\r\n      }\r\n    },\r\n    // 设置日期时间选择器的类型\r\n    setDatePickerType_shuiqing(tableType) {\r\n      var datePickerType;\r\n      switch (tableType) {\r\n        case \"historyTable\":\r\n          datePickerType = \"datetimerange\";\r\n          break;\r\n        case \"hourTable\":\r\n          datePickerType = \"datetimerange\";\r\n          break;\r\n        case \"dayTable\":\r\n          datePickerType = \"daterange\";\r\n          break;\r\n        case \"monthTable\":\r\n          datePickerType = \"monthrange\";\r\n          break;\r\n      }\r\n      this.table[\"shuiqing\"].datePickerType = datePickerType;\r\n    },\r\n    // 设置数据表快速查询选择框内容\r\n    setSelectOption_quickSearch(tableType) {\r\n      this.select.activeQuickSearchList = this.select.quickSearch[tableType];\r\n      this.select.select = this.select.activeQuickSearchList[0]\r\n        ? this.select.activeQuickSearchList[0].value\r\n        : null; // 设置默认值为第一项\r\n    },\r\n    // 获取特征水位表格的数据\r\n    getTableData_tezhengshuiqing(\r\n      pageSizes,\r\n      currentPage,\r\n      body,\r\n      callback,\r\n      callback_beforeFilter\r\n    ) {\r\n      this.axios\r\n        .get(\r\n          `/guanqu/admin/ST_G_CQORD?_page_size=${pageSizes ||\r\n            20}&_page=${currentPage || 1}`,\r\n          {\r\n            params: body\r\n          }\r\n        )\r\n        .then(res => {\r\n          if (typeof callback_beforeFilter == \"function\") {\r\n            callback_beforeFilter({\r\n              data: res.data.rows || [],\r\n              total: res.data.total || 0\r\n            });\r\n          }\r\n          console.log(\"tezhengshuiqing\", res);\r\n          // 水位数据过滤\r\n          var data = res.data.rows.map(val => {\r\n            val.currentPage = this.table.shuiqing.currentPage; // 添加数据当前页码\r\n            val.pageSizes = this.table.shuiqing.pageSizes; // 添加当前每页条数到数据\r\n            val.TMMXQ = this.dateFilter(val.TMMXQ); // 日期过滤\r\n            val.TMXQ = this.Z_Filter(val.TMXQ, 3); // 平均流量过滤\r\n            val.YMXQZ = this.Z_Filter(val.YMXQZ); // 平均水位过滤\r\n            val.WQ = this.Z_Filter(val.WQ, 3); // 小时累计水量过滤\r\n\r\n            return val;\r\n          });\r\n          if (typeof callback == \"function\") {\r\n            callback({\r\n              data: data,\r\n              total: res.data.total\r\n            });\r\n          }\r\n        });\r\n    },\r\n    // 获取特征水位预警信息表的数据\r\n    getTableData_tezhengshuiqing_Alarm(body, callback, callback_beforeFilter) {\r\n      this.axios\r\n        .get(`/guanqu/admin/ST_Canal_Alarm`, {\r\n          params: body\r\n        })\r\n        .then(res => {\r\n          var data = res.data.rows;\r\n          if (typeof callback_beforeFilter == \"function\") {\r\n            callback_beforeFilter(res);\r\n          }\r\n          // 水位数据过滤\r\n          var data = res.data.rows.map(val => {\r\n            val.Q = this.Z_Filter(val.Q, 3); // 流量过滤\r\n            val.Z = this.Z_Filter(val.Z); // 水位过滤\r\n            val.JYQ = this.Z_Filter(val.JYQ, 3); // 预警流量过滤\r\n            val.JYZ = this.Z_Filter(val.JYZ); // 预警水位过滤\r\n\r\n            return val;\r\n          });\r\n          if (typeof callback == \"function\") {\r\n            callback(data);\r\n          }\r\n        });\r\n    },\r\n    // 更新 XX 表格的数据\r\n    setTableData(tableName, data) {\r\n      this.table[tableName].Rows_filter = data;\r\n    },\r\n    // 获取对应关系曲线数据表的数据\r\n    getTableData_guanxiquxian(callback) {\r\n      this.axios\r\n        .get(`/guanqu/admin/ST_ZQRL_B`, {\r\n          params: {\r\n            STCD: this.info.STCD\r\n          }\r\n        })\r\n        .then(res => {\r\n          var data = res.data.rows;\r\n          if (typeof callback == \"function\") {\r\n            callback(data);\r\n          }\r\n        });\r\n    },\r\n    // 更新水情历史数据表的数据\r\n    setTableData_guanxiquxian(data) {\r\n      this.table.guanxiquxian.Rows_filter = data;\r\n    },\r\n    // 根据关联编号获取关联站点\r\n    getRelateSiteByRelateCode(callback) {\r\n      var RELATECODE = this.info.RELATECODE;\r\n      if (RELATECODE && RELATECODE != 0) {\r\n        this.axios\r\n          .get(`/guanqu/admin/ST_STBPRP_B`, {\r\n            params: {\r\n              RELATECODE: RELATECODE\r\n            }\r\n          })\r\n          .then(res => {\r\n            var data = res.data.rows;\r\n            if (typeof callback == \"function\") {\r\n              callback(data);\r\n            }\r\n          });\r\n      }\r\n    },\r\n    // 根据行政区划编码获取行政区划\r\n    getCompartmentByADDVCD(callback) {\r\n      var ADDVCD = this.info.rowinfo.ADDVCD;\r\n      if (ADDVCD && ADDVCD != \"\") {\r\n        this.axios\r\n          .get(`/guanqu/admin/WRP_AD_B`, {\r\n            params: {\r\n              AD_CD: ADDVCD\r\n            }\r\n          })\r\n          .then(res => {\r\n            var data = res.data.rows;\r\n            if (typeof callback == \"function\") {\r\n              callback(data);\r\n            }\r\n          });\r\n      }\r\n    },\r\n    // 特征水位表格查询\r\n    search_tezhengshuiqing() {\r\n      // this.letTableLoading(\"tezhengshuiqing\"); // 表格加载中\r\n      // 传递站码参数\r\n      var body = {\r\n        STCD: this.siteInfo.STCD,\r\n        _page: this.table.tezhengshuiqing.currentPage,\r\n        _page_size: this.table.tezhengshuiqing.pageSizes\r\n      };\r\n\r\n      if (this.table.tezhengshuiqing.date) {\r\n        body.YR = this.$FilterData.elDatePicker_Filter(\r\n          this.table.tezhengshuiqing.date,\r\n          \"maxQTable\"\r\n        );\r\n      }\r\n\r\n      this.$GetData.Survey_History_SKSQ(\r\n        \"maxZ\",\r\n        body,\r\n        {\r\n          default: true,\r\n          myFilter: data => {\r\n            data.map(val => {\r\n              val.currentPage = body._page;\r\n              val.pageSizes = body._page_size;\r\n              return val;\r\n            });\r\n            return data;\r\n          }\r\n        },\r\n        data => {\r\n          this.setTableTotal(\"tezhengshuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\r\n          this.setTableData(\"tezhengshuiqing\", data.data); // 更新特征水位数据表的数据\r\n          this.cancelTableLoading(\"tezhengshuiqing\"); // 取消表格加载\r\n        }\r\n      );\r\n\r\n      // // 获取特征水位表格数据\r\n      // this.getTableData_tezhengshuiqing(pageSizes, currentPage, body, data => {\r\n\r\n      // });\r\n    },\r\n    // 设置特征水位预警信息数据\r\n    setAlarmData_tezhengshuiqing(data) {\r\n      this.table.tezhengshuiqing.alarmData = data;\r\n    },\r\n    // 处理日期时间选择器确定事件_水位数据\r\n    handleDatePickerChange(item) {\r\n      this.table.shuiqing.currentPage = 1;\r\n      this.shuiqing_select = this.tableType\r\n      console.log(this.shuiqing_select);\r\n      this.search_shuiqing(this.shuiqing_select);\r\n    },\r\n    // 设置水库水情预警信息\r\n    set_SKSQ_alarmInfo(STCD) {\r\n      console.warn(\"set_SKSQ_alarmInfo\",STCD)\r\n      this.$GetData.Survey_History_SKSQ(\r\n        \"alarmTable\",\r\n        {\r\n          STCD: STCD,\r\n        },\r\n        true,\r\n        data => {\r\n          var yujingdata = data.data[0];\r\n\r\n          this.yujingdata.FWL = yujingdata.FWL;\r\n          this.yujingdata.FWL79 = yujingdata.FWL79;\r\n          this.yujingdata.SJWL = yujingdata.SJWL;\r\n          this.yujingdata.JYWL = yujingdata.JYWL;\r\n          // 如果查询日期是 4-6 月，如果是 7-9 月\r\n          // if (is_Between_4_and_6(date)) {\r\n          //   this.yujingdata.FWL = yujingdata.FWL\r\n          // } else if (is_Between_7_and_9(date)) {\r\n          //   this.yujingdata.FWL = yujingdata.FWL79\r\n          // }\r\n          // console.log(\"Survey_History_SKSQ\", data.data)\r\n        }\r\n      );\r\n\r\n      // function is_Between_4_and_6 (date) {\r\n      //   var start, start_Year, start_Month, start_Day, start_Hours, start_Minutes;\r\n      //           start = date[0];\r\n      //           start_Year = start.getFullYear();\r\n      //           start_Month = addZero((start.getMonth() + 1));\r\n      //           start_Day = addZero(start.getDate());\r\n      //           start_Hours = addZero(start.getHours());\r\n      //           start_Minutes = addZero(start.getMinutes());\r\n\r\n      //           start = `${start_Year}-${start_Month}-${start_Day} ${start_Hours}:${start_Minutes}`;\r\n\r\n      //           var end, end_Year, end_Month, end_Day, end_Hours, end_Minutes;\r\n      //           end = date[1];\r\n      //           end_Year = end.getFullYear();\r\n      //           end_Month = addZero(end.getMonth() + 1);\r\n      //           end_Day = addZero(end.getDate());\r\n      //           end_Hours = addZero(end.getHours());\r\n      //           end_Minutes = addZero(end.getMinutes());\r\n      //   console.log(\"date\", date)\r\n      // }\r\n\r\n      // function is_Between_7_and_9 (date) {\r\n\r\n      // }\r\n    },\r\n\r\n    handleDatePickerChange_tezhengshuiqing() {\r\n      this.table.tezhengshuiqing.currentPage = 1;\r\n      this.search_tezhengshuiqing();\r\n    },\r\n    handleDatePickerChange_guanxiquxian(item) {\r\n      console.log(\"item\", item);\r\n      this.search_guanxiquxian();\r\n    },\r\n    // 设置 xx表格 时间选择器值\r\n    setTableDate(tableName, val) {\r\n      this.table[tableName].date = val;\r\n    },\r\n    // 特征水情表默认查询时间\r\n    setTableDefaultDate_tezhengshuiqing() {\r\n      const end = new Date();\r\n      const start = new Date();\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 5);\r\n\r\n      var timeSlot = [start, end];\r\n\r\n      this.setTableDate(\"tezhengshuiqing\", timeSlot);\r\n    },\r\n    // 排序\r\n    sort_change_shuiqing(item) {\r\n      this.table.shuiqing.sort = item;\r\n\r\n      this.search_shuiqing(this.shuiqing_select);\r\n    },\r\n    // 查询关系曲线表格\r\n    search_guanxiquxian() {\r\n      // this.letTableLoading(\"guanxiquxian\");\r\n\r\n      // // 传递参数\r\n      // var body = {\r\n      //   STCD: this.siteInfo.STCD,\r\n      //   _page: this.table[\"guanxiquxian\"].currentPage || 1,\r\n      //   _page_size: this.table[\"guanxiquxian\"].pageSizes || 20\r\n      // };\r\n      const end = new Date();\r\n      const start = zeroPointOfTheDay();\r\n\r\n      var timeSlot = [start, end];\r\n\r\n      this.setTableDate(\"guanxiquxian\", timeSlot);\r\n\r\n      function zeroPointOfTheDay() {\r\n        var date = new Date();\r\n        date.setHours(0);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0);\r\n        return date;\r\n      }\r\n      this.loadkrlineBydate();\r\n      // 如果有选择日期进行查询，根据表格类型传递参数\r\n      // if (this.table.guanxiquxian.date) {\r\n      //   body.YR = this.$FilterData.elDatePicker_Filter(\r\n      //     this.table.guanxiquxian.date,\r\n      //     \"onlyYear\"\r\n      //   );\r\n      // }\r\n\r\n      // this.$GetData.Base_MonitoringSites(\r\n      //   \"Z_Q_relation\",\r\n      //   body,\r\n      //   {\r\n      //     default: true,\r\n      //     myFilter: data => {\r\n      //       data.map(val => {\r\n      //         val.currentPage = body._page;\r\n      //         val.pageSizes = body._page_size;\r\n      //         return val;\r\n      //       });\r\n      //       return data;\r\n      //     }\r\n      //   },\r\n      //   data => {\r\n      //     this.setTableTotal(\"guanxiquxian\", data.total);\r\n      //     this.setTableData(\"guanxiquxian\", data.data);\r\n      //     this.cancelTableLoading(\"guanxiquxian\");\r\n      //   }\r\n      // );\r\n    },\r\n    loadkrlineBydate(){\r\n      var obj={\r\n        begintime:this.table.guanxiquxian.date[0],\r\n        endtime:this.table.guanxiquxian.date[1],\r\n        sitename:this.siteInfo.STCD\r\n      };\r\n       this.axios.get('/fieldinfo/swkrdatabydate',{params:obj}).then(res => {\r\n            var _data = res.data; // 数据深拷贝\r\n            _data= _data.map(val => {\r\n              val.currentPage = 1;\r\n              val.pageSizes = 20;\r\n              return val;\r\n            });\r\n            this.setTableData(\"guanxiquxian\", _data);\r\n            this.setTableTotal(\"guanxiquxian\", _data.length);\r\n            this.table[\"guanxiquxian\"].currentPage=1;\r\n            this.table[\"guanxiquxian\"].pageSizes=20;\r\n            var echartData = {\r\n                chartName: \"\",\r\n                x: new Object(),\r\n                y1: new Object(),\r\n                y2: new Object(),\r\n                y3: new Object(),\r\n                markdata:[],\r\n            }\r\n                    // y1轴\r\n                    echartData.y1.name = \"水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n                    //设置markLine\r\n                    var jhsw=new Object();\r\n                    jhsw.name='校核水位 '+2524.12;\r\n                    jhsw.yAxis=2524.12;\r\n                    jhsw.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                           color:'orange'\r\n                    }\r\n                    echartData.markdata.push(jhsw);\r\n                    var zcsw=new Object();\r\n                    zcsw.name='正常蓄水位 '+2520.2;\r\n                    zcsw.yAxis=2520.2;\r\n                    zcsw.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                           color:'orange'\r\n                    }\r\n                    echartData.markdata.push(zcsw);\r\n                    var y1max = 2525,\r\n                        y1min = Math.floor(FilterMethods.methods.get_echart_min(echartData.y1.list));\r\n                    if(y1min>2514){\r\n                      y1min=2514;\r\n                    }else{\r\n                      var ssw=new Object();\r\n                      ssw.name='死水位 '+2514;\r\n                      ssw.yAxis=2514;\r\n                      ssw.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                           color:'orange'\r\n                    }\r\n                      echartData.markdata.push(ssw);\r\n                    }\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min; // y1最小值\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"库容\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"W\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y2max = Math.ceil(FilterMethods.methods.get_echart_max(echartData.y2.list)),\r\n                        y2min = Math.floor(FilterMethods.methods.get_echart_min(echartData.y2.list));\r\n                    echartData.y2.max = y2max; // y2最大值\r\n                    echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.TM;\r\n                        return time;\r\n                    });\r\n                    var datalist1=[];\r\n                    var datalist2=[];\r\n                    for(var i=0;i<echartData.x.list.length;i++){\r\n                      var obj_data1=[echartData.x.list[i],echartData.y1.list[i]];\r\n                      datalist1.push(obj_data1);\r\n                      var obj_data2=[echartData.x.list[i],echartData.y2.list[i]];\r\n                      datalist2.push(obj_data2);\r\n                    }\r\n                    echartData.y1.list=datalist1;\r\n                    echartData.y2.list=datalist2;\r\n            this.createKrchart(echartData);\r\n        });\r\n    },\r\n    //带条件的库容曲线\r\n    createKrchart(echartData){\r\n      var myChart = this.$echarts.init(document.getElementById(\"guanxiChart\"));\r\n      myChart.setOption({\r\n        title: { text: \"\" },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            animation: false\r\n         }\r\n        },\r\n        legend: {\r\n          data: [ echartData.y1.name, echartData.y2.name ]\r\n        },\r\n        axisPointer: {\r\n        link: {xAxisIndex: 'all'}\r\n        },\r\n        grid: [{\r\n        left: 38,\r\n        right: 18,\r\n        height: '34%'\r\n        }, {\r\n        left: 38,\r\n        right: 18,\r\n        top: '60%',\r\n        height: '33.5%'\r\n       }],\r\n        xAxis: [\r\n        {\r\n            type: 'time',\r\n            boundaryGap: false,\r\n            data: echartData.x.list,\r\n            //axisLabel:{interval:parseInt(echartData.x.list.length/5),rotate:0},\r\n        },\r\n        {\r\n            gridIndex: 1,\r\n            type: 'time',\r\n            boundaryGap: false,\r\n            data: echartData.x.list,\r\n            position: 'bottom'\r\n        }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            name: echartData.y1.name+'(m)',\r\n            type: \"value\",\r\n            minInterval:1, \r\n            min:echartData.y1.min,\r\n            max:echartData.y1.max\r\n          },\r\n          {\r\n            gridIndex: 1,\r\n            name: echartData.y2.name+'(万m³)',\r\n            type: \"value\",\r\n            minInterval:1, \r\n            min:200,\r\n            max:1000\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: echartData.y1.name,\r\n            type: \"line\",\r\n            yAxisIndex: 0,\r\n            smooth:true,\r\n            data:echartData.y1.list,\r\n            markLine : {\r\n                symbol:'none',\r\n                itemStyle : {  \r\n                                normal : {  \r\n                                    lineStyle:{  \r\n                                        color:'orange',\r\n                                    }  \r\n                                }  \r\n                            },\r\n                data : echartData.markdata,\r\n            },\r\n          },\r\n          {\r\n            name: echartData.y2.name,\r\n            type: \"line\",\r\n            xAxisIndex: 1,\r\n            yAxisIndex: 1,\r\n            smooth:true,\r\n            data:echartData.y2.list\r\n          }\r\n        ]\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    // 组件加载中\r\n    console.log(this.info);\r\n      this.componentLoading();\r\n\r\n    this.shuiqing_select = this.info.rowinfo.tableType.sksq;\r\n\r\n    // 获取详情数据\r\n    this.axios\r\n      .get(`/guanqu/table/details?ID=${this.info.rowinfo.STCD}&pk=STCD`)\r\n      .then(res => {\r\n        //获取预警数据\r\n        this.axios.get('/guanqu/table/ST_RSV_Alarm?STCD='+res.data.STCD).then(res =>{\r\n            console.log(res);\r\n            this.yujingdata = res.data.list[0];\r\n          this.yujingdata.FWL = this.Z_Filter(this.yujingdata.FWL);\r\n          this.yujingdata.FWL79 = this.Z_Filter(this.yujingdata.FWL79);\r\n        });\r\n\r\n        // 站点信息\r\n        // 根据关联编号获取关联站点\r\n        this.getRelateSiteByRelateCode(data => {\r\n          console.log(\"RelateSite\", data);\r\n        });\r\n        // 根据行政区划码获取行政区划名\r\n        this.getCompartmentByADDVCD(data => {\r\n          this.siteInfo.AD_NM = data[0].AD_NM;\r\n        });\r\n\r\n        // 根据河流编码获取河流名\r\n        this.$GetData.Base_R_I(\r\n          {\r\n            RVCD: this.info.rowinfo.RVCD\r\n          },\r\n          true,\r\n          data => {\r\n            this.siteInfo.RVCD = data.data[0].RVNM;\r\n          }\r\n        );\r\n\r\n        // 根据流域编码获取流域名\r\n        this.$GetData.Base_B_I(\r\n          {\r\n            CTCD: this.info.rowinfo.CTCD\r\n          },\r\n          true,\r\n          data => {\r\n            this.siteInfo.CTCD = data.data[0].CTNM;\r\n          }\r\n        );\r\n        console.log(res.data);\r\n        // 加载站点数据\r\n        this.loadSiteData(res.data);\r\n        // 加载取消\r\n        this.cancelComponentLoading();\r\n        // 水位数据\r\n          this.tableTypeOnChange_shuiqing(this.info.rowinfo.tableType.sksq); // 设置 默认的水情历史数据表\r\n        // 关系曲线\r\n        // this.search_guanxiquxian();\r\n        // 特征水位最大流量表数据\r\n        // if (this.setTableDefaultDate_tezhengshuiqing) {\r\n        //   this.setTableDefaultDate_tezhengshuiqing(); // 默认查询日期\r\n        // }\r\n        this.search_tezhengshuiqing();\r\n        // 设置水库水情预警信息\r\n        this.set_SKSQ_alarmInfo(this.siteInfo.STCD);\r\n        // 关系曲线\r\n        this.search_guanxiquxian();\r\n\r\n        // this.getTableData_tezhengshuiqing_Alarm(\r\n        //   {\r\n        //     STCD: this.siteInfo.STCD\r\n        //   },\r\n        //   data => {\r\n        //     this.setAlarmData_tezhengshuiqing(data[0]);\r\n        //   }\r\n        // );\r\n      });\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"less\" scope>\r\n@import \"./common/common.less\";\r\n.drawer-profile {\r\n  font-size: @siteInfoFontSize;\r\n  position: relative;\r\n  .outPutButton {\r\n    position: absolute;\r\n    right: -10px;\r\n    top: -45px;\r\n    z-index: 2;\r\n  }\r\n  .row_header {\r\n    text-align: center;\r\n    font-size: 1.5625rem;\r\n    font-weight: 700;\r\n  }\r\n\r\n  .relationRow {\r\n    margin-top: 1.25rem;\r\n    button {\r\n      margin-right: 1.25rem;\r\n    }\r\n  }\r\n  .checkBoxItem {\r\n    margin: 0 0.9375rem;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Details"}]}