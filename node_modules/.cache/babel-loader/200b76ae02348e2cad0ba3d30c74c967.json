{"remainingRequest":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\work2022\\gvisualplace\\zhihuiguanqu\\src\\assets\\commonJS\\dialog.js","dependencies":[{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\src\\assets\\commonJS\\dialog.js","mtime":1574324455033},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\babel.config.js","mtime":1577669403468},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport Vue from 'vue'; // v-dialogDrag: 弹窗拖拽属性\n\nVue.directive('dialogDrag', {\n  bind: function bind(el, binding, vnode, oldVnode) {\n    // 自定义属性，判断是否可拖拽　\n    if (!binding.value) return;\n    var dialogHeaderEl = el.querySelector('.el-dialog__header');\n    var dragDom = el.querySelector('.el-dialog');\n    dialogHeaderEl.style.cssText += ';cursor:move;';\n    dragDom.style.cssText += ';top:0px;'; // 获取原有属性 ie dom元素.currentStyle 火狐谷歌 window.getComputedStyle(dom元素, null);\n\n    var sty = function () {\n      if (document.body.currentStyle) {\n        // 在ie下兼容写法\n        return function (dom, attr) {\n          return dom.currentStyle[attr];\n        };\n      } else {\n        return function (dom, attr) {\n          return getComputedStyle(dom, false)[attr];\n        };\n      }\n    }();\n\n    dialogHeaderEl.onmousedown = function (e) {\n      // 鼠标按下，计算当前元素距离可视区的距离\n      var disX = e.clientX - dialogHeaderEl.offsetLeft;\n      var disY = e.clientY - dialogHeaderEl.offsetTop;\n      var screenWidth = document.body.clientWidth; // body当前宽度\n\n      var screenHeight = document.documentElement.clientHeight; // 可见区域高度(应为body高度，可某些环境下无法获取)\n\n      var dragDomWidth = dragDom.offsetWidth; // 对话框宽度\n\n      var dragDomheight = dragDom.offsetHeight; // 对话框高度\n\n      var minDragDomLeft = dragDom.offsetLeft;\n      var maxDragDomLeft = screenWidth - dragDom.offsetLeft - dragDomWidth;\n      var minDragDomTop = dragDom.offsetTop;\n      var maxDragDomTop = screenHeight - dragDom.offsetTop - dragDomheight; // 获取到的值带px 正则匹配替换\n\n      var styL = sty(dragDom, 'left'); // 为兼容ie　\n\n      if (styL === 'auto') styL = '0px';\n      var styT = sty(dragDom, 'top');\n      console.log(styL); // 注意在ie中 第一次获取到的值为组件自带50% 移动之后赋值为px\n\n      if (styL.includes('%')) {\n        styL = +document.body.clientWidth * (+styL.replace(/%/g, '') / 100);\n        styT = +document.body.clientHeight * (+styT.replace(/%/g, '') / 100);\n      } else {\n        styL = +styL.replace(/px/g, '');\n        styT = +styT.replace(/px/g, '');\n      }\n\n      ;\n\n      document.onmousemove = function (e) {\n        // 通过事件委托，计算移动的距离\n        var left = e.clientX - disX;\n        var top = e.clientY - disY; // 边界处理\n\n        if (-left > minDragDomLeft) {\n          left = -minDragDomLeft;\n        } else if (left > maxDragDomLeft) {\n          left = maxDragDomLeft;\n        }\n\n        if (-top > minDragDomTop) {\n          top = -minDragDomTop;\n        } else if (top > maxDragDomTop) {\n          top = maxDragDomTop;\n        } // 移动当前元素\n\n\n        dragDom.style.cssText += \";left:\".concat(left + styL, \"px;top:\").concat(top + styT, \"px;\");\n      };\n\n      document.onmouseup = function (e) {\n        document.onmousemove = null;\n        document.onmouseup = null;\n      };\n\n      return false;\n    };\n  }\n});\nVue.directive('dialogChange', {\n  bind: function bind(el, binding, vnode, oldVnode) {\n    //弹框可拉伸最小宽高\n    var minWidth = 450;\n    var minHeight = 300; //初始非全屏\n\n    var isFullScreen = false; //当前宽高\n\n    var nowWidth = 0;\n    var nowHight = 0; //当前顶部高度\n\n    var nowMarginTop = 0; //获取弹框头部（这部分可双击全屏）\n\n    var dialogHeaderEl = el.querySelector('.el-dialog__header'); //弹窗\n\n    var dragDom = el.querySelector('.el-dialog'); //给弹窗加上overflow auto；不然缩小时框内的标签可能超出dialog；\n\n    dragDom.style.overflow = \"auto\"; //清除选择头部文字效果\n\n    dialogHeaderEl.onselectstart = new Function(\"return false\"); //头部加上可拖动cursor\n\n    dialogHeaderEl.style.cursor = 'move'; // 获取原有属性 ie dom元素.currentStyle 火狐谷歌 window.getComputedStyle(dom元素, null);\n\n    var sty = dragDom.currentStyle || window.getComputedStyle(dragDom, null);\n\n    var moveDown = function moveDown(e) {\n      // 鼠标按下，计算当前元素距离可视区的距离\n      var disX = e.clientX - dialogHeaderEl.offsetLeft;\n      var disY = e.clientY - dialogHeaderEl.offsetTop; // 获取到的值带px 正则匹配替换\n\n      var styL, styT; // 注意在ie中 第一次获取到的值为组件自带50% 移动之后赋值为px\n\n      if (sty.left.includes('%')) {\n        styL = +document.body.clientWidth * (+sty.left.replace(/\\%/g, '') / 100);\n        styT = +document.body.clientHeight * (+sty.top.replace(/\\%/g, '') / 100);\n      } else {\n        styL = +sty.left.replace(/\\px/g, '');\n        styT = +sty.top.replace(/\\px/g, '');\n      }\n\n      ;\n\n      document.onmousemove = function (e) {\n        // 通过事件委托，计算移动的距离 \n        var l = e.clientX - disX;\n        var t = e.clientY - disY; // 移动当前元素  \n\n        dragDom.style.left = \"\".concat(l + styL, \"px\");\n        dragDom.style.top = \"\".concat(t + styT, \"px\"); //将此时的位置传出去\n        //binding.value({x:e.pageX,y:e.pageY})\n      };\n\n      document.onmouseup = function (e) {\n        document.onmousemove = null;\n        document.onmouseup = null;\n      };\n    };\n\n    dialogHeaderEl.onmousedown = moveDown; //双击头部效果\n\n    dialogHeaderEl.ondblclick = function (e) {\n      var showdiv = document.getElementById(\"showdiv\");\n\n      if (isFullScreen == false) {\n        nowHight = dragDom.clientHeight;\n        nowWidth = dragDom.clientWidth;\n        nowMarginTop = dragDom.style.marginTop;\n        dragDom.style.left = 0;\n        dragDom.style.top = 0;\n        dragDom.style.height = \"100VH\";\n        dragDom.style.width = \"100VW\";\n\n        if (showdiv) {\n          showdiv.style.height = dragDom.clientHeight - 115 + 'px';\n          showdiv.style.overflowY = 'auto';\n          showdiv.style.overflowX = 'hidden';\n        }\n\n        dragDom.style.marginTop = 0;\n        isFullScreen = true;\n        dialogHeaderEl.style.cursor = 'initial';\n        dialogHeaderEl.onmousedown = null;\n      } else {\n        dragDom.style.height = \"auto\";\n        dragDom.style.width = nowWidth + 'px';\n        dragDom.style.marginTop = nowMarginTop;\n\n        if (showdiv) {\n          showdiv.style.height = dragDom.clientHeight - 115 + 'px';\n          showdiv.style.overflowY = 'auto';\n          showdiv.style.overflowX = 'hidden';\n        }\n\n        isFullScreen = false;\n        dialogHeaderEl.style.cursor = 'move';\n        dialogHeaderEl.onmousedown = moveDown;\n      }\n    }; //拉伸\n\n\n    var resizeEl = document.createElement(\"div\");\n    dragDom.appendChild(resizeEl); //在弹窗右下角加上一个10-10px的控制块\n\n    resizeEl.style.cursor = 'se-resize';\n    resizeEl.style.position = 'absolute';\n    resizeEl.style.height = '10px';\n    resizeEl.style.width = '10px';\n    resizeEl.style.right = '5px';\n    resizeEl.style.bottom = '5px';\n    resizeEl.classList.add(\"el-icon-circle-plus\");\n    resizeEl.style.fontSize = '16px';\n    dragDom.style.overflow = 'hidden'; //鼠标拉伸弹窗\n\n    resizeEl.onmousedown = function (e) {\n      var showdiv = document.getElementById(\"showdiv\"); // 记录初始x位置\n\n      var clientX = e.clientX; // 鼠标按下，计算当前元素距离可视区的距离\n\n      var disX = e.clientX - resizeEl.offsetLeft;\n      var disY = e.clientY - resizeEl.offsetTop;\n\n      document.onmousemove = function (e) {\n        e.preventDefault(); // 移动时禁用默认事件\n        // 通过事件委托，计算移动的距离 \n\n        var x = e.clientX - disX + (e.clientX - clientX); //这里 由于elementUI的dialog控制居中的，所以水平拉伸效果是双倍\n\n        var y = e.clientY - disY; //比较是否小于最小宽高\n\n        dragDom.style.width = x > minWidth ? \"\".concat(x, \"px\") : minWidth + 'px';\n        dragDom.style.height = y > minHeight ? \"\".concat(y, \"px\") : minHeight + 'px';\n\n        if (showdiv) {\n          var sheight = y > minHeight ? y : minHeight;\n          sheight = sheight - 115;\n          showdiv.style.height = sheight + 'px';\n          showdiv.style.overflowY = 'auto';\n          showdiv.style.overflowX = 'hidden';\n        }\n      }; //拉伸结束\n\n\n      document.onmouseup = function (e) {\n        document.onmousemove = null;\n        document.onmouseup = null;\n      };\n    };\n  }\n});",{"version":3,"sources":["D:\\work2022\\gvisualplace\\zhihuiguanqu\\src\\assets\\commonJS\\dialog.js"],"names":["Vue","directive","bind","el","binding","vnode","oldVnode","value","dialogHeaderEl","querySelector","dragDom","style","cssText","sty","document","body","currentStyle","dom","attr","getComputedStyle","onmousedown","e","disX","clientX","offsetLeft","disY","clientY","offsetTop","screenWidth","clientWidth","screenHeight","documentElement","clientHeight","dragDomWidth","offsetWidth","dragDomheight","offsetHeight","minDragDomLeft","maxDragDomLeft","minDragDomTop","maxDragDomTop","styL","styT","console","log","includes","replace","onmousemove","left","top","onmouseup","minWidth","minHeight","isFullScreen","nowWidth","nowHight","nowMarginTop","overflow","onselectstart","Function","cursor","window","moveDown","l","t","ondblclick","showdiv","getElementById","marginTop","height","width","overflowY","overflowX","resizeEl","createElement","appendChild","position","right","bottom","classList","add","fontSize","preventDefault","x","y","sheight"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\n// v-dialogDrag: 弹窗拖拽属性\r\nVue.directive('dialogDrag', {\r\n  bind (el, binding, vnode, oldVnode) {\r\n　　　　　// 自定义属性，判断是否可拖拽　\r\n    if (!binding.value) return\r\n    const dialogHeaderEl = el.querySelector('.el-dialog__header')\r\n    const dragDom = el.querySelector('.el-dialog')\r\n    dialogHeaderEl.style.cssText += ';cursor:move;'\r\n    dragDom.style.cssText += ';top:0px;'\r\n\r\n    // 获取原有属性 ie dom元素.currentStyle 火狐谷歌 window.getComputedStyle(dom元素, null);\r\n    const sty = (function () {\r\n      if (document.body.currentStyle) {\r\n        // 在ie下兼容写法\r\n        return (dom, attr) => dom.currentStyle[attr]\r\n      } else {\r\n        return (dom, attr) => getComputedStyle(dom, false)[attr]\r\n      }\r\n    })()\r\n\r\n    dialogHeaderEl.onmousedown = (e) => {\r\n      // 鼠标按下，计算当前元素距离可视区的距离\r\n      const disX = e.clientX - dialogHeaderEl.offsetLeft\r\n      const disY = e.clientY - dialogHeaderEl.offsetTop\r\n\r\n      const screenWidth = document.body.clientWidth // body当前宽度\r\n      const screenHeight = document.documentElement.clientHeight // 可见区域高度(应为body高度，可某些环境下无法获取)\r\n\r\n      const dragDomWidth = dragDom.offsetWidth // 对话框宽度\r\n      const dragDomheight = dragDom.offsetHeight // 对话框高度\r\n\r\n      const minDragDomLeft = dragDom.offsetLeft\r\n      const maxDragDomLeft = screenWidth - dragDom.offsetLeft - dragDomWidth\r\n\r\n      const minDragDomTop = dragDom.offsetTop\r\n      const maxDragDomTop = screenHeight - dragDom.offsetTop - dragDomheight\r\n\r\n      // 获取到的值带px 正则匹配替换\r\n      let styL = sty(dragDom, 'left')\r\n 　　　　　// 为兼容ie　\r\n      if (styL === 'auto') styL = '0px'\r\n      let styT = sty(dragDom, 'top')\r\n\r\n      console.log(styL)\r\n      // 注意在ie中 第一次获取到的值为组件自带50% 移动之后赋值为px\r\n      if (styL.includes('%')) {\r\n        styL = +document.body.clientWidth * (+styL.replace(/%/g, '') / 100)\r\n        styT = +document.body.clientHeight * (+styT.replace(/%/g, '') / 100)\r\n      } else {\r\n        styL = +styL.replace(/px/g, '')\r\n        styT = +styT.replace(/px/g, '')\r\n      };\r\n\r\n      document.onmousemove = function (e) {\r\n        \r\n        // 通过事件委托，计算移动的距离\r\n        let left = e.clientX - disX\r\n        let top = e.clientY - disY\r\n        // 边界处理\r\n        if (-(left) > minDragDomLeft) {\r\n          left = -(minDragDomLeft)\r\n        } else if (left > maxDragDomLeft) {\r\n          left = maxDragDomLeft\r\n        }\r\n\r\n        if (-(top) > minDragDomTop) {\r\n          top = -(minDragDomTop)\r\n        } else if (top > maxDragDomTop) {\r\n          top = maxDragDomTop\r\n        }\r\n\r\n        // 移动当前元素\r\n        dragDom.style.cssText += `;left:${left + styL}px;top:${top + styT}px;`\r\n      }\r\n\r\n      document.onmouseup = function (e) {\r\n        document.onmousemove = null\r\n        document.onmouseup = null\r\n      }\r\n      return false\r\n    }\r\n  }\r\n})\r\n\r\nVue.directive('dialogChange', {\r\n  bind (el, binding, vnode, oldVnode) {\r\n    　　　　　//弹框可拉伸最小宽高\r\n    let minWidth = 450;\r\n    let minHeight = 300;\r\n    //初始非全屏\r\n    let isFullScreen = false;\r\n    //当前宽高\r\n    let nowWidth = 0;\r\n    let nowHight = 0;\r\n    //当前顶部高度\r\n    let nowMarginTop = 0;\r\n    //获取弹框头部（这部分可双击全屏）\r\n    const dialogHeaderEl = el.querySelector('.el-dialog__header');\r\n    //弹窗\r\n    const dragDom = el.querySelector('.el-dialog');\r\n    //给弹窗加上overflow auto；不然缩小时框内的标签可能超出dialog；\r\n    dragDom.style.overflow = \"auto\";\r\n    //清除选择头部文字效果\r\n    dialogHeaderEl.onselectstart = new Function(\"return false\");  \r\n    //头部加上可拖动cursor\r\n    dialogHeaderEl.style.cursor = 'move';\r\n\r\n    // 获取原有属性 ie dom元素.currentStyle 火狐谷歌 window.getComputedStyle(dom元素, null);\r\n    const sty = dragDom.currentStyle || window.getComputedStyle(dragDom, null);\r\n    let moveDown = (e) => {\r\n      // 鼠标按下，计算当前元素距离可视区的距离\r\n      const disX = e.clientX - dialogHeaderEl.offsetLeft;\r\n      const disY = e.clientY - dialogHeaderEl.offsetTop;\r\n\r\n      // 获取到的值带px 正则匹配替换\r\n      let styL, styT;\r\n\r\n      // 注意在ie中 第一次获取到的值为组件自带50% 移动之后赋值为px\r\n      if (sty.left.includes('%')) {\r\n        styL = +document.body.clientWidth * (+sty.left.replace(/\\%/g, '') / 100);\r\n        styT = +document.body.clientHeight * (+sty.top.replace(/\\%/g, '') / 100);\r\n      } else {\r\n        styL = +sty.left.replace(/\\px/g, '');\r\n        styT = +sty.top.replace(/\\px/g, '');\r\n      };\r\n\r\n      document.onmousemove = function (e) {\r\n        // 通过事件委托，计算移动的距离 \r\n        const l = e.clientX - disX;\r\n        const t = e.clientY - disY;\r\n\r\n        // 移动当前元素  \r\n        dragDom.style.left = `${l + styL}px`;\r\n        dragDom.style.top = `${t + styT}px`;\r\n\r\n        //将此时的位置传出去\r\n        //binding.value({x:e.pageX,y:e.pageY})\r\n      };\r\n\r\n      document.onmouseup = function (e) {\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n      };\r\n    }\r\n    dialogHeaderEl.onmousedown = moveDown;\r\n    //双击头部效果\r\n    dialogHeaderEl.ondblclick = (e) => {\r\n      var showdiv=document.getElementById(\"showdiv\");\r\n      if (isFullScreen == false) {\r\n        nowHight = dragDom.clientHeight;\r\n        nowWidth = dragDom.clientWidth;\r\n        nowMarginTop = dragDom.style.marginTop;\r\n        dragDom.style.left = 0;\r\n        dragDom.style.top = 0;\r\n        dragDom.style.height = \"100VH\";\r\n        dragDom.style.width = \"100VW\";\r\n        if(showdiv){\r\n          showdiv.style.height=(dragDom.clientHeight-115)+'px';\r\n          showdiv.style.overflowY='auto';\r\n          showdiv.style.overflowX='hidden';\r\n        }\r\n        dragDom.style.marginTop = 0;\r\n        isFullScreen = true;\r\n        dialogHeaderEl.style.cursor = 'initial';\r\n        dialogHeaderEl.onmousedown = null;\r\n      } else {\r\n        dragDom.style.height = \"auto\";\r\n        dragDom.style.width = nowWidth + 'px';\r\n        dragDom.style.marginTop = nowMarginTop;\r\n        if(showdiv){\r\n          showdiv.style.height=(dragDom.clientHeight-115)+'px';\r\n          showdiv.style.overflowY='auto';\r\n          showdiv.style.overflowX='hidden';\r\n        }\r\n        isFullScreen = false;\r\n        dialogHeaderEl.style.cursor = 'move';\r\n        dialogHeaderEl.onmousedown = moveDown;\r\n      }\r\n    }\r\n    \r\n\r\n    //拉伸\r\n    let resizeEl=document.createElement(\"div\");\r\n    dragDom.appendChild(resizeEl); \r\n    //在弹窗右下角加上一个10-10px的控制块\r\n    resizeEl.style.cursor = 'se-resize';\r\n    resizeEl.style.position = 'absolute';\r\n    resizeEl.style.height = '10px';\r\n    resizeEl.style.width = '10px';\r\n    resizeEl.style.right = '5px';\r\n    resizeEl.style.bottom = '5px';\r\n    resizeEl.classList.add(\"el-icon-circle-plus\");\r\n    resizeEl.style.fontSize = '16px';\r\n    dragDom.style.overflow='hidden';\r\n    //鼠标拉伸弹窗\r\n    resizeEl.onmousedown = (e) => {\r\n      var showdiv=document.getElementById(\"showdiv\");\r\n      // 记录初始x位置\r\n      const clientX = e.clientX;\r\n      // 鼠标按下，计算当前元素距离可视区的距离\r\n      const disX = e.clientX - resizeEl.offsetLeft;\r\n      const disY = e.clientY - resizeEl.offsetTop;\r\n\r\n      document.onmousemove = function (e) {\r\n        e.preventDefault(); // 移动时禁用默认事件\r\n\r\n        // 通过事件委托，计算移动的距离 \r\n        const x = e.clientX - disX + (e.clientX - clientX);//这里 由于elementUI的dialog控制居中的，所以水平拉伸效果是双倍\r\n        const y = e.clientY - disY;\r\n        //比较是否小于最小宽高\r\n        dragDom.style.width = x > minWidth ? `${x}px` : minWidth + 'px';\r\n        dragDom.style.height = y > minHeight ? `${y}px` : minHeight + 'px';\r\n        if(showdiv){\r\n          var sheight=y > minHeight ? y : minHeight;\r\n          sheight=sheight-115;\r\n          showdiv.style.height=sheight+'px';\r\n          showdiv.style.overflowY='auto';\r\n          showdiv.style.overflowX='hidden';\r\n        }\r\n        \r\n\r\n      };\r\n      //拉伸结束\r\n      document.onmouseup = function (e) {\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n      };\r\n    }\r\n  }\r\n})"]}]}