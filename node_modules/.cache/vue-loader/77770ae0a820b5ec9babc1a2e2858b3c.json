{"remainingRequest":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\gvisualplace\\zhihuiguanqu\\src\\components\\BaseBox\\BaseBox-yuqing.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\src\\components\\BaseBox\\BaseBox-yuqing.vue","mtime":1577669404018},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TipsQUDAO from \"@/components/BaseBox/Tips/Tips-qudaoshuiqing.vue\";\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\";\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\nimport {truncateSync} from \"fs\";\nimport {setTimeout} from \"timers\";\n\nimport test_data from \"./test_data\";\n\nexport default {\n    props: {\n        featrue: {\n            type: Object\n        },\n        search_FeatrueLayer: {\n            type: Function\n        }\n    },\n    components: {\n        TipsQUDAO\n    },\n    data() {\n        return {\n            //雨量颜色参考图\n            // 折叠面板对象\n            collapse: {\n                activeName: \"\",\n                list: []\n            },\n            // 地图对象\n            map: null,\n            // 该图层对象\n            JsonFlayer: null,\n            // 文字标注图层\n            TextGraphicsLayers: [],\n            // 提示 展示\n            tip: {\n                info_tip: null,\n                show_tip: false\n            },\n            // 表单数据\n            form: {\n                yuliang: '',\n                YCJXZ: '50',\n                singular: '50',\n                search_str: \"\",\n                adressList: [],\n                qudaoList: [],\n                guishuList: [],\n                social: [\"site\"],\n\n                checkBoxList: [\n                    {\n                        value: \"site\",\n                        size: \"small\",\n                        // iconType: \"logo-facebook\",\n                        title: \"站点\"\n                    },\n                    {\n                        value: \"STNM\",\n                        size: \"small\",\n                        // iconType: \"logo-facebook\",\n                        title: \"站名\"\n                    },\n                    {\n                        value: \"p\",\n                        size: \"small\",\n                        // iconType: \"logo-facebook\",\n                        title: \"雨量值\"\n                    }\n                ],\n                checkBoxList2: [\n                    {\n                        value: [],\n                        size: 'small',\n                        title: '全部',\n                        color: 'rgb(207,204,207)'\n                    },\n                    {\n                        value: [0, 0],\n                        size: 'small',\n                        title: '0',\n                        color: 'rgb(41,196,1)'\n                    },\n                    {\n                        value: [0, 10],\n                        size: 'small',\n                        title: '10',\n                        color: 'rgb(16,135,56)'\n                    },\n                    {\n                        value: [10, 25],\n                        size: 'small',\n                        title: '25',\n                        color: 'rgb(90,179,255)'\n                    },\n                    {\n                        value: [25, 50],\n                        size: 'small',\n                        title: '50',\n                        color: 'rgb(1,113,223)'\n                    },\n                    {\n                        value: [50, 100],\n                        size: 'small',\n                        title: '100',\n                        color: 'rgb(255,132,1)'\n                    },\n                    {\n                        value: [100, 250],\n                        size: 'small',\n                        title: '250',\n                        color: 'rgb(255,2,2)'\n                    },\n                ],\n                model_adress: null,\n                model_qudao: null,\n                model_guishu: ['1', '2', '3', '4', '5', '6', '7', '8'],\n                model_date: [],\n            },\n            // 表格数据\n            table: {\n                // 表头设置\n                columns: [\n                    {\n                        title: \" \",\n                        key: \"index\",\n                        width: 45,\n                        align: \"center\",\n                        fixed: \"left\"\n                    },\n                    {\n                        title: \"站名\",\n                        key: \"STNM\",\n                        width: 120,\n                        align: \"center\",\n                        fixed: \"left\",\n                        sortable: \"custom\"\n                    },\n                    {\n                        title: \"降雨(mm)\",\n                        key: \"p\",\n                        width: 140,\n                        align: \"center\",\n                        sortable: \"custom\"\n                    },\n                    {\n                        title: \"行政区划\",\n                        key: \"adnm\",\n                        width: 120,\n                        align: \"center\"\n                    },\n                    {\n                        title: \"灌区渠道\",\n                        key: \"canal_name\",\n                        width: 120,\n                        align: \"center\"\n                    },\n                ],\n                // 表体内容\n                Rows: [],\n                // 过滤后的表体内容\n                Rows_filter: [],\n                // 表格是否加载中\n                loading: false,\n                // 当前页\n                currentPage: 1,\n                // 每页显示数量\n                pageSizes: 20,\n                // 表体高度\n                height: 300\n            }\n        };\n    },\n    // 引入过滤方法到此组件\n    mixins: [FilterMethods, GetDataMethods],\n    methods: {\n        //获取默认时间\n        getinittime() {\n            var date = new Date();\n            var YR = date.getFullYear();\n            var MON = date.getMonth() + 1\n            var datearray = new Array();\n            if (parseInt(MON) < 10) {\n                MON = `0${MON}`;\n            }\n            var Day = date.getDate();\n            if (parseInt(Day) < 10) {\n                Day = `0${Day}`;\n            }\n            var Hour = date.getHours();\n            if (parseInt(Hour) < 10) {\n                Hour = `0${Hour}`;\n            }\n            if (date.getHours() < 8) {\n                //昨天的时间\n                var day1 = new Date();\n                day1.setTime(day1.getTime() - 24 * 60 * 60 * 1000);\n                day1.setHours(8);\n                day1.setMinutes(0);\n                day1.setSeconds(0);\n                var Hour2 = day1.getHours();\n                var MON2 = day1.getMonth() + 1;\n                var DAY2 = day1.getDate();\n                if (parseInt(Hour2) < 10) {\n                    Hour2 = `0${Hour2}`;\n                }\n                if (parseInt(MON2) < 10) {\n                    MON2 = `0${MON2}`;\n                }\n                if (parseInt(DAY2) < 10) {\n                    DAY2 = `0${DAY2}`;\n                }\n                var s1 = `${day1.getFullYear()}-${MON2}-${DAY2} ${Hour2}:00:00`\n                datearray[0] = s1;\n                datearray[1] = `${YR}-${MON}-${Day} ${date.getHours()}:00:00`;\n                console.log('time1', s1, 'time2', datearray[1]);\n            } else {\n                datearray[0] = `${YR}-${MON}-${Day} 08:00:00`;\n                datearray[1] = `${YR}-${MON}-${Day} ${Hour}:00:00`;\n            }\n            this.form.model_date = datearray;\n        },\n        //前一时段、后一时段\n        fronttime() {\n            if (this.form.model_date.length == 0) {\n                this.$message({\n                    message: '请先选择时间',\n                    type: 'warning'\n                });\n            } else {\n                var date1 = this.form.model_date[0].substr(0, 19);\n                date1 = date1.replace(/-/g, '/');\n                var timestamp1 = new Date(date1).getTime() - 60 * 60 * 1000;\n                timestamp1 = new Date(timestamp1);\n                var YR1 = timestamp1.getFullYear();\n                var MON1 = timestamp1.getMonth() + 1;\n                var DAY1 = timestamp1.getDate();\n                var Hour1 = timestamp1.getHours();\n                if (parseInt(Hour1) < 10) {\n                    Hour1 = `0${Hour1}`;\n                }\n                if (parseInt(MON1) < 10) {\n                    MON1 = `0${MON1}`;\n                }\n                if (parseInt(DAY1) < 10) {\n                    DAY1 = `0${DAY1}`;\n                }\n                this.form.model_date[0] = `${YR1}-${MON1}-${DAY1} ${Hour1}:00:00`;\n                // console.log(this.form.model_date[0]);\n\n                var date2 = this.form.model_date[1].substr(0, 19);\n                date2 = date2.replace(/-/g, '/');\n                var timestamp2 = new Date(date2).getTime() - 60 * 60 * 1000;\n                timestamp2 = new Date(timestamp2);\n                var YR2 = timestamp2.getFullYear();\n                var MON2 = timestamp2.getMonth() + 1;\n                var DAY2 = timestamp2.getDate();\n                var Hour2 = timestamp2.getHours();\n                if (parseInt(Hour2) < 10) {\n                    Hour2 = `0${Hour2}`;\n                }\n                if (parseInt(MON2) < 10) {\n                    MON2 = `0${MON2}`;\n                }\n                if (parseInt(DAY2) < 10) {\n                    DAY2 = `0${DAY2}`;\n                }\n                this.form.model_date[1] = `${YR2}-${MON2}-${DAY2} ${Hour2}:00:00`;\n                console.log(this.form.model_date[1]);\n                this.search();\n            }\n        },\n        aftertime() {\n            if (this.form.model_date.length == 0) {\n                this.$message({\n                    message: '请先选择时间',\n                    type: 'warning'\n                });\n            } else {\n                var date1 = this.form.model_date[0].substring(0, 19);\n                date1 = date1.replace(/-/g, '/');\n                var timestamp1 = new Date(date1).getTime() + 60 * 60 * 1000;\n                timestamp1 = new Date(timestamp1);\n                var YR1 = timestamp1.getFullYear();\n                var MON1 = timestamp1.getMonth() + 1;\n                var DAY1 = timestamp1.getDate();\n                var Hour1 = timestamp1.getHours();\n                if (parseInt(Hour1) < 10) {\n                    Hour1 = `0${Hour1}`;\n                }\n                if (parseInt(MON1) < 10) {\n                    MON1 = `0${MON1}`;\n                }\n                if (parseInt(DAY1) < 10) {\n                    DAY1 = `0${DAY1}`;\n                }\n                this.form.model_date[0] = `${YR1}-${MON1}-${DAY1} ${Hour1}:00:00`;\n                console.log(this.form.model_date[0]);\n\n                var date2 = this.form.model_date[1].substring(0, 19);\n                date2 = date2.replace(/-/g, '/');\n                var timestamp2 = new Date(date2).getTime() + 60 * 60 * 1000;\n                timestamp2 = new Date(timestamp2);\n                var YR2 = timestamp2.getFullYear();\n                var MON2 = timestamp2.getMonth() + 1;\n                var DAY2 = timestamp2.getDate();\n                var Hour2 = timestamp2.getHours();\n                if (parseInt(Hour2) < 10) {\n                    Hour2 = `0${Hour2}`;\n                }\n                if (parseInt(MON2) < 10) {\n                    MON2 = `0${MON2}`;\n                }\n                if (parseInt(DAY2) < 10) {\n                    DAY2 = `0${DAY2}`;\n                }\n                this.form.model_date[1] = `${YR2}-${MON2}-${DAY2} ${Hour2}:00:00`;\n                console.log(this.form.model_date[1]);\n                this.search();\n            }\n        },\n        // 表格每一行点击事件\n        cellClick(item) {\n            var evt = new Object();\n            evt.graphic = new Object();\n            evt.graphic.attributes = item;\n            evt.graphic.attributes.rowinfo = JSON.parse(JSON.stringify(item));\n            evt.graphic.attributes.rowinfo.tableType = {\n                yq: \"hourTable\"\n            };\n            var v = new Object();\n            v.itype = \"yuqing\";\n\n            // 设置中心缩放\n            this.setMapCenterandZoom(item.LGTD, item.LTTD);\n            // 取消所有站点的闪烁\n            this.$App.GraphicsLayer_Selection_clear();\n            // 对应站点闪烁\n            this.$App.add_Graphic_To_GraphicsLayer_Selection(item);\n            // 展示抽屉详情框\n            this.$App.showDrawer(evt, v);\n        },\n        // 提示展示\n        showTips(item) {\n            // 上面定义的时间不对，所以在这里重新定义\n            function getTime() {\n                let date = new Date(),\n                    YY = date.getFullYear(),\n                    MM = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1,\n                    DD = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate(),\n                    HH = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours(),\n                    mm = `00`,\n                    SS = `00`;\n                console.log(`${YY}-${MM}-${DD} ${HH}:${mm}:${SS}`);\n                return `${YY}-${MM}-${DD} ${HH}:${mm}:${SS}`\n            };\n            this.form.model_date[1] = getTime();\n\n            console.log('悬浮框');\n            console.log(item);\n\n            // 隐藏之前提示框\n            this.hideTips();\n            var div = `<div><div class=\"tip_row\">\n            <span class=\"tip_col_5 \">时间段：</span>\n            <span class=\"tip_col_7 zeng\" id=\"${item.STCD}_shijianduan\">&nbsp;</span>\n            <span class=\"tip_col_5\">累计降雨：</span>\n            <span class=\"tip_col_7\">${item.rowinfo.p || '&nbsp;'}mm</span>\n            </div>\n            <div class=\"divider\"></div><div id=\"${item.STCD}\" style=\"width: 500px;height:320px;margin:auto\"></div></div>`;\n\n            // var content = `<div id=\"myChart\" :style=\"{width: '340px', height: '250px', margin: 'auto'}\"></div>`; // 获取内容\n            this.map.infoWindow.resize(570, 650); // 提示框大小\n            this.map.infoWindow.setTitle(item.STNM); // 提示题目\n            this.map.infoWindow.setContent(div); // 提示内容\n\n            //获取坐标\n            var x=Number(item.LGTD);\n            var y=Number(item.LTTD);\n\n\n            //如果basemap使用ArcGIS的就需要\n            //转换坐标系\n            x = (x / 180.0) * 20037508.34\n            if (y > 85.05112) y = 85.05112;\n            if (y < -85.05112) y = -85.05112;\n            y = (Math.PI / 180.0) * y;\n            var tmp = Math.PI / 4.0 + y / 2.0;\n            y = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI;\n\n\n            var zoompoint = {\n                //spatialReference: {wkid: 4326},\n                spatialReference: this.map.spatialReference,\n                x: x,\n                y: y\n            };\n            console.log(zoompoint);\n            this.map.infoWindow.show(zoompoint, zoompoint);\n\n            // 如果事件类型不是鼠标经过，则\n            if (item.eventType != \"mouse-over\") {\n                // 设置中心和缩放 (接受经纬度，和缩放比例)\n                this.setMapCenterandZoom(Number(item.LGTD) + 0.1, item.LTTD);\n            }\n\n            var body = {\n                STCD: item.STCD,\n                // TM: this.$FilterData.elDatePicker_Filter(\n                //   this.$App.zeroPointToNowOfTheDay()\n                // ),\n                _page_size: 999999\n            };\n\n            // 时间参数\n            var DTT = this.$FilterData\n                .elDatePicker_Filter(this.$App.xPointToNowOfTheDay(8))\n                .split(\",\");\n            console.log(DTT);\n            console.log(new Date(DTT[2]).getHours() < 8);\n\n            if (new Date(DTT[2]).getHours() < 8) {\n                let date = new Date(DTT[1]),\n                    YY = date.getFullYear(),\n                    MM = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1,\n                    DD = date.getDate() < 10 ? `0${date.getDate() - 1}` : date.getDate() - 1,\n                    HH = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours(),\n                    mm = `00`,\n                    SS = `00`;\n                DTT[1] = `${YY}-${MM}-${DD} ${HH}:${mm}:${SS}`\n\n            }\n            console.log(DTT[1]);\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2];\n\n            this.$GetData.Survey_History_YQ(\n                \"hourTable\",\n                body,\n                {\n                    default: true\n                },\n                data => {\n\n                    // this.setWPTN_HTML(`${item.STCD}_shuishi`, item.rowinfo.WPTN);\n                    this.createChart(item.STCD, data.data);\n\n\n                    console.log(data);\n                    // var d = data.data;\n                    // if(d[d.length - 1].TM === null) d[d.length - 1].TM = '';\n                    // if(d[0].TM === null) d[0].TM = '';\n                    // console.log(d[d.length - 1].TM);\n                    var shijianduan_ele = document.getElementById(`${item.STCD}_shijianduan`)\n                    console.log(this.form.model_date[1])\n                    shijianduan_ele.innerHTML = `${this.form.model_date[0].substr(0, 13)} — ${this.form.model_date[1].substr(0, 13)}`\n                }\n            );\n        },\n        setWPTN_HTML(id, WPTN) {\n            var div = document.getElementById(id);\n            var html;\n            switch (WPTN) {\n                case \"4\":\n                    html = `<span style=\"color:blue\">↓</span>`;\n                    break;\n\n                case \"5\":\n                    html = `<span style=\"color:red\">↑</span>`;\n                    break;\n\n                case \"6\":\n                    html = `<span style=\"color:black\">一</span>`;\n                    break;\n                default:\n                    html = `<span style=\"color:black\">一</span>`;\n                    break;\n            }\n            if (div) {\n                div.innerHTML = html;\n            }\n        },\n        // 设置中心和缩放 (接受经纬度，和缩放比例)\n        setMapCenterandZoom(LGTD, LTTD, Zoom) {\n            //koen 20190929\n            //暂时不允许点击，防止缩到全球地图的bug\n            //this.map.centerAndZoom([Number(LGTD), Number(LTTD)], Zoom || 1);\n        },\n        // 隐藏提示\n        hideTips() {\n            this.map.infoWindow.hide();\n            // this.tip.show_tip = false; // 关闭提示框组件\n        },\n        // 制图\n        createChart(id, data) {\n            if (data.length > 0) {\n                // data = data.slice(0, 3);\n\n\n                console.log(data);\n                // 雨情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n                var echartData = this.$App.transform_YQ_data_into_ehart_data(data, \"hourTable\", false);\n\n                var x_List = echartData.x.list.map((val, index, array) => {\n                    // 时间过滤\n\n                    var time = val.split(\" \");\n                    return `${time[1].substring(0, 5)}:00`;\n                });\n\n\n                myChart = this.$echarts.init(document.getElementById(id));\n\n                myChart.setOption({\n                    title: {\n                        text: \"今日雨量图\"\n                    },\n                    tooltip: {\n                        trigger: 'axis'\n                    },\n                    // tooltip: {\n                    //   trigger: \"axis\"\n                    // },\n                    legend: {\n                        data: [echartData.y1.name],\n                        y: \"bottom\"\n                    },\n\n                    // calculable: true,\n                    animation: false,\n                    xAxis: [\n                        {\n                            type: \"category\",\n                            // boundaryGap: false,\n                            data: x_List\n                            // axisTick: {\n                            //   interval: function(index, val) {\n                            //     var listLength = x_List.length,\n                            //       tick = parseInt(listLength / 4);\n                            //     if ((index + 1) % tick === 0 || index === 0) {\n                            //       return true;\n                            //     } else {\n                            //       return false;\n                            //     }\n                            //   }\n                            // },\n                            // axisLabel: {\n                            //   interval: function(index, val) {\n                            //     var listLength = x_List.length,\n                            //       tick = parseInt(listLength / 4);\n                            //     if ((index + 1) % tick === 0 || index === 0) {\n                            //       return true;\n                            //     } else {\n                            //       return false;\n                            //     }\n                            //   }\n                            // }\n                        }\n                    ],\n                    yAxis: [\n                        {\n                            name: `${echartData.y1.name} mm`,\n                            type: \"value\",\n                            axisLabel: {\n                                formatter: \"{value} \"\n                            },\n                            scale: true\n                            // max: echartData.y1.max,\n                            // min: echartData.y1.min\n                        },\n\n                    ],\n                    series: [\n                        {\n                            name: echartData.y1.name,\n                            type: \"bar\",\n                            data: echartData.y1.list,\n                            // data: [10,20,30,40,50,60,70,80,90,100]\n                            itemStyle: {\n                                normal: {\n                                    color: (params) => {\n                                        if (params.data >= 25 && params.data < 50) return 'orange';\n                                        if (params.data > 50) return 'red';\n                                        return 'blue'\n                                    }\n                                }\n                            }\n                        },\n\n                    ]\n                });\n            } else {\n                var myChart = document.getElementById(id);\n                myChart.style.display = \"flex\";\n                myChart.style.alignItems = \"center\";\n                myChart.style.justifyContent = \"center\";\n                myChart.innerHTML = \"暂无今天数据\";\n            }\n        },\n        // 表格加载\n        tableLoading() {\n            this.table.loading = true;\n        },\n        // 表格加载取消\n        cancelTableLoading() {\n            this.table.loading = false;\n        },\n        // 加载表格数据\n        loadTableData(data) {\n            // 加载站点数据\n            this.table.Rows = data;\n        },\n        getDataFromEnd(url, callback) {\n            // 获取表格数据 `/guanqu/gis/details?ID=${this.info.ID}`\n            this.axios.get(url).then(res => {\n                if (typeof callback == \"function\") {\n                    callback(res);\n                }\n            });\n        },\n        // 查询\n        search() {\n            // console.log(value);\n            var body = new Object();\n            // 如果输入框有内容，添加站名过滤字段\n            if (this.form.search_str) {\n                body[\"STNM\"] = `${this.form.search_str}`;\n            }\n            // 如果地址选择框有内容，添加行政区划过滤字段\n            if (this.form.model_adress && this.form.model_adress.length != 0) {\n                body[\"ADDVCD\"] = `${this.$App.ADDVCD_Array_Filter(\n                    this.form.model_adress\n                )}`;\n            }\n            // 如果渠道选择框有内容，添加渠道过滤字段\n            if (this.form.model_qudao && this.form.model_qudao.length != 0) {\n                body[\n                    \"Canal_Code\"\n                    ] = `${this.$App.Canal_Code_Array_Filter(this.form.model_qudao)}`;\n            }\n            // 如果归属单位选择框有内容，添加归属单位过滤字段\n            if (this.form.model_guishu && this.form.model_guishu.length != 0) {\n                body[\n                    \"STGR\"\n                    ] = this.form.model_guishu.join(',');\n            }\n            // 如果时间选择框有内容，添加时间过滤字段\n            console.log('时间', this.form.model_date);\n            if (this.form.model_date && this.form.model_date.length != 0) {\n                body[\n                    \"Time_min\"\n                    ] = this.form.model_date[0];\n                body[\n                    \"Time_max\"\n                    ] = this.form.model_date[1];\n            }\n            //如果有异常界限值时\n\n            //异常界限值\n            if (this.form.YCJXZ != \"\") {\n                body[\"max_yichang\"] = this.form.YCJXZ;\n            }\n\n            //异常界限值\n            if (this.form.singular != \"\") {\n                body[\"max_yujing\"] = this.form.singular;\n            }\n\n            this.tableLoading(); // 表格加载中\n            this.search_FeatrueLayer('yuqing', body, this.featrue, newFeatureLayerOBJ => {\n                this.table.currentPage = 1;\n                this.baseBox_init();\n                this.cancelTableLoading(); //取消表格加载\n                this.hideTips();\n            });\n            // setTimeout(() => {\n            //   this.cancelTableLoading(); //取消表格加载\n            // }, 800);\n        },\n        // 获取 子组件传过来 的绘图方法\n        // chart(item) {\n        //   this.getChart = item.chart;\n        // },\n        // 给图层对象添加事件\n        addEventToJsonFlayer(JsonFlayer) {\n            //当鼠标悬停在元素上\n            JsonFlayer.on(\"mouse-over\", evt => {\n                setTimeout(() => {\n                    var attributes = evt.graphic.attributes;\n                    attributes.eventType = \"mouse-over\";\n                    this.showTips(attributes); // 展示悬浮框\n                }, 100);\n                // 给地图对象添加方法\n                // this.addEventToMap();\n            });\n\n            // 当鼠标离开元素\n            JsonFlayer.on(\"mouse-out\", evt => {\n                setTimeout(() => {\n                    this.hideTips(); // 隐藏悬浮框\n                }, 100);\n            });\n        },\n        // 给地图对象添加方法\n        addEventToMap() {\n            this.map.on(\"click\", () => {\n                // 隐藏提示\n                this.hideTips();\n            });\n        },\n        // 处理页码切换\n        handleCurrentChange(index) {\n            this.table.currentPage = index;\n        },\n        // 处理每页显示条数切换\n        handleSizeChange(pageSizes) {\n            this.table.pageSizes = pageSizes;\n            this.table.currentPage = 1;\n        },\n        // 分页过滤\n        pageFilter(currentPage, pageSizes) {\n            var _currentPage = currentPage || this.table.currentPage;\n            var _pageSizes = pageSizes || this.table.pageSizes;\n            if (this.table.Rows_filter.length != 0) {\n                // 截取数组\n                var newList = this.table.Rows_filter.slice(\n                    (_currentPage - 1) * _pageSizes,\n                    _currentPage * _pageSizes\n                );\n\n                return newList;\n            } else {\n                return [];\n            }\n        },\n        // 过滤table数据\n        filterTableData() {\n            this.table.Rows_filter = this.table.Rows.map((val, index) => {\n                var val_clone = JSON.parse(JSON.stringify(val));\n                // 序号\n                val_clone.index = index + 1;\n                // 时间过滤\n                val_clone.TM = this.$FilterData.dateFilter(val_clone.TM);\n                // 时段降水量过滤\n                val_clone.DRP = this.Float_Filter(val_clone.DRP, 1);\n                // 流量过滤\n                // val_clone.Q = this.Z_Filter(val_clone.Q, 3);\n                // // 水势过滤\n                // val_clone.WPTN = this.WPTN_Filter(val_clone.WPTN);\n                return val_clone;\n            });\n        },\n        // 选取一部分从父组件传来的数据作为表格的数据\n        getTableDataFormParent() {\n            var tableData = this.featrue.Rows.map(val => {\n                return val.rowinfo;\n            });\n\n            return tableData;\n        },\n        // 获取图层对象,从父组件中\n        getJsonFlayerFormParent() {\n            this.JsonFlayer = this.featrue.LayerObject;\n        },\n        // 获取地图对象,从父组件中\n        getMapFormParent() {\n            this.map = this.featrue.map;\n        },\n        // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\n        addTextGraphicsLayerControllerToFeatrue() {\n            this.featrue.TextGraphicsLayerController = new Object();\n            this.featrue.TextGraphicsLayerController.removeAllTextGraphicsLayer = this.removeAllTextGraphicsLayer;\n            this.featrue.TextGraphicsLayerController.addTextGraphicsLayerByCheckGroup = this.addTextGraphicsLayerByCheckGroup;\n        },\n        // 多选框标记勾选触发事件\n        checkboxGroup_onChange(onCheck_Array) {\n            this.removeAllTextGraphicsLayer(); // 清除所有文本标注图层\n            this.addTextGraphicsLayerByCheckGroup(); // 根据多选框添加文字标注图层\n        },\n        // 添加文字标注图层\n        addTextGraphicsLayer(options) {\n            var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个标注文本图层\n            textGraphicsLayer.textType = options.textType;\n            this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\n            var Rows = this.featrue.Rows;\n            //创建textsymbol文本标注\n            if (Rows.length > 0) {\n                //动态读取json数据源结果集\n                for (var i = 0; i < Rows.length; i++) {\n                    var Row = Rows[i];\n                    var point = new esri.geometry.Point(\n                        Row.geometry.x,\n                        Row.geometry.y,\n                        this.featrue.map.spatialReference\n                    );\n                    //定义文本symbol\n                    var textsymbol = new esri.symbol.TextSymbol(\n                        Row.rowinfo[options.textType]\n                    ) //动态设置文本值\n                        .setColor(new dojo.Color(options.color || [55, 55, 55])) //setColor设置文本颜色\n                        .setFont(\n                            new esri.symbol.Font(options.fontSize || \"10pt\") //setFont设置文本大小\n                                .setWeight(esri.symbol.Font.WEIGHT_BOLD)\n                        ) //setWeight设置文本粗体\n                        .setOffset(options.offset_x || 0, options.offset_y || -25); //设置偏移方向\n                    var graphic = new esri.Graphic(point, textsymbol);\n                    textGraphicsLayer.add(graphic);\n                }\n            }\n            this.TextGraphicsLayers.push(textGraphicsLayer);\n        },\n        // 根据多选框添加文字标注图层\n        addTextGraphicsLayerByCheckGroup() {\n            var textTypeList;\n            var indexOfSocial = this.form.social.indexOf(\"site\");\n            // 如果多选框里存在 site站点类型\n            if (indexOfSocial !== -1) {\n                this.featrue.LayerObject.show();\n                this.featrue.LayerObject_yujing.show();\n                textTypeList = this.form.social.filter(val => {\n                    if (val != \"site\") {\n                        return true;\n                    }\n                });\n            } else {\n                this.featrue.LayerObject.hide();\n                this.featrue.LayerObject_yujing.hide();\n                textTypeList = this.form.social;\n            }\n\n            textTypeList.forEach((textType, index) => {\n                var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个图形图层\n                textGraphicsLayer.textType = textType;\n                this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\n                var Rows = this.featrue.Rows;\n                //创建textsymbol文本标注\n                if (Rows.length > 0) {\n                    //动态读取json数据源结果集\n                    for (var i = 0; i < Rows.length; i++) {\n                        var Row = Rows[i];\n\n                        //获取坐标\n                        var x=Number(Row.geometry.x);\n                        var y=Number(Row.geometry.y);\n\n                        //如果basemap使用ArcGIS的就需要\n                        //转换坐标系\n                        //x = (x / 180.0) * 20037508.34\n                        //if (y > 85.05112) y = 85.05112;\n                        //if (y < -85.05112) y = -85.05112;\n                        //y = (Math.PI / 180.0) * y;\n                        //var tmp = Math.PI / 4.0 + y / 2.0;\n                        //y = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI;\n                        \n\n\n                        var point = new esri.geometry.Point(\n                            x,\n                            y,\n                            this.featrue.map.spatialReference\n                        );\n                        var value = Row.rowinfo[textType];\n                        // 过滤\n                        switch (textType) {\n                            case \"VOL\":\n                                var value = `${this.Z_Filter(Row.rowinfo[textType])}`;\n                                if (value == \"\") {\n                                    value = \"\";\n                                } else {\n                                    value += \"V\";\n                                }\n                                break;\n                            case \"p\":\n                                var value = `${this.$FilterData.Float_Filter(Row.rowinfo[textType], 1)}`;\n                                if (value == \"\") {\n                                    value = \"\";\n                                } else {\n                                    value += \"mm\";\n                                }\n                                break;\n                        }\n\n                        //定义文本symbol\n                        var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\n                            .setColor(new dojo.Color(value == \"不正常\" ? [255, 0, 0] : [55, 55, 55])) //setColor设置文本颜色\n                            .setFont(\n                                new esri.symbol.Font(\"10pt\") //setFont设置文本大小\n                                    .setWeight(esri.symbol.Font.WEIGHT_BOLD)\n                            ) //setWeight设置文本粗体\n                            .setOffset(0, -(25 + index * 15)); //设置偏移方向\n                        var graphic = new esri.Graphic(point, textsymbol);\n                        textGraphicsLayer.add(graphic);\n                    }\n                }\n                this.TextGraphicsLayers.push(textGraphicsLayer);\n            });\n        },\n        // 移除文字标注图层\n        removeTextGraphicsLayer(textType) {\n            // 找到对应的文字标注图层\n            for (let i = 0; i < this.TextGraphicsLayers.length; i++) {\n                var val = this.TextGraphicsLayers[i];\n                if (val.textType == textType) {\n                    this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\n                    // val.hide();\n                    this.TextGraphicsLayers.splice(i, 1); // 从文字标注图层数组里去除对应的文字图层对象\n                }\n            }\n        },\n        // 移除所有文字标注图层\n        removeAllTextGraphicsLayer() {\n            for (let i = 0; i < this.TextGraphicsLayers.length; i++) {\n                var val = this.TextGraphicsLayers[i];\n                this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\n            }\n            this.TextGraphicsLayers = [];\n        },\n        // 初始化baseBox\n        baseBox_init() {\n            // 获取地图对象,从父组件中\n            this.getMapFormParent();\n            // 获取图层对象,从父组件中\n            this.getJsonFlayerFormParent();\n            // 选取一部分从父组件传来的数据,将其加载为表格数据\n            this.loadTableData(\n                this.getTableDataFormParent()\n                // (function() {\n                //   var data = test_data.map(val => {\n                //     return val.rowinfo;\n                //   });\n                //   return data;\n                // })()\n            );\n            // 过滤table数据\n            this.filterTableData();\n            // 给图层对象添加方法\n            this.addEventToJsonFlayer(this.JsonFlayer);\n\n            // 获取行政区划数据,然后设置地址选择框选项\n            this.getTableData_WRP_AD_B(data => {\n                this.form.adressList = data;\n                // data.map(val => {\n                //   var newVal = new Object();\n                //   newVal.value = val.AD_CD;\n                //   newVal.label = val.AD_NM;\n                //   return newVal;\n                // })\n            });\n\n            // 获取输排水渠道数据,然后设置渠道选择框选项\n            this.getTableData_WRP_IrrBTCanalSystem(data => {\n                this.form.qudaoList = data;\n                // data.map(val => {\n                //   var newVal = new Object();\n                //   newVal.value = val.Canal_Code;\n                //   newVal.label = val.Canal_Name;\n                //   return newVal;\n                // });\n            });\n\n            // 获取归属单位数据,然后设置归属单位选择框选项\n            this.getTableData_WPR_FieldInfo({\n                FieldID: \"STGR\"\n            }, data => {\n                this.form.guishuList = data.reverse();\n                // this.form.guishuList = [\n                //     {\n                //         value:1,\n                //         label:\"国家重要站\"\n                //     },\n                //     {FIELD\n                //         value:2,\n                //         label:\"省级重要站\"\n                //     },\n                //     {\n                //         value:3,\n                //         label:\"一般站\"\n                //     },\n                //     {\n                //         value:4,\n                //         label:\"实验或专用站\"\n                //     },\n                //     {\n                //         value:5,\n                //         label:\"山洪站\"\n                //     },\n                //     {\n                //         value:6,\n                //         label:\"临时站\"\n                //     },\n                //     {\n                //         value:7,\n                //         label:\"其他站\"\n                //     },\n                //     {\n                //         value:8,\n                //         label:\"灌区站\"\n                //     },\n                // ];\n            });\n\n            // 多选框标记勾选触发事件\n            // 1.清除所有文本标注图层\n            // 2.根据多选框添加文字标注图层\n            this.checkboxGroup_onChange();\n            // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\n            this.addTextGraphicsLayerControllerToFeatrue();\n        },\n        // 排序\n        sort_change(item) {\n            var order = item.order,\n                key = item.prop;\n\n            this.filterTableData();\n            var newList;\n            if (order) {\n                switch (order) {\n                    case \"descending\":\n                        if (key != \"TM\") {\n                            newList = this.table.Rows_filter.sort((a, b) => {\n                                return Number(b[key]) - Number(a[key]);\n                            });\n                        } else {\n                            newList = this.table.Rows_filter.sort((a, b) => {\n                                var aTime = new Date(`20${a.TM}`).getTime(),\n                                    bTime = new Date(`20${b.TM}`).getTime();\n                                aTime = isNaN(aTime) ? 0 : aTime;\n                                bTime = isNaN(bTime) ? 0 : bTime;\n                                return bTime - aTime;\n                            });\n                        }\n                        break;\n\n                    case \"ascending\":\n                        if (key != \"TM\") {\n                            newList = this.table.Rows_filter.sort((a, b) => {\n                                return Number(a[key]) - Number(b[key]);\n                            });\n                        } else {\n                            newList = this.table.Rows_filter.sort((a, b) => {\n                                var aTime = new Date(`20${a.TM}`).getTime(),\n                                    bTime = new Date(`20${b.TM}`).getTime();\n                                aTime = isNaN(aTime) ? 0 : aTime;\n                                bTime = isNaN(bTime) ? 0 : bTime;\n                                return aTime - bTime;\n                            });\n                        }\n                }\n                this.table.Rows_filter = newList;\n            }\n            this.$TableMethods.refreshCurrentChange(this.table, 1);\n        }\n    },\n    created() {\n        // 初始化baseBox\n        this.baseBox_init();\n        this.getinittime();\n        this.search();\n        this.baseBox_Interval = setInterval(() => {\n            this.search();\n        }, 1000 * 60 * 5)\n    },\n    destroyed() {\n        clearInterval(this.baseBox_Interval)\n    }\n};\n",{"version":3,"sources":["BaseBox-yuqing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2TA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseBox-yuqing.vue","sourceRoot":"src/components/BaseBox","sourcesContent":["<template>\r\n    <div class=\"baseBoxContent\">\r\n        <!-- 折叠面板 -->\r\n        <!-- 表单, 用于搜索查询 -->\r\n        <Collapse active-key=\"1\">\r\n            <Panel key=\"1\">\r\n                查询\r\n                <div slot=\"content\">\r\n                    <div class=\"form\">\r\n                        <!-- 选择器, 按钮 -->\r\n                        <Row class=\"select-group\" :gutter=\"16\">\r\n                            <!-- <Col span=\"2\">\r\n                              <span style=\"line-height:25px\">市:</span>\r\n                            </Col>-->\r\n                            <Col span=\"12\">\r\n                                <!-- 地址级联选择器 -->\r\n                                <el-cascader\r\n                                        clearable\r\n                                        filterable\r\n                                        size=\"mini\"\r\n                                        placeholder=\"地址\"\r\n                                        :options=\"form.adressList\"\r\n                                        v-model=\"form.model_adress\"\r\n                                        @change=\"search\"\r\n                                        change-on-select\r\n                                ></el-cascader>\r\n                            </Col>\r\n\r\n                            <Col span=\"12\">\r\n                                <!-- 渠道级联选择器 -->\r\n                                <el-cascader\r\n                                        filterable\r\n                                        clearable\r\n                                        size=\"mini\"\r\n                                        placeholder=\"渠道\"\r\n                                        :options=\"form.qudaoList\"\r\n                                        v-model=\"form.model_qudao\"\r\n                                        @change=\"search\"\r\n                                        change-on-select\r\n                                ></el-cascader>\r\n                            </Col>\r\n\r\n                            <!-- <Col span=\"8\">\r\n                              <el-select\r\n                                @change=\"search\"\r\n                                clearable\r\n                                filterable\r\n                                class=\"select-item\"\r\n                                size=\"mini\"\r\n                                v-model=\"form.model_guishu\"\r\n                                popper-append-to-body\r\n                                placeholder=\"归属单位\"\r\n                              >\r\n                                <el-option\r\n                                  v-for=\"item in form.guishuList\"\r\n                                  :key=\"item.value\"\r\n                                  :label=\"item.label\"\r\n                                  :value=\"item.value\"\r\n                                ></el-option>\r\n                              </el-select>\r\n                            </Col> -->\r\n                        </Row>\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                        <Row>\r\n                            <Col span=\"12\">\r\n                                <!-- 归属单位选择器 -->\r\n                                <el-select\r\n                                        v-model=\"form.model_guishu\"\r\n                                        multiple\r\n                                        collapse-tags\r\n                                        clearable\r\n                                        size=\"mini\"\r\n                                        @change=\"search\"\r\n                                        placeholder=\"归属单位\">\r\n                                    <el-option\r\n                                            v-for=\"item in form.guishuList\"\r\n                                            :key=\"item.value\"\r\n                                            :label=\"item.label\"\r\n                                            :value=\"item.value\">\r\n                                    </el-option>\r\n                                </el-select>\r\n                            </Col>\r\n                        </Row>\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                        <Row>\r\n                            <Col>\r\n                                <!-- 时间选择器 -->\r\n                                <!--                <el-date-picker-->\r\n                                <!--                  v-model=\"form.model_date\"-->\r\n                                <!--                  type=\"datetimerange\"-->\r\n                                <!--                  @change=\"search\"-->\r\n                                <!--                  size=\"mini\"-->\r\n                                <!--                  :clearable=\"false\"-->\r\n                                <!--                  format=\"yyyy-MM-dd HH\"-->\r\n                                <!--                  value-format=\"yyyy-MM-dd HH:mm:ss\"-->\r\n                                <!--                  range-separator=\"至\"-->\r\n                                <!--                  start-placeholder=\"开始日期\"-->\r\n                                <!--                  end-placeholder=\"结束日期\">-->\r\n                                <!--                </el-date-picker>-->\r\n                                开始时间\r\n                                <el-date-picker\r\n                                        class=\"date_zw\"\r\n                                        v-model=\"form.model_date[0]\"\r\n                                        type=\"datetime\"\r\n                                        size=\"mini\"\r\n                                        @change=\"search\"\r\n                                        format=\"yyyy-MM-dd HH\"\r\n                                        value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                                        placeholder=\"选择日期时间\">\r\n                                </el-date-picker>\r\n                                预警预设值\r\n                                <Input\r\n                                        style=\"width: 140px;\"\r\n                                        @on-enter=\"search\"\r\n                                        placeholder=\"预警预设值mm\"\r\n                                        size=\"small\"\r\n                                        v-model=\"form.singular\"\r\n                                >\r\n                                </Input>\r\n                                <br>结束时间\r\n                                <el-date-picker\r\n                                        class=\"date_zw time_zw\"\r\n                                        v-model=\"form.model_date[1]\"\r\n                                        type=\"datetime\"\r\n                                        size=\"mini\"\r\n                                        @change=\"search\"\r\n                                        format=\"yyyy-MM-dd HH\"\r\n                                        value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                                        placeholder=\"选择日期时间\">\r\n                                </el-date-picker>\r\n                                异常界限值\r\n                                <Input\r\n                                        style=\"width: 140px;\"\r\n                                        @on-enter=\"search\"\r\n                                        placeholder=\"异常界限值mm\"\r\n                                        size=\"small\"\r\n                                        v-model=\"form.YCJXZ\"\r\n                                >\r\n                                </Input>\r\n                            </Col>\r\n                        </Row>\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                        <!--            <Row>-->\r\n                        <!--              <Col span=\"12\">-->\r\n                        <!--                <Row>-->\r\n                        <!--                  <Col span=\"8\" style=\"line-height: 24px;\">-->\r\n                        <!--                    预警预设值:-->\r\n                        <!--                  </Col>-->\r\n                        <!--                  <Col span=\"14\">-->\r\n                        <!--                    <Input-->\r\n                        <!--                      @on-enter=\"search\"-->\r\n                        <!--                      placeholder=\"预警预设值mm\"-->\r\n                        <!--                      size=\"small\"-->\r\n                        <!--                      v-model=\"form.singular\"-->\r\n                        <!--                    >-->\r\n                        <!--                    </Input>-->\r\n                        <!--                  </Col>-->\r\n                        <!--                </Row>-->\r\n                        <!--              </Col>-->\r\n                        <!--              <Col span=\"12\">-->\r\n                        <!--                <Row>-->\r\n                        <!--                  <Col span=\"8\" style=\"line-height: 24px;\">-->\r\n                        <!--                    异常界限值:-->\r\n                        <!--                  </Col>-->\r\n                        <!--                  <Col span=\"14\">-->\r\n                        <!--                    <Input-->\r\n                        <!--                      @on-enter=\"search\"-->\r\n                        <!--                      placeholder=\"异常界限值mm\"-->\r\n                        <!--                      size=\"small\"-->\r\n                        <!--                      v-model=\"form.YCJXZ\"-->\r\n                        <!--                    >-->\r\n                        <!--                    </Input>-->\r\n                        <!--                  </Col>-->\r\n                        <!--                </Row>-->\r\n                        <!--              </Col>-->\r\n                        <!--            </Row>-->\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                        <Row :gutter=\"16\" style=\"margin-top: -6px\">\r\n                            <Col span=\"22\">\r\n                                <Input\r\n                                        search\r\n                                        enter-button\r\n                                        @on-search=\"search\"\r\n                                        placeholder=\"请输入要搜索的站名\"\r\n                                        size=\"small\"\r\n                                        v-model=\"form.search_str\"\r\n                                >\r\n                                </Input>\r\n                            </Col>\r\n                            <!-- <Col span=\"5\">\r\n                              查询按钮\r\n                              <Button type=\"info\" size=\"small\" @click=\"search\">查询</Button>\r\n                            </Col>-->\r\n                        </Row>\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                        <Row :gutter=\"16\" type=\"flex\" justify=\"center\" align=\"middle\">\r\n                            <Col span=\"4\" style=\"text-align:center;\">\r\n                                <span style=\"letter-spacing:5px\">标记:</span>\r\n                            </Col>\r\n                            <Col span=\"20\">\r\n                                <CheckboxGroup\r\n                                        @on-change=\"checkboxGroup_onChange\"\r\n                                        v-model=\"form.social\"\r\n                                        class=\"checkBox-group\"\r\n                                        style=\"height:22px\"\r\n                                >\r\n                                    <Checkbox\r\n                                            v-for=\"item in form.checkBoxList\"\r\n                                            :label=\"item.value\"\r\n                                            :size=\"item.size\"\r\n                                            class=\"checkBoxItem\"\r\n                                    >\r\n                                        <span>{{ item.title }}</span>\r\n                                    </Checkbox>\r\n                                </CheckboxGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <!-- 分割线 -->\r\n                        <!-- <div class=\"divider\"></div> -->\r\n                        <Row :gutter=\"16\" type=\"flex\" justify=\"left\" align=\"middle\">\r\n                            <span style=\"letter-spacing:5px;margin-left: 15px;\">雨量:</span>\r\n                        </Row>\r\n                        <!-- 分割线 -->\r\n                        <!-- <div class=\"divider\"></div> -->\r\n                        <Row>\r\n                            <el-radio-group\r\n                                    @on-change=\"checkboxGroup_onChange\"\r\n                                    v-model=\"form.yuliang\"\r\n                                    border\r\n                                    size=\"mini\">\r\n                                <el-radio label=\"全部\" style=\"color:rgb(207,204,207);\">全部</el-radio>\r\n                                <el-radio :label=\"0\" style=\"color:rgb(41,196,1);\">0</el-radio>\r\n                                <el-radio :label=\"10\" style=\"color:rgb(16,135,56);\">10</el-radio>\r\n                                <el-radio :label=\"25\" style=\"color:rgb(90,179,255);\">25</el-radio>\r\n                                <el-radio :label=\"50\" style=\"color:rgb(1,113,223);\">50</el-radio>\r\n                                <el-radio :label=\"100\" style=\"color:rgb(255,132,1);\">100</el-radio>\r\n                                <el-radio :label=\"250\" style=\"color:rgb(255,2,2);\">250</el-radio>\r\n                            </el-radio-group>\r\n                        </Row>\r\n                        <!-- 多选框 -->\r\n                    </div>\r\n                </div>\r\n            </Panel>\r\n        </Collapse>\r\n\r\n        <!-- 表格, 用于展示数据 -->\r\n        <div>\r\n            <el-table\r\n                    @cell-click=\"cellClick\"\r\n                    :data=\"pageFilter()\"\r\n                    border\r\n                    style=\"width: 100%\"\r\n                    size=\"small\"\r\n                    :height=\"table.height\"\r\n                    v-loading=\"table.loading\"\r\n                    empty-text=\"暂无站点数据\"\r\n                    @sort-change=\"sort_change\"\r\n            >\r\n                <el-table-column\r\n                        v-for=\"(item,index) in table.columns\"\r\n                        :prop=\"item.key\"\r\n                        :align=\"item.align\"\r\n                        :label=\"item.title\"\r\n                        :width=\"item.width\"\r\n                        :fixed=\"item.fixed\"\r\n                        :sortable=\"item.sortable\"\r\n                        :show-overflow-tooltip=\"true\"\r\n                ></el-table-column>\r\n                <!-- 自定义 -->\r\n                <!-- <el-table-column align=\"center\" label=\"水势\" :width=\"80\">\r\n                  <template slot-scope=\"scope\">\r\n                    <div>\r\n                      <strong\r\n                        :style=\"{\r\n                      color: scope.row.WPTN.status == 4? 'red' : scope.row.WPTN.status == 5?'blue' : 'black',\r\n                      fontSize: scope.row.WPTN.status == 6?'12px' : '17px'\r\n                    }\"\r\n                      >{{ scope.row.WPTN.symbol }}</strong>\r\n                    </div>\r\n                  </template>\r\n                </el-table-column>-->\r\n            </el-table>\r\n            <!-- 分割线 -->\r\n            <!-- <Divider/> -->\r\n            <div class=\"divider\"></div>\r\n            <!-- 分页器 -->\r\n            <el-pagination\r\n                    background\r\n                    :page-size=\"table.pageSizes\"\r\n                    layout=\"total, prev, pager, next, jumper, sizes\"\r\n                    :page-sizes=\"[20, 50, 100, 200]\"\r\n                    :total=\"table.Rows.length\"\r\n                    :pager-count=\"5\"\r\n                    :current-page=\"table.currentPage\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    @size-change=\"handleSizeChange\"\r\n                    class=\"pageController\"\r\n                    small\r\n            ></el-pagination>\r\n        </div>\r\n        <!-- 提示框 -->\r\n        <div ref=\"tip\" style=\"display:none;\">\r\n            <!-- 渠道水情 -->\r\n            <TipsQUDAO @chart=\"chart\" :info=\"tip.info_tip\" v-if=\"tip.show_tip\"></TipsQUDAO>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import TipsQUDAO from \"@/components/BaseBox/Tips/Tips-qudaoshuiqing.vue\";\r\n    import FilterMethods from \"@/assets/commonJS/FilterMethods\";\r\n    import GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\r\n    import {truncateSync} from \"fs\";\r\n    import {setTimeout} from \"timers\";\r\n\r\n    import test_data from \"./test_data\";\r\n\r\n    export default {\r\n        props: {\r\n            featrue: {\r\n                type: Object\r\n            },\r\n            search_FeatrueLayer: {\r\n                type: Function\r\n            }\r\n        },\r\n        components: {\r\n            TipsQUDAO\r\n        },\r\n        data() {\r\n            return {\r\n                //雨量颜色参考图\r\n                // 折叠面板对象\r\n                collapse: {\r\n                    activeName: \"\",\r\n                    list: []\r\n                },\r\n                // 地图对象\r\n                map: null,\r\n                // 该图层对象\r\n                JsonFlayer: null,\r\n                // 文字标注图层\r\n                TextGraphicsLayers: [],\r\n                // 提示 展示\r\n                tip: {\r\n                    info_tip: null,\r\n                    show_tip: false\r\n                },\r\n                // 表单数据\r\n                form: {\r\n                    yuliang: '',\r\n                    YCJXZ: '50',\r\n                    singular: '50',\r\n                    search_str: \"\",\r\n                    adressList: [],\r\n                    qudaoList: [],\r\n                    guishuList: [],\r\n                    social: [\"site\"],\r\n\r\n                    checkBoxList: [\r\n                        {\r\n                            value: \"site\",\r\n                            size: \"small\",\r\n                            // iconType: \"logo-facebook\",\r\n                            title: \"站点\"\r\n                        },\r\n                        {\r\n                            value: \"STNM\",\r\n                            size: \"small\",\r\n                            // iconType: \"logo-facebook\",\r\n                            title: \"站名\"\r\n                        },\r\n                        {\r\n                            value: \"p\",\r\n                            size: \"small\",\r\n                            // iconType: \"logo-facebook\",\r\n                            title: \"雨量值\"\r\n                        }\r\n                    ],\r\n                    checkBoxList2: [\r\n                        {\r\n                            value: [],\r\n                            size: 'small',\r\n                            title: '全部',\r\n                            color: 'rgb(207,204,207)'\r\n                        },\r\n                        {\r\n                            value: [0, 0],\r\n                            size: 'small',\r\n                            title: '0',\r\n                            color: 'rgb(41,196,1)'\r\n                        },\r\n                        {\r\n                            value: [0, 10],\r\n                            size: 'small',\r\n                            title: '10',\r\n                            color: 'rgb(16,135,56)'\r\n                        },\r\n                        {\r\n                            value: [10, 25],\r\n                            size: 'small',\r\n                            title: '25',\r\n                            color: 'rgb(90,179,255)'\r\n                        },\r\n                        {\r\n                            value: [25, 50],\r\n                            size: 'small',\r\n                            title: '50',\r\n                            color: 'rgb(1,113,223)'\r\n                        },\r\n                        {\r\n                            value: [50, 100],\r\n                            size: 'small',\r\n                            title: '100',\r\n                            color: 'rgb(255,132,1)'\r\n                        },\r\n                        {\r\n                            value: [100, 250],\r\n                            size: 'small',\r\n                            title: '250',\r\n                            color: 'rgb(255,2,2)'\r\n                        },\r\n                    ],\r\n                    model_adress: null,\r\n                    model_qudao: null,\r\n                    model_guishu: ['1', '2', '3', '4', '5', '6', '7', '8'],\r\n                    model_date: [],\r\n                },\r\n                // 表格数据\r\n                table: {\r\n                    // 表头设置\r\n                    columns: [\r\n                        {\r\n                            title: \" \",\r\n                            key: \"index\",\r\n                            width: 45,\r\n                            align: \"center\",\r\n                            fixed: \"left\"\r\n                        },\r\n                        {\r\n                            title: \"站名\",\r\n                            key: \"STNM\",\r\n                            width: 120,\r\n                            align: \"center\",\r\n                            fixed: \"left\",\r\n                            sortable: \"custom\"\r\n                        },\r\n                        {\r\n                            title: \"降雨(mm)\",\r\n                            key: \"p\",\r\n                            width: 140,\r\n                            align: \"center\",\r\n                            sortable: \"custom\"\r\n                        },\r\n                        {\r\n                            title: \"行政区划\",\r\n                            key: \"adnm\",\r\n                            width: 120,\r\n                            align: \"center\"\r\n                        },\r\n                        {\r\n                            title: \"灌区渠道\",\r\n                            key: \"canal_name\",\r\n                            width: 120,\r\n                            align: \"center\"\r\n                        },\r\n                    ],\r\n                    // 表体内容\r\n                    Rows: [],\r\n                    // 过滤后的表体内容\r\n                    Rows_filter: [],\r\n                    // 表格是否加载中\r\n                    loading: false,\r\n                    // 当前页\r\n                    currentPage: 1,\r\n                    // 每页显示数量\r\n                    pageSizes: 20,\r\n                    // 表体高度\r\n                    height: 300\r\n                }\r\n            };\r\n        },\r\n        // 引入过滤方法到此组件\r\n        mixins: [FilterMethods, GetDataMethods],\r\n        methods: {\r\n            //获取默认时间\r\n            getinittime() {\r\n                var date = new Date();\r\n                var YR = date.getFullYear();\r\n                var MON = date.getMonth() + 1\r\n                var datearray = new Array();\r\n                if (parseInt(MON) < 10) {\r\n                    MON = `0${MON}`;\r\n                }\r\n                var Day = date.getDate();\r\n                if (parseInt(Day) < 10) {\r\n                    Day = `0${Day}`;\r\n                }\r\n                var Hour = date.getHours();\r\n                if (parseInt(Hour) < 10) {\r\n                    Hour = `0${Hour}`;\r\n                }\r\n                if (date.getHours() < 8) {\r\n                    //昨天的时间\r\n                    var day1 = new Date();\r\n                    day1.setTime(day1.getTime() - 24 * 60 * 60 * 1000);\r\n                    day1.setHours(8);\r\n                    day1.setMinutes(0);\r\n                    day1.setSeconds(0);\r\n                    var Hour2 = day1.getHours();\r\n                    var MON2 = day1.getMonth() + 1;\r\n                    var DAY2 = day1.getDate();\r\n                    if (parseInt(Hour2) < 10) {\r\n                        Hour2 = `0${Hour2}`;\r\n                    }\r\n                    if (parseInt(MON2) < 10) {\r\n                        MON2 = `0${MON2}`;\r\n                    }\r\n                    if (parseInt(DAY2) < 10) {\r\n                        DAY2 = `0${DAY2}`;\r\n                    }\r\n                    var s1 = `${day1.getFullYear()}-${MON2}-${DAY2} ${Hour2}:00:00`\r\n                    datearray[0] = s1;\r\n                    datearray[1] = `${YR}-${MON}-${Day} ${date.getHours()}:00:00`;\r\n                    console.log('time1', s1, 'time2', datearray[1]);\r\n                } else {\r\n                    datearray[0] = `${YR}-${MON}-${Day} 08:00:00`;\r\n                    datearray[1] = `${YR}-${MON}-${Day} ${Hour}:00:00`;\r\n                }\r\n                this.form.model_date = datearray;\r\n            },\r\n            //前一时段、后一时段\r\n            fronttime() {\r\n                if (this.form.model_date.length == 0) {\r\n                    this.$message({\r\n                        message: '请先选择时间',\r\n                        type: 'warning'\r\n                    });\r\n                } else {\r\n                    var date1 = this.form.model_date[0].substr(0, 19);\r\n                    date1 = date1.replace(/-/g, '/');\r\n                    var timestamp1 = new Date(date1).getTime() - 60 * 60 * 1000;\r\n                    timestamp1 = new Date(timestamp1);\r\n                    var YR1 = timestamp1.getFullYear();\r\n                    var MON1 = timestamp1.getMonth() + 1;\r\n                    var DAY1 = timestamp1.getDate();\r\n                    var Hour1 = timestamp1.getHours();\r\n                    if (parseInt(Hour1) < 10) {\r\n                        Hour1 = `0${Hour1}`;\r\n                    }\r\n                    if (parseInt(MON1) < 10) {\r\n                        MON1 = `0${MON1}`;\r\n                    }\r\n                    if (parseInt(DAY1) < 10) {\r\n                        DAY1 = `0${DAY1}`;\r\n                    }\r\n                    this.form.model_date[0] = `${YR1}-${MON1}-${DAY1} ${Hour1}:00:00`;\r\n                    // console.log(this.form.model_date[0]);\r\n\r\n                    var date2 = this.form.model_date[1].substr(0, 19);\r\n                    date2 = date2.replace(/-/g, '/');\r\n                    var timestamp2 = new Date(date2).getTime() - 60 * 60 * 1000;\r\n                    timestamp2 = new Date(timestamp2);\r\n                    var YR2 = timestamp2.getFullYear();\r\n                    var MON2 = timestamp2.getMonth() + 1;\r\n                    var DAY2 = timestamp2.getDate();\r\n                    var Hour2 = timestamp2.getHours();\r\n                    if (parseInt(Hour2) < 10) {\r\n                        Hour2 = `0${Hour2}`;\r\n                    }\r\n                    if (parseInt(MON2) < 10) {\r\n                        MON2 = `0${MON2}`;\r\n                    }\r\n                    if (parseInt(DAY2) < 10) {\r\n                        DAY2 = `0${DAY2}`;\r\n                    }\r\n                    this.form.model_date[1] = `${YR2}-${MON2}-${DAY2} ${Hour2}:00:00`;\r\n                    console.log(this.form.model_date[1]);\r\n                    this.search();\r\n                }\r\n            },\r\n            aftertime() {\r\n                if (this.form.model_date.length == 0) {\r\n                    this.$message({\r\n                        message: '请先选择时间',\r\n                        type: 'warning'\r\n                    });\r\n                } else {\r\n                    var date1 = this.form.model_date[0].substring(0, 19);\r\n                    date1 = date1.replace(/-/g, '/');\r\n                    var timestamp1 = new Date(date1).getTime() + 60 * 60 * 1000;\r\n                    timestamp1 = new Date(timestamp1);\r\n                    var YR1 = timestamp1.getFullYear();\r\n                    var MON1 = timestamp1.getMonth() + 1;\r\n                    var DAY1 = timestamp1.getDate();\r\n                    var Hour1 = timestamp1.getHours();\r\n                    if (parseInt(Hour1) < 10) {\r\n                        Hour1 = `0${Hour1}`;\r\n                    }\r\n                    if (parseInt(MON1) < 10) {\r\n                        MON1 = `0${MON1}`;\r\n                    }\r\n                    if (parseInt(DAY1) < 10) {\r\n                        DAY1 = `0${DAY1}`;\r\n                    }\r\n                    this.form.model_date[0] = `${YR1}-${MON1}-${DAY1} ${Hour1}:00:00`;\r\n                    console.log(this.form.model_date[0]);\r\n\r\n                    var date2 = this.form.model_date[1].substring(0, 19);\r\n                    date2 = date2.replace(/-/g, '/');\r\n                    var timestamp2 = new Date(date2).getTime() + 60 * 60 * 1000;\r\n                    timestamp2 = new Date(timestamp2);\r\n                    var YR2 = timestamp2.getFullYear();\r\n                    var MON2 = timestamp2.getMonth() + 1;\r\n                    var DAY2 = timestamp2.getDate();\r\n                    var Hour2 = timestamp2.getHours();\r\n                    if (parseInt(Hour2) < 10) {\r\n                        Hour2 = `0${Hour2}`;\r\n                    }\r\n                    if (parseInt(MON2) < 10) {\r\n                        MON2 = `0${MON2}`;\r\n                    }\r\n                    if (parseInt(DAY2) < 10) {\r\n                        DAY2 = `0${DAY2}`;\r\n                    }\r\n                    this.form.model_date[1] = `${YR2}-${MON2}-${DAY2} ${Hour2}:00:00`;\r\n                    console.log(this.form.model_date[1]);\r\n                    this.search();\r\n                }\r\n            },\r\n            // 表格每一行点击事件\r\n            cellClick(item) {\r\n                var evt = new Object();\r\n                evt.graphic = new Object();\r\n                evt.graphic.attributes = item;\r\n                evt.graphic.attributes.rowinfo = JSON.parse(JSON.stringify(item));\r\n                evt.graphic.attributes.rowinfo.tableType = {\r\n                    yq: \"hourTable\"\r\n                };\r\n                var v = new Object();\r\n                v.itype = \"yuqing\";\r\n\r\n                // 设置中心缩放\r\n                this.setMapCenterandZoom(item.LGTD, item.LTTD);\r\n                // 取消所有站点的闪烁\r\n                this.$App.GraphicsLayer_Selection_clear();\r\n                // 对应站点闪烁\r\n                this.$App.add_Graphic_To_GraphicsLayer_Selection(item);\r\n                // 展示抽屉详情框\r\n                this.$App.showDrawer(evt, v);\r\n            },\r\n            // 提示展示\r\n            showTips(item) {\r\n                // 上面定义的时间不对，所以在这里重新定义\r\n                function getTime() {\r\n                    let date = new Date(),\r\n                        YY = date.getFullYear(),\r\n                        MM = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1,\r\n                        DD = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate(),\r\n                        HH = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours(),\r\n                        mm = `00`,\r\n                        SS = `00`;\r\n                    console.log(`${YY}-${MM}-${DD} ${HH}:${mm}:${SS}`);\r\n                    return `${YY}-${MM}-${DD} ${HH}:${mm}:${SS}`\r\n                };\r\n                this.form.model_date[1] = getTime();\r\n\r\n                console.log('悬浮框');\r\n                console.log(item);\r\n\r\n                // 隐藏之前提示框\r\n                this.hideTips();\r\n                var div = `<div><div class=\"tip_row\">\r\n                <span class=\"tip_col_5 \">时间段：</span>\r\n                <span class=\"tip_col_7 zeng\" id=\"${item.STCD}_shijianduan\">&nbsp;</span>\r\n                <span class=\"tip_col_5\">累计降雨：</span>\r\n                <span class=\"tip_col_7\">${item.rowinfo.p || '&nbsp;'}mm</span>\r\n                </div>\r\n                <div class=\"divider\"></div><div id=\"${item.STCD}\" style=\"width: 500px;height:320px;margin:auto\"></div></div>`;\r\n\r\n                // var content = `<div id=\"myChart\" :style=\"{width: '340px', height: '250px', margin: 'auto'}\"></div>`; // 获取内容\r\n                this.map.infoWindow.resize(570, 650); // 提示框大小\r\n                this.map.infoWindow.setTitle(item.STNM); // 提示题目\r\n                this.map.infoWindow.setContent(div); // 提示内容\r\n\r\n                //获取坐标\r\n                var x=Number(item.LGTD);\r\n                var y=Number(item.LTTD);\r\n\r\n\r\n                //如果basemap使用ArcGIS的就需要\r\n                //转换坐标系\r\n                x = (x / 180.0) * 20037508.34\r\n                if (y > 85.05112) y = 85.05112;\r\n                if (y < -85.05112) y = -85.05112;\r\n                y = (Math.PI / 180.0) * y;\r\n                var tmp = Math.PI / 4.0 + y / 2.0;\r\n                y = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI;\r\n\r\n\r\n                var zoompoint = {\r\n                    //spatialReference: {wkid: 4326},\r\n                    spatialReference: this.map.spatialReference,\r\n                    x: x,\r\n                    y: y\r\n                };\r\n                console.log(zoompoint);\r\n                this.map.infoWindow.show(zoompoint, zoompoint);\r\n\r\n                // 如果事件类型不是鼠标经过，则\r\n                if (item.eventType != \"mouse-over\") {\r\n                    // 设置中心和缩放 (接受经纬度，和缩放比例)\r\n                    this.setMapCenterandZoom(Number(item.LGTD) + 0.1, item.LTTD);\r\n                }\r\n\r\n                var body = {\r\n                    STCD: item.STCD,\r\n                    // TM: this.$FilterData.elDatePicker_Filter(\r\n                    //   this.$App.zeroPointToNowOfTheDay()\r\n                    // ),\r\n                    _page_size: 999999\r\n                };\r\n\r\n                // 时间参数\r\n                var DTT = this.$FilterData\r\n                    .elDatePicker_Filter(this.$App.xPointToNowOfTheDay(8))\r\n                    .split(\",\");\r\n                console.log(DTT);\r\n                console.log(new Date(DTT[2]).getHours() < 8);\r\n\r\n                if (new Date(DTT[2]).getHours() < 8) {\r\n                    let date = new Date(DTT[1]),\r\n                        YY = date.getFullYear(),\r\n                        MM = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1,\r\n                        DD = date.getDate() < 10 ? `0${date.getDate() - 1}` : date.getDate() - 1,\r\n                        HH = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours(),\r\n                        mm = `00`,\r\n                        SS = `00`;\r\n                    DTT[1] = `${YY}-${MM}-${DD} ${HH}:${mm}:${SS}`\r\n\r\n                }\r\n                console.log(DTT[1]);\r\n                body.Time_min = DTT[1];\r\n                body.Time_max = DTT[2];\r\n\r\n                this.$GetData.Survey_History_YQ(\r\n                    \"hourTable\",\r\n                    body,\r\n                    {\r\n                        default: true\r\n                    },\r\n                    data => {\r\n\r\n                        // this.setWPTN_HTML(`${item.STCD}_shuishi`, item.rowinfo.WPTN);\r\n                        this.createChart(item.STCD, data.data);\r\n\r\n\r\n                        console.log(data);\r\n                        // var d = data.data;\r\n                        // if(d[d.length - 1].TM === null) d[d.length - 1].TM = '';\r\n                        // if(d[0].TM === null) d[0].TM = '';\r\n                        // console.log(d[d.length - 1].TM);\r\n                        var shijianduan_ele = document.getElementById(`${item.STCD}_shijianduan`)\r\n                        console.log(this.form.model_date[1])\r\n                        shijianduan_ele.innerHTML = `${this.form.model_date[0].substr(0, 13)} — ${this.form.model_date[1].substr(0, 13)}`\r\n                    }\r\n                );\r\n            },\r\n            setWPTN_HTML(id, WPTN) {\r\n                var div = document.getElementById(id);\r\n                var html;\r\n                switch (WPTN) {\r\n                    case \"4\":\r\n                        html = `<span style=\"color:blue\">↓</span>`;\r\n                        break;\r\n\r\n                    case \"5\":\r\n                        html = `<span style=\"color:red\">↑</span>`;\r\n                        break;\r\n\r\n                    case \"6\":\r\n                        html = `<span style=\"color:black\">一</span>`;\r\n                        break;\r\n                    default:\r\n                        html = `<span style=\"color:black\">一</span>`;\r\n                        break;\r\n                }\r\n                if (div) {\r\n                    div.innerHTML = html;\r\n                }\r\n            },\r\n            // 设置中心和缩放 (接受经纬度，和缩放比例)\r\n            setMapCenterandZoom(LGTD, LTTD, Zoom) {\r\n                //koen 20190929\r\n                //暂时不允许点击，防止缩到全球地图的bug\r\n                //this.map.centerAndZoom([Number(LGTD), Number(LTTD)], Zoom || 1);\r\n            },\r\n            // 隐藏提示\r\n            hideTips() {\r\n                this.map.infoWindow.hide();\r\n                // this.tip.show_tip = false; // 关闭提示框组件\r\n            },\r\n            // 制图\r\n            createChart(id, data) {\r\n                if (data.length > 0) {\r\n                    // data = data.slice(0, 3);\r\n\r\n\r\n                    console.log(data);\r\n                    // 雨情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n                    var echartData = this.$App.transform_YQ_data_into_ehart_data(data, \"hourTable\", false);\r\n\r\n                    var x_List = echartData.x.list.map((val, index, array) => {\r\n                        // 时间过滤\r\n\r\n                        var time = val.split(\" \");\r\n                        return `${time[1].substring(0, 5)}:00`;\r\n                    });\r\n\r\n\r\n                    myChart = this.$echarts.init(document.getElementById(id));\r\n\r\n                    myChart.setOption({\r\n                        title: {\r\n                            text: \"今日雨量图\"\r\n                        },\r\n                        tooltip: {\r\n                            trigger: 'axis'\r\n                        },\r\n                        // tooltip: {\r\n                        //   trigger: \"axis\"\r\n                        // },\r\n                        legend: {\r\n                            data: [echartData.y1.name],\r\n                            y: \"bottom\"\r\n                        },\r\n\r\n                        // calculable: true,\r\n                        animation: false,\r\n                        xAxis: [\r\n                            {\r\n                                type: \"category\",\r\n                                // boundaryGap: false,\r\n                                data: x_List\r\n                                // axisTick: {\r\n                                //   interval: function(index, val) {\r\n                                //     var listLength = x_List.length,\r\n                                //       tick = parseInt(listLength / 4);\r\n                                //     if ((index + 1) % tick === 0 || index === 0) {\r\n                                //       return true;\r\n                                //     } else {\r\n                                //       return false;\r\n                                //     }\r\n                                //   }\r\n                                // },\r\n                                // axisLabel: {\r\n                                //   interval: function(index, val) {\r\n                                //     var listLength = x_List.length,\r\n                                //       tick = parseInt(listLength / 4);\r\n                                //     if ((index + 1) % tick === 0 || index === 0) {\r\n                                //       return true;\r\n                                //     } else {\r\n                                //       return false;\r\n                                //     }\r\n                                //   }\r\n                                // }\r\n                            }\r\n                        ],\r\n                        yAxis: [\r\n                            {\r\n                                name: `${echartData.y1.name} mm`,\r\n                                type: \"value\",\r\n                                axisLabel: {\r\n                                    formatter: \"{value} \"\r\n                                },\r\n                                scale: true\r\n                                // max: echartData.y1.max,\r\n                                // min: echartData.y1.min\r\n                            },\r\n\r\n                        ],\r\n                        series: [\r\n                            {\r\n                                name: echartData.y1.name,\r\n                                type: \"bar\",\r\n                                data: echartData.y1.list,\r\n                                // data: [10,20,30,40,50,60,70,80,90,100]\r\n                                itemStyle: {\r\n                                    normal: {\r\n                                        color: (params) => {\r\n                                            if (params.data >= 25 && params.data < 50) return 'orange';\r\n                                            if (params.data > 50) return 'red';\r\n                                            return 'blue'\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    });\r\n                } else {\r\n                    var myChart = document.getElementById(id);\r\n                    myChart.style.display = \"flex\";\r\n                    myChart.style.alignItems = \"center\";\r\n                    myChart.style.justifyContent = \"center\";\r\n                    myChart.innerHTML = \"暂无今天数据\";\r\n                }\r\n            },\r\n            // 表格加载\r\n            tableLoading() {\r\n                this.table.loading = true;\r\n            },\r\n            // 表格加载取消\r\n            cancelTableLoading() {\r\n                this.table.loading = false;\r\n            },\r\n            // 加载表格数据\r\n            loadTableData(data) {\r\n                // 加载站点数据\r\n                this.table.Rows = data;\r\n            },\r\n            getDataFromEnd(url, callback) {\r\n                // 获取表格数据 `/guanqu/gis/details?ID=${this.info.ID}`\r\n                this.axios.get(url).then(res => {\r\n                    if (typeof callback == \"function\") {\r\n                        callback(res);\r\n                    }\r\n                });\r\n            },\r\n            // 查询\r\n            search() {\r\n                // console.log(value);\r\n                var body = new Object();\r\n                // 如果输入框有内容，添加站名过滤字段\r\n                if (this.form.search_str) {\r\n                    body[\"STNM\"] = `${this.form.search_str}`;\r\n                }\r\n                // 如果地址选择框有内容，添加行政区划过滤字段\r\n                if (this.form.model_adress && this.form.model_adress.length != 0) {\r\n                    body[\"ADDVCD\"] = `${this.$App.ADDVCD_Array_Filter(\r\n                        this.form.model_adress\r\n                    )}`;\r\n                }\r\n                // 如果渠道选择框有内容，添加渠道过滤字段\r\n                if (this.form.model_qudao && this.form.model_qudao.length != 0) {\r\n                    body[\r\n                        \"Canal_Code\"\r\n                        ] = `${this.$App.Canal_Code_Array_Filter(this.form.model_qudao)}`;\r\n                }\r\n                // 如果归属单位选择框有内容，添加归属单位过滤字段\r\n                if (this.form.model_guishu && this.form.model_guishu.length != 0) {\r\n                    body[\r\n                        \"STGR\"\r\n                        ] = this.form.model_guishu.join(',');\r\n                }\r\n                // 如果时间选择框有内容，添加时间过滤字段\r\n                console.log('时间', this.form.model_date);\r\n                if (this.form.model_date && this.form.model_date.length != 0) {\r\n                    body[\r\n                        \"Time_min\"\r\n                        ] = this.form.model_date[0];\r\n                    body[\r\n                        \"Time_max\"\r\n                        ] = this.form.model_date[1];\r\n                }\r\n                //如果有异常界限值时\r\n\r\n                //异常界限值\r\n                if (this.form.YCJXZ != \"\") {\r\n                    body[\"max_yichang\"] = this.form.YCJXZ;\r\n                }\r\n\r\n                //异常界限值\r\n                if (this.form.singular != \"\") {\r\n                    body[\"max_yujing\"] = this.form.singular;\r\n                }\r\n\r\n                this.tableLoading(); // 表格加载中\r\n                this.search_FeatrueLayer('yuqing', body, this.featrue, newFeatureLayerOBJ => {\r\n                    this.table.currentPage = 1;\r\n                    this.baseBox_init();\r\n                    this.cancelTableLoading(); //取消表格加载\r\n                    this.hideTips();\r\n                });\r\n                // setTimeout(() => {\r\n                //   this.cancelTableLoading(); //取消表格加载\r\n                // }, 800);\r\n            },\r\n            // 获取 子组件传过来 的绘图方法\r\n            // chart(item) {\r\n            //   this.getChart = item.chart;\r\n            // },\r\n            // 给图层对象添加事件\r\n            addEventToJsonFlayer(JsonFlayer) {\r\n                //当鼠标悬停在元素上\r\n                JsonFlayer.on(\"mouse-over\", evt => {\r\n                    setTimeout(() => {\r\n                        var attributes = evt.graphic.attributes;\r\n                        attributes.eventType = \"mouse-over\";\r\n                        this.showTips(attributes); // 展示悬浮框\r\n                    }, 100);\r\n                    // 给地图对象添加方法\r\n                    // this.addEventToMap();\r\n                });\r\n\r\n                // 当鼠标离开元素\r\n                JsonFlayer.on(\"mouse-out\", evt => {\r\n                    setTimeout(() => {\r\n                        this.hideTips(); // 隐藏悬浮框\r\n                    }, 100);\r\n                });\r\n            },\r\n            // 给地图对象添加方法\r\n            addEventToMap() {\r\n                this.map.on(\"click\", () => {\r\n                    // 隐藏提示\r\n                    this.hideTips();\r\n                });\r\n            },\r\n            // 处理页码切换\r\n            handleCurrentChange(index) {\r\n                this.table.currentPage = index;\r\n            },\r\n            // 处理每页显示条数切换\r\n            handleSizeChange(pageSizes) {\r\n                this.table.pageSizes = pageSizes;\r\n                this.table.currentPage = 1;\r\n            },\r\n            // 分页过滤\r\n            pageFilter(currentPage, pageSizes) {\r\n                var _currentPage = currentPage || this.table.currentPage;\r\n                var _pageSizes = pageSizes || this.table.pageSizes;\r\n                if (this.table.Rows_filter.length != 0) {\r\n                    // 截取数组\r\n                    var newList = this.table.Rows_filter.slice(\r\n                        (_currentPage - 1) * _pageSizes,\r\n                        _currentPage * _pageSizes\r\n                    );\r\n\r\n                    return newList;\r\n                } else {\r\n                    return [];\r\n                }\r\n            },\r\n            // 过滤table数据\r\n            filterTableData() {\r\n                this.table.Rows_filter = this.table.Rows.map((val, index) => {\r\n                    var val_clone = JSON.parse(JSON.stringify(val));\r\n                    // 序号\r\n                    val_clone.index = index + 1;\r\n                    // 时间过滤\r\n                    val_clone.TM = this.$FilterData.dateFilter(val_clone.TM);\r\n                    // 时段降水量过滤\r\n                    val_clone.DRP = this.Float_Filter(val_clone.DRP, 1);\r\n                    // 流量过滤\r\n                    // val_clone.Q = this.Z_Filter(val_clone.Q, 3);\r\n                    // // 水势过滤\r\n                    // val_clone.WPTN = this.WPTN_Filter(val_clone.WPTN);\r\n                    return val_clone;\r\n                });\r\n            },\r\n            // 选取一部分从父组件传来的数据作为表格的数据\r\n            getTableDataFormParent() {\r\n                var tableData = this.featrue.Rows.map(val => {\r\n                    return val.rowinfo;\r\n                });\r\n\r\n                return tableData;\r\n            },\r\n            // 获取图层对象,从父组件中\r\n            getJsonFlayerFormParent() {\r\n                this.JsonFlayer = this.featrue.LayerObject;\r\n            },\r\n            // 获取地图对象,从父组件中\r\n            getMapFormParent() {\r\n                this.map = this.featrue.map;\r\n            },\r\n            // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\r\n            addTextGraphicsLayerControllerToFeatrue() {\r\n                this.featrue.TextGraphicsLayerController = new Object();\r\n                this.featrue.TextGraphicsLayerController.removeAllTextGraphicsLayer = this.removeAllTextGraphicsLayer;\r\n                this.featrue.TextGraphicsLayerController.addTextGraphicsLayerByCheckGroup = this.addTextGraphicsLayerByCheckGroup;\r\n            },\r\n            // 多选框标记勾选触发事件\r\n            checkboxGroup_onChange(onCheck_Array) {\r\n                this.removeAllTextGraphicsLayer(); // 清除所有文本标注图层\r\n                this.addTextGraphicsLayerByCheckGroup(); // 根据多选框添加文字标注图层\r\n            },\r\n            // 添加文字标注图层\r\n            addTextGraphicsLayer(options) {\r\n                var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个标注文本图层\r\n                textGraphicsLayer.textType = options.textType;\r\n                this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\r\n                var Rows = this.featrue.Rows;\r\n                //创建textsymbol文本标注\r\n                if (Rows.length > 0) {\r\n                    //动态读取json数据源结果集\r\n                    for (var i = 0; i < Rows.length; i++) {\r\n                        var Row = Rows[i];\r\n                        var point = new esri.geometry.Point(\r\n                            Row.geometry.x,\r\n                            Row.geometry.y,\r\n                            this.featrue.map.spatialReference\r\n                        );\r\n                        //定义文本symbol\r\n                        var textsymbol = new esri.symbol.TextSymbol(\r\n                            Row.rowinfo[options.textType]\r\n                        ) //动态设置文本值\r\n                            .setColor(new dojo.Color(options.color || [55, 55, 55])) //setColor设置文本颜色\r\n                            .setFont(\r\n                                new esri.symbol.Font(options.fontSize || \"10pt\") //setFont设置文本大小\r\n                                    .setWeight(esri.symbol.Font.WEIGHT_BOLD)\r\n                            ) //setWeight设置文本粗体\r\n                            .setOffset(options.offset_x || 0, options.offset_y || -25); //设置偏移方向\r\n                        var graphic = new esri.Graphic(point, textsymbol);\r\n                        textGraphicsLayer.add(graphic);\r\n                    }\r\n                }\r\n                this.TextGraphicsLayers.push(textGraphicsLayer);\r\n            },\r\n            // 根据多选框添加文字标注图层\r\n            addTextGraphicsLayerByCheckGroup() {\r\n                var textTypeList;\r\n                var indexOfSocial = this.form.social.indexOf(\"site\");\r\n                // 如果多选框里存在 site站点类型\r\n                if (indexOfSocial !== -1) {\r\n                    this.featrue.LayerObject.show();\r\n                    this.featrue.LayerObject_yujing.show();\r\n                    textTypeList = this.form.social.filter(val => {\r\n                        if (val != \"site\") {\r\n                            return true;\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.featrue.LayerObject.hide();\r\n                    this.featrue.LayerObject_yujing.hide();\r\n                    textTypeList = this.form.social;\r\n                }\r\n\r\n                textTypeList.forEach((textType, index) => {\r\n                    var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个图形图层\r\n                    textGraphicsLayer.textType = textType;\r\n                    this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\r\n                    var Rows = this.featrue.Rows;\r\n                    //创建textsymbol文本标注\r\n                    if (Rows.length > 0) {\r\n                        //动态读取json数据源结果集\r\n                        for (var i = 0; i < Rows.length; i++) {\r\n                            var Row = Rows[i];\r\n\r\n                            //获取坐标\r\n                            var x=Number(Row.geometry.x);\r\n                            var y=Number(Row.geometry.y);\r\n\r\n                            //如果basemap使用ArcGIS的就需要\r\n                            //转换坐标系\r\n                            //x = (x / 180.0) * 20037508.34\r\n                            //if (y > 85.05112) y = 85.05112;\r\n                            //if (y < -85.05112) y = -85.05112;\r\n                            //y = (Math.PI / 180.0) * y;\r\n                            //var tmp = Math.PI / 4.0 + y / 2.0;\r\n                            //y = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI;\r\n                            \r\n\r\n\r\n                            var point = new esri.geometry.Point(\r\n                                x,\r\n                                y,\r\n                                this.featrue.map.spatialReference\r\n                            );\r\n                            var value = Row.rowinfo[textType];\r\n                            // 过滤\r\n                            switch (textType) {\r\n                                case \"VOL\":\r\n                                    var value = `${this.Z_Filter(Row.rowinfo[textType])}`;\r\n                                    if (value == \"\") {\r\n                                        value = \"\";\r\n                                    } else {\r\n                                        value += \"V\";\r\n                                    }\r\n                                    break;\r\n                                case \"p\":\r\n                                    var value = `${this.$FilterData.Float_Filter(Row.rowinfo[textType], 1)}`;\r\n                                    if (value == \"\") {\r\n                                        value = \"\";\r\n                                    } else {\r\n                                        value += \"mm\";\r\n                                    }\r\n                                    break;\r\n                            }\r\n\r\n                            //定义文本symbol\r\n                            var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\r\n                                .setColor(new dojo.Color(value == \"不正常\" ? [255, 0, 0] : [55, 55, 55])) //setColor设置文本颜色\r\n                                .setFont(\r\n                                    new esri.symbol.Font(\"10pt\") //setFont设置文本大小\r\n                                        .setWeight(esri.symbol.Font.WEIGHT_BOLD)\r\n                                ) //setWeight设置文本粗体\r\n                                .setOffset(0, -(25 + index * 15)); //设置偏移方向\r\n                            var graphic = new esri.Graphic(point, textsymbol);\r\n                            textGraphicsLayer.add(graphic);\r\n                        }\r\n                    }\r\n                    this.TextGraphicsLayers.push(textGraphicsLayer);\r\n                });\r\n            },\r\n            // 移除文字标注图层\r\n            removeTextGraphicsLayer(textType) {\r\n                // 找到对应的文字标注图层\r\n                for (let i = 0; i < this.TextGraphicsLayers.length; i++) {\r\n                    var val = this.TextGraphicsLayers[i];\r\n                    if (val.textType == textType) {\r\n                        this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\r\n                        // val.hide();\r\n                        this.TextGraphicsLayers.splice(i, 1); // 从文字标注图层数组里去除对应的文字图层对象\r\n                    }\r\n                }\r\n            },\r\n            // 移除所有文字标注图层\r\n            removeAllTextGraphicsLayer() {\r\n                for (let i = 0; i < this.TextGraphicsLayers.length; i++) {\r\n                    var val = this.TextGraphicsLayers[i];\r\n                    this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\r\n                }\r\n                this.TextGraphicsLayers = [];\r\n            },\r\n            // 初始化baseBox\r\n            baseBox_init() {\r\n                // 获取地图对象,从父组件中\r\n                this.getMapFormParent();\r\n                // 获取图层对象,从父组件中\r\n                this.getJsonFlayerFormParent();\r\n                // 选取一部分从父组件传来的数据,将其加载为表格数据\r\n                this.loadTableData(\r\n                    this.getTableDataFormParent()\r\n                    // (function() {\r\n                    //   var data = test_data.map(val => {\r\n                    //     return val.rowinfo;\r\n                    //   });\r\n                    //   return data;\r\n                    // })()\r\n                );\r\n                // 过滤table数据\r\n                this.filterTableData();\r\n                // 给图层对象添加方法\r\n                this.addEventToJsonFlayer(this.JsonFlayer);\r\n\r\n                // 获取行政区划数据,然后设置地址选择框选项\r\n                this.getTableData_WRP_AD_B(data => {\r\n                    this.form.adressList = data;\r\n                    // data.map(val => {\r\n                    //   var newVal = new Object();\r\n                    //   newVal.value = val.AD_CD;\r\n                    //   newVal.label = val.AD_NM;\r\n                    //   return newVal;\r\n                    // })\r\n                });\r\n\r\n                // 获取输排水渠道数据,然后设置渠道选择框选项\r\n                this.getTableData_WRP_IrrBTCanalSystem(data => {\r\n                    this.form.qudaoList = data;\r\n                    // data.map(val => {\r\n                    //   var newVal = new Object();\r\n                    //   newVal.value = val.Canal_Code;\r\n                    //   newVal.label = val.Canal_Name;\r\n                    //   return newVal;\r\n                    // });\r\n                });\r\n\r\n                // 获取归属单位数据,然后设置归属单位选择框选项\r\n                this.getTableData_WPR_FieldInfo({\r\n                    FieldID: \"STGR\"\r\n                }, data => {\r\n                    this.form.guishuList = data.reverse();\r\n                    // this.form.guishuList = [\r\n                    //     {\r\n                    //         value:1,\r\n                    //         label:\"国家重要站\"\r\n                    //     },\r\n                    //     {FIELD\r\n                    //         value:2,\r\n                    //         label:\"省级重要站\"\r\n                    //     },\r\n                    //     {\r\n                    //         value:3,\r\n                    //         label:\"一般站\"\r\n                    //     },\r\n                    //     {\r\n                    //         value:4,\r\n                    //         label:\"实验或专用站\"\r\n                    //     },\r\n                    //     {\r\n                    //         value:5,\r\n                    //         label:\"山洪站\"\r\n                    //     },\r\n                    //     {\r\n                    //         value:6,\r\n                    //         label:\"临时站\"\r\n                    //     },\r\n                    //     {\r\n                    //         value:7,\r\n                    //         label:\"其他站\"\r\n                    //     },\r\n                    //     {\r\n                    //         value:8,\r\n                    //         label:\"灌区站\"\r\n                    //     },\r\n                    // ];\r\n                });\r\n\r\n                // 多选框标记勾选触发事件\r\n                // 1.清除所有文本标注图层\r\n                // 2.根据多选框添加文字标注图层\r\n                this.checkboxGroup_onChange();\r\n                // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\r\n                this.addTextGraphicsLayerControllerToFeatrue();\r\n            },\r\n            // 排序\r\n            sort_change(item) {\r\n                var order = item.order,\r\n                    key = item.prop;\r\n\r\n                this.filterTableData();\r\n                var newList;\r\n                if (order) {\r\n                    switch (order) {\r\n                        case \"descending\":\r\n                            if (key != \"TM\") {\r\n                                newList = this.table.Rows_filter.sort((a, b) => {\r\n                                    return Number(b[key]) - Number(a[key]);\r\n                                });\r\n                            } else {\r\n                                newList = this.table.Rows_filter.sort((a, b) => {\r\n                                    var aTime = new Date(`20${a.TM}`).getTime(),\r\n                                        bTime = new Date(`20${b.TM}`).getTime();\r\n                                    aTime = isNaN(aTime) ? 0 : aTime;\r\n                                    bTime = isNaN(bTime) ? 0 : bTime;\r\n                                    return bTime - aTime;\r\n                                });\r\n                            }\r\n                            break;\r\n\r\n                        case \"ascending\":\r\n                            if (key != \"TM\") {\r\n                                newList = this.table.Rows_filter.sort((a, b) => {\r\n                                    return Number(a[key]) - Number(b[key]);\r\n                                });\r\n                            } else {\r\n                                newList = this.table.Rows_filter.sort((a, b) => {\r\n                                    var aTime = new Date(`20${a.TM}`).getTime(),\r\n                                        bTime = new Date(`20${b.TM}`).getTime();\r\n                                    aTime = isNaN(aTime) ? 0 : aTime;\r\n                                    bTime = isNaN(bTime) ? 0 : bTime;\r\n                                    return aTime - bTime;\r\n                                });\r\n                            }\r\n                    }\r\n                    this.table.Rows_filter = newList;\r\n                }\r\n                this.$TableMethods.refreshCurrentChange(this.table, 1);\r\n            }\r\n        },\r\n        created() {\r\n            // 初始化baseBox\r\n            this.baseBox_init();\r\n            this.getinittime();\r\n            this.search();\r\n            this.baseBox_Interval = setInterval(() => {\r\n                this.search();\r\n            }, 1000 * 60 * 5)\r\n        },\r\n        destroyed() {\r\n            clearInterval(this.baseBox_Interval)\r\n        }\r\n    };\r\n</script>\r\n\r\n<style lang=\"less\" scope>\r\n    /* 引入baseBox公共样式 */\r\n    .date_zw {\r\n        margin-bottom: 10px;\r\n        width: 140px !important;\r\n        margin-right: 10px;\r\n    }\r\n    .time_zw{\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    @import \"../../assets/commonLess/baseBox\";\r\n</style>\r\n"]}]}