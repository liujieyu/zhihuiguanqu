{"remainingRequest":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\huangcaiplace\\zhihuiguanqu\\src\\components\\Details\\Details-yuqing.vue?vue&type=style&index=0&lang=less&scope=true&","dependencies":[{"path":"D:\\huangcaiplace\\zhihuiguanqu\\src\\components\\Details\\Details-yuqing.vue","mtime":1577669404028},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\less-loader\\dist\\cjs.js","mtime":1642129565717},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"./common/common.less\";\n\n.drawer-profile {\n    font-size: @siteInfoFontSize;\n    position: relative;\n\n    .outPutButton {\n        position: absolute;\n        right: -10px;\n        top: -45px;\n        z-index: 2;\n    }\n\n    .row_header {\n        text-align: center;\n        font-size: 1.5625rem;\n        font-weight: 700;\n    }\n\n    .relationRow {\n        margin-top: 1.25rem;\n\n        button {\n            margin-right: 1.25rem;\n        }\n    }\n\n    .checkBoxItem {\n        margin: 0 0.9375rem;\n    }\n}\n",{"version":3,"sources":["Details-yuqing.vue"],"names":[],"mappingsurEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Details-yuqing.vue","sourceRoot":"src/components/Details","sourcesContent":["<template>\r\n    <div v-loading=\"boxLoading\">\r\n        <el-tabs type=\"border-card\" v-model=\"activeName\" @tab-click>\r\n            <!-- 站点信息 -->\r\n            <el-tab-pane name=\"zhandianxinxi\">\r\n        <span slot=\"label\">\r\n          <i class=\"el-icon-tickets\"></i> 站点信息\r\n        </span>\r\n                <div class=\"drawer-profile\">\r\n                    <!-- 导出按钮 -->\r\n                    <Button size=\"small\" class=\"outPutButton\" type=\"success\" @click=\"$App.developing_tip\">\r\n                        <div>导出</div>\r\n                    </Button>\r\n                    <!-- 信息表 -->\r\n                    <div>\r\n                        <!-- 信息内容 -->\r\n                        <div>\r\n                            <!-- table start -->\r\n                            <table\r\n                                    style=\"border: 1px solid #EBEEF5\"\r\n                                    border\r\n                                    cellspacing=\"0\"\r\n                                    width=\"100%\"\r\n                                    class=\"table_detail\"\r\n                            >\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">站名：</td>\r\n                                    <td\r\n                                            align=\"center\"\r\n                                            class=\"dt_vale\"\r\n                                            style=\"border-right: 1px solid #EBEEF5\"\r\n                                    >{{ siteInfo.STNM || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">国家定类：</td>\r\n                                    <td\r\n                                            align=\"center\"\r\n                                            class=\"dt_vale\"\r\n                                    >{{ this.STTP_Filter(siteInfo.STTP) || \"&nbsp;\" }}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">等级：</td>\r\n                                    <td\r\n                                            align=\"center\"\r\n                                            class=\"dt_vale\"\r\n                                            style=\"border-right: 1px solid #EBEEF5\"\r\n                                    >{{ this.$FilterData.STGR_Filter(siteInfo.STGR) || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">行政区划：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">{{ siteInfo.AD_NM || \"&nbsp;\" }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">经度：</td>\r\n                                    <td\r\n                                            align=\"center\"\r\n                                            class=\"dt_vale\"\r\n                                            style=\"border-right: 1px solid #EBEEF5\"\r\n                                    >{{ siteInfo.LGTD || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">纬度：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">{{ siteInfo.LTTD || \"&nbsp;\" }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">站址：</td>\r\n                                    <td\r\n                                            align=\"center\"\r\n                                            class=\"dt_vale\"\r\n                                            style=\"border-right: 1px solid #EBEEF5\"\r\n                                    >{{ siteInfo.STLC || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">水系：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">{{ siteInfo.HNNM || \"&nbsp;\" }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">流域：</td>\r\n                                    <td\r\n                                            align=\"center\"\r\n                                            class=\"dt_vale\"\r\n                                            style=\"border-right: 1px solid #EBEEF5\"\r\n                                    >{{ siteInfo.CTCD || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">河流：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">{{ siteInfo.RVCD || \"&nbsp;\" }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">建站日期：</td>\r\n                                    <td\r\n                                            align=\"center\"\r\n                                            class=\"dt_vale\"\r\n                                            style=\"border-right: 1px solid #EBEEF5\"\r\n                                    >{{ siteInfo.ESSTDT || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">建设单位：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">{{ siteInfo.DLOG || \"&nbsp;\" }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\" style=\"border-bottom: none\">录入时间：</td>\r\n                                    <td\r\n                                            align=\"center\"\r\n                                            class=\"dt_vale\"\r\n                                            style=\"border-right: 1px solid #EBEEF5;border-bottom: none\"\r\n                                    ></td>\r\n                                    <td align=\"right\" class=\"dt_name\" style=\"border-bottom: none\">图像按钮：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\" style=\"border-bottom: none\">\r\n                                        <Button type=\"info\" @click=\"$App.developing_tip\" size=\"small\">查看图片</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                            <!-- table end -->\r\n\r\n                            <!-- <Row class=\"row\">\r\n                              <Col span=\"5\" align=\"right\">站名：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.STNM || \"&nbsp;\" }}</Col>\r\n                              <Col span=\"5\" align=\"right\">国家定类：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ this.STTP_Filter(siteInfo.STTP) || \"&nbsp;\" }}</Col>\r\n                            </Row>\r\n                            <Row class=\"row\">\r\n                              <Col span=\"5\" align=\"right\">等级：</Col>\r\n                              <Col\r\n                                span=\"7\"\r\n                                align=\"center\"\r\n                              >{{ this.$FilterData.STGR_Filter(siteInfo.STGR) || \"&nbsp;\" }}</Col>\r\n                              <Col span=\"5\" align=\"right\">行政区划：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.AD_NM || \"&nbsp;\" }}</Col>\r\n                            </Row>\r\n                            <Row class=\"row\">\r\n                              <Col span=\"5\" align=\"right\">经度：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.LGTD || \"&nbsp;\" }}</Col>\r\n                              <Col span=\"5\" align=\"right\">纬度：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.LTTD || \"&nbsp;\" }}</Col>\r\n                            </Row>\r\n                            <Row class=\"row\">\r\n                              <Col span=\"5\" align=\"right\">站址：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.STLC || \"&nbsp;\" }}</Col>\r\n                              <Col span=\"5\" align=\"right\">水系：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.HNNM || \"&nbsp;\" }}</Col>\r\n                            </Row>\r\n                            <Row class=\"row\">\r\n                              <Col span=\"5\" align=\"right\">流域：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.CTCD || \"&nbsp;\" }}</Col>\r\n                              <Col span=\"5\" align=\"right\">河流：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.RVCD || \"&nbsp;\" }}</Col>\r\n                            </Row>\r\n                            <Row class=\"row\">\r\n                              <Col span=\"5\" align=\"right\">建站日期：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.ESSTDT || \"&nbsp;\" }}</Col>\r\n                              <Col span=\"5\" align=\"right\">建设单位：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.DLOG || \"&nbsp;\" }}</Col>\r\n                            </Row>\r\n                            <Row class=\"row\">\r\n                              <Col span=\"5\" align=\"right\">隶属单位：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.ATCUNIT || \"&nbsp;\" }}</Col>\r\n                              <Col span=\"5\" align=\"right\">管理单位：</Col>\r\n                              <Col span=\"7\" align=\"center\">{{ siteInfo.DLOG || \"&nbsp;\" }}</Col>\r\n                            </Row>-->\r\n                            <!--              <Row class=\"row\">-->\r\n                            <!--                <Col span=\"5\" align=\"right\">录入时间：</Col>-->\r\n                            <!--                <Col-->\r\n                            <!--                  span=\"7\"-->\r\n                            <!--                  align=\"center\"-->\r\n                            <!--                >{{ this.$FilterData.dateFilter(siteInfo.MODITIME,8) || \"&nbsp;\" }}</Col>-->\r\n                            <!--                <Col span=\"5\" align=\"right\">图像按钮：</Col>-->\r\n                            <!--                <Col span=\"12\" align=\"center\" style=\"border-right: 1px solid rgb(200, 200, 200); \">-->\r\n                            <!--                  <Button type=\"info\" @click=\"$App.developing_tip\" size=\"small\">查看图片</Button>-->\r\n                            <!--                </Col>-->\r\n                            <!--              </Row>-->\r\n                        </div>\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                        <Row>\r\n                            <el-col class=\"dt_remark\">\r\n                                <Col span=\"24\">备注：{{ siteInfo.COMMENTS || \"&nbsp;\" }}</Col>\r\n                            </el-col>\r\n                        </Row>\r\n                    </div>\r\n                    <!-- 分割线 -->\r\n                    <div class=\"divider\"></div>\r\n\r\n                    <!-- 分割线 -->\r\n                    <div class=\"divider\"></div>\r\n                    <!-- 关联渠道和闸门 -->\r\n                    <div>\r\n                        <!-- <Row class=\"relationRow\">\r\n                          <Col span=\"4\">关联要素</Col>\r\n                          <Col span=\"20\">\r\n                            <Button\r\n                              @click=\"$App.developing_tip\"\r\n                              v-for=\"item in siteInfo.GUANLIAN\"\r\n                            >{{ item.SLNM }}</Button>\r\n                            <div v-if=\"siteInfo.GUANLIAN && siteInfo.GUANLIAN.length == 0\">暂无此站点的关联要素</div>\r\n                          </Col>\r\n                        </Row>-->\r\n                        <el-col\r\n                                style=\"border: 1px #EBEEF5 solid;border-radius: 2px;padding-left: 10px;padding-bottom: 20px\"\r\n                        >\r\n                            <Row class=\"relationRow\">\r\n                                <Col span=\"4\">同时监测：</Col>\r\n                                <Col span=\"20\">\r\n                                    <!-- <Button\r\n                                      @click=\"$App.developing_tip\"\r\n                                      v-for=\"item in siteInfo.GUANLIAN\"\r\n                                    >{{ item.SLNM }}</Button>-->\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row class=\"relationRow\">\r\n                                <Col span=\"4\">关联站点：</Col>\r\n                                <Col span=\"20\">\r\n                                    <!-- <Button\r\n                                      @click=\"$App.developing_tip\"\r\n                                      v-for=\"item in siteInfo.GUANLIAN\"\r\n                                    >{{ item.SLNM }}</Button>-->\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row class=\"relationRow\">\r\n                                <Col span=\"4\">关联要素：</Col>\r\n                                <Col span=\"20\">\r\n                                    <!-- <Button\r\n                                      @click=\"$App.developing_tip\"\r\n                                      v-for=\"item in siteInfo.GUANLIAN\"\r\n                                    >{{ item.SLNM }}</Button>-->\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                        </el-col>\r\n                    </div>\r\n                </div>\r\n            </el-tab-pane>\r\n            <!-- 降雨数据 -->\r\n            <el-tab-pane name=\"shuiqingshuju\">\r\n        <span slot=\"label\">\r\n          <Icon type=\"ios-water-outline\" style=\"font-size:20px\"/>降雨数据\r\n        </span>\r\n                <div class=\"drawer-profile\">\r\n                    <!-- 导出按钮 -->\r\n                    <Button size=\"small\" class=\"outPutButton\" type=\"success\" @click=\"$App.developing_tip\">\r\n                        <div>导出</div>\r\n                    </Button>\r\n                    <div>\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                        <!-- 选项卡 -->\r\n                        <Tabs type=\"card\">\r\n                            <!-- 表格 -->\r\n                            <TabPane label=\"表格\">\r\n                                <!-- 查询，导出行 -->\r\n                                <Row :gutter=\"16\" type=\"flex\" justify=\"end\" align=\"middle\">\r\n                                    <Col span=\"2\">\r\n                                        <span style=\"letter-spacing:2px\">查询</span>\r\n                                    </Col>\r\n                                    <!-- 开始到结束时间选择 -->\r\n                                    <Col span=\"19\">\r\n                                        <el-date-picker\r\n                                                v-model=\"table.shuiqing.date\"\r\n                                                range-separator=\"至\"\r\n                                                start-placeholder=\"开始日期\"\r\n                                                end-placeholder=\"结束日期\"\r\n                                                @change=\"handleDatePickerChange\"\r\n                                                :picker-options=\"table.shuiqing.datePickerOptions[select.yuqing_select]\"\r\n                                                unlink-panels\r\n                                                :type=\"table.shuiqing.datePickerType\"\r\n                                                size=\"mini\"\r\n                                                style=\"min-width: 360px\"\r\n                                                v-show=\"table.shuiqing.datePickerType != 'yearrange'\"\r\n                                        ></el-date-picker>\r\n\r\n<!--                                        旬表-->\r\n<!--                                        <div class=\"div_tenDay\" v-show=\"table.shuiqing.datePickerType == 'tenDaysrange'\">-->\r\n<!--                                            <el-date-picker-->\r\n<!--                                                    class=\"wAh\"-->\r\n<!--                                                    size=\"mini\"-->\r\n<!--                                                    v-model=\"table.shuiqing.tenDays_m\"-->\r\n<!--                                                    value-format=\"yyyy-mm\"-->\r\n<!--                                                    type=\"month\"-->\r\n<!--                                                    placeholder=\"选择月\">-->\r\n<!--                                            </el-date-picker>-->\r\n<!--                                            <el-select size=\"mini\" @change=\"search_yuqing('tenDaysrange')\" v-model=\"select.xun_select\" placeholder=\"选择旬\">-->\r\n<!--                                                <el-option-->\r\n<!--                                                        v-for=\"item in select.xunList\"-->\r\n<!--                                                        :key=\"item.value\"-->\r\n<!--                                                        :label=\"item.label\"-->\r\n<!--                                                        :value=\"item.value\">-->\r\n<!--                                                </el-option>-->\r\n<!--                                            </el-select>-->\r\n<!--                                        </div>-->\r\n\r\n\r\n<!--                                        年表-->\r\n                                        <div class=\"div_year\" v-show=\"table.shuiqing.datePickerType == 'yearrange'\">\r\n                                            <el-date-picker\r\n                                                    class=\"wAh\"\r\n                                                    size=\"mini\"\r\n                                                    v-model=\"table.shuiqing.start_year\"\r\n                                                    value-format=\"yyyy\"\r\n                                                    type=\"year\"\r\n                                                    placeholder=\"选择年\">\r\n                                            </el-date-picker>\r\n                                             &nbsp;&nbsp;至&nbsp;&nbsp;\r\n                                            <el-date-picker\r\n                                                    class=\"wAh\"\r\n                                                    size=\"mini\"\r\n                                                    v-model=\"table.shuiqing.end_year\"\r\n                                                    type=\"year\"\r\n                                                    value-format=\"yyyy\"\r\n                                                    placeholder=\"选择年\">\r\n                                            </el-date-picker>\r\n\r\n                                            <el-button style=\"margin-left: 20px\"\r\n                                                       type=\"primary\" @click=\"search_yuqing('yearTable')\" size=\"mini\" plain>查询</el-button>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <!-- 分割线 -->\r\n                                <div class=\"divider\"></div>\r\n                                <Row :gutter=\"16\" type=\"flex\" justify=\"end\" align=\"middle\">\r\n                                    <Col span=\"8\">\r\n                                        累计降雨:{{jiangyu_tongji.rainSum}}mm\r\n                                    </Col>\r\n                                    <Col span=\"8\">\r\n                                        平均{{biao_yuqing}}降雨:{{jiangyu_tongji.rainVag}}mm\r\n                                    </Col>\r\n                                    <Col span=\"8\">\r\n                                        最大{{biao_yuqing}}降雨:{{jiangyu_tongji.rainMax}}mm\r\n                                    </Col>\r\n                                </Row>\r\n                                <!-- 分割线 -->\r\n                                <div class=\"divider\"></div>\r\n                                <!-- 表格用于展示数据 -->\r\n                                <div>\r\n                                    <Table\r\n                                            :columns=\"table.shuiqing.activeColumns\"\r\n                                            :data=\"table.shuiqing.Rows_filter\"\r\n                                            :loading=\"table.shuiqing.loading\"\r\n                                            border\r\n                                            size=\"small\"\r\n                                            :height=\"table.shuiqing.height\"\r\n                                            @on-sort-change=\"sort_change_shuiqing\"\r\n                                    ></Table>\r\n                                    <!-- 分割线 -->\r\n                                    <div class=\"divider\"></div>\r\n                                    <!-- 分页器 -->\r\n                                    <el-pagination\r\n                                            background\r\n                                            :page-size=\"table.shuiqing.pageSizes\"\r\n                                            layout=\"sizes, total, prev, pager, next, jumper \"\r\n                                            :page-sizes=\"[20, 50, 100, 200]\"\r\n                                            :total=\"table.shuiqing.total\"\r\n                                            :pager-count=\"5\"\r\n                                            :current-page=\"table.shuiqing.currentPage\"\r\n                                            @current-change=\"handleCurrentChange_shuiqing\"\r\n                                            @size-change=\"handleSizeChange_shuiqing\"\r\n                                            class=\"pageController\"\r\n                                            small\r\n                                    ></el-pagination>\r\n                                    <!-- 分割线 -->\r\n                                    <div class=\"divider\"></div>\r\n                                </div>\r\n                            </TabPane>\r\n                            <TabPane label=\"图形\">\r\n                                <!-- 绘图 -->\r\n                                <div v-show=\"table.shuiqing.Rows_filter.length > 0\" id=\"shuiqingChart\" :style=\"{width: '500px', height: '350px',margin: 'auto'}\"></div>\r\n                                <div\r\n                                        v-show=\"table.shuiqing.Rows_filter.length == 0\"\r\n                                        :style=\"{width: '500px', height: '350px',margin: 'auto', display:'flex', alignItems:'center', justifyContent: 'center'}\"\r\n                                >暂无数据\r\n                                </div>\r\n                            </TabPane>\r\n                            <!-- 历史表选择框 -->\r\n                            <Select\r\n                                    @on-change=\"tableTypeOnChange_shuiqing\"\r\n                                    prefix=\"ios-calendar-outline\"\r\n                                    v-model=\"select.yuqing_select\"\r\n                                    slot=\"extra\"\r\n                            >\r\n                                <Option\r\n                                        v-for=\"item in select.yuqingList\"\r\n                                        :label=\"item.label\"\r\n                                        :value=\"item.value\"\r\n                                        :key=\"item.value\"\r\n                                ></Option>\r\n                            </Select>\r\n                        </Tabs>\r\n\r\n                        <!-- 分割线 -->\r\n                        <!-- <div class=\"divider\"></div> -->\r\n                    </div>\r\n                </div>\r\n            </el-tab-pane>\r\n            <!-- 特征雨量 -->\r\n            <el-tab-pane label=\"特征雨量\" name=\"tezhengyuliang\">\r\n        <span slot=\"label\">\r\n          <Icon type=\"ios-speedometer-outline\" style=\"font-size:20px\"/>特征雨量\r\n        </span>\r\n\r\n                <div class=\"drawer-profile\">\r\n                    <!-- 指标信息 -->\r\n                    <div>\r\n                        <Row class=\"row\">\r\n                            <Col span=\"5\" align=\"right\">预警等级：</Col>\r\n                            <Col span=\"7\" align=\"center\">\r\n                                &nbsp;\r\n                                <!-- {{ table.tezhengyuliang.alarmData.EWL}} -->\r\n                            </Col>\r\n                            <Col span=\"5\" align=\"right\">24小时降雨：</Col>\r\n                            <Col span=\"7\" align=\"center\">\r\n                                &nbsp;\r\n                                <!-- {{ table.tezhengyuliang.alarmData.OD_P + \"mm\"|| \"&nbsp;\" }} -->\r\n                            </Col>\r\n                        </Row>\r\n                        <Row class=\"row last_row\">\r\n                            <Col span=\"5\" align=\"right\">12小时降雨：</Col>\r\n                            <Col span=\"7\" align=\"center\">\r\n                                &nbsp;\r\n                                <!-- {{ table.tezhengyuliang.alarmData.TWH_P + \"mm\" || \"&nbsp;\" }} -->\r\n                            </Col>\r\n                            <Col span=\"5\" align=\"right\">6小时降雨：</Col>\r\n                            <Col span=\"7\" align=\"center\">\r\n                                &nbsp;\r\n                                <!-- {{ table.tezhengyuliang.alarmData.SH_P + \"mm\" || \"&nbsp;\" }} -->\r\n                            </Col>\r\n                        </Row>\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                    </div>\r\n                    <!-- 导出按钮 -->\r\n                    <Button size=\"small\" class=\"outPutButton\" type=\"success\" @click=\"$App.developing_tip\">\r\n                        <div>导出</div>\r\n                    </Button>\r\n                    <!-- 查询，导出行 -->\r\n                    <Row :gutter=\"16\" type=\"flex\" justify=\"center\" align=\"middle\">\r\n                        <Col span=\"2\">\r\n                            <span style=\"letter-spacing:2px\">查询</span>\r\n                        </Col>\r\n                        <!-- 开始到结束时间选择 -->\r\n                        <Col span=\"15\">\r\n                            <el-date-picker\r\n                                    v-model=\"table.tezhengyuliang.date\"\r\n                                    range-separator=\"至\"\r\n                                    start-placeholder=\"开始日期\"\r\n                                    end-placeholder=\"结束日期\"\r\n                                    @change=\"handleDatePickerChange_tezhengyuliang\"\r\n                                    :picker-options=\"table.tezhengyuliang.datePickerOptions\"\r\n                                    unlink-panels\r\n                                    type=\"monthrange\"\r\n                                    size=\"mini\"\r\n                                    style=\"min-width: 360px\"\r\n                            ></el-date-picker>\r\n                        </Col>\r\n                        <Col span=\"3\"></Col>\r\n                    </Row>\r\n                    <!-- 分割线 -->\r\n                    <div class=\"divider\"></div>\r\n\r\n                    <!-- 表格用于展示数据 -->\r\n                    <div>\r\n                        <Table\r\n                                :columns=\"table.tezhengyuliang.columns\"\r\n                                :data=\"table.tezhengyuliang.Rows_filter\"\r\n                                :loading=\"table.tezhengyuliang.loading\"\r\n                                border\r\n                                size=\"small\"\r\n                                :height=\"table.tezhengyuliang.height\"\r\n                        ></Table>\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                        <!-- 分页器 -->\r\n                        <el-pagination\r\n                                background\r\n                                :page-size=\"table.tezhengyuliang.pageSizes\"\r\n                                layout=\"sizes, total, prev, pager, next, jumper \"\r\n                                :page-sizes=\"[20, 50, 100, 200]\"\r\n                                :total=\"table.tezhengyuliang.total\"\r\n                                :pager-count=\"5\"\r\n                                :current-page=\"table.tezhengyuliang.currentPage\"\r\n                                @current-change=\"handleCurrentChange_tezhengyuliang\"\r\n                                @size-change=\"handleSizeChange_tezhengyuliang\"\r\n                                class=\"pageController\"\r\n                                small\r\n                        ></el-pagination>\r\n                    </div>\r\n                    <!-- 分割线 -->\r\n                    <div class=\"divider\"></div>\r\n                </div>\r\n            </el-tab-pane>\r\n        </el-tabs>\r\n\r\n        <!-- 导出提示对话框 -->\r\n        <Modal\r\n                v-model=\"outPutModal\"\r\n                v-loading=\"loading\"\r\n                title=\"关于导出\"\r\n                @on-ok=\"outPutSure\"\r\n                @on-cancel=\"cancel\"\r\n        >\r\n            <p>您确认导出该站点的信息表吗？</p>\r\n        </Modal>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import FilterMethods from \"../../assets/commonJS/FilterMethods\"; // 过滤方法\r\n    import GetDataMethods from \"../../assets/commonJS/GetDataMethods\"; // 获取数据方法\r\n    import {timingSafeEqual} from \"crypto\";\r\n    import {type} from \"os\";\r\n    import {types} from \"util\";\r\n    import {stat} from \"fs\";\r\n    import {filter} from \"minimatch\";\r\n\r\n    export default {\r\n        props: {\r\n            info: {}\r\n        },\r\n        data() {\r\n            return {\r\n                // 统计数据的表名\r\n                biao_yuqing: '',\r\n                // 激活标签栏\r\n                activeName: \"shuiqingshuju\",\r\n                // 站点\r\n                siteInfo: {},\r\n                //   多选框对象\r\n                checkBox: {},\r\n                // 降雨统计\r\n                jiangyu_tongji: {\r\n                    rainSum: '',\r\n                    rainVag: '',\r\n                    rainMax: ''\r\n                },\r\n                //   选择框对象\r\n                select: {\r\n                    // 当前激活的降雨数据快速查询选项\r\n                    activeQuickSearchList: [],\r\n                    // 查询绑定值\r\n                    select: \"rec6\",\r\n                    // 日期选择器绑定值\r\n                    yuqing_datePicker: null,\r\n                    // 降雨数据历史表\r\n                    yuqingList: [\r\n                        {\r\n                            value: \"hourTable\",\r\n                            size: \"small\",\r\n                            // iconType: \"logo-facebook\",\r\n                            label: \"小时表\"\r\n                        },\r\n                        {\r\n                            value: \"dayTable\",\r\n                            size: \"small\",\r\n                            // iconType: \"logo-facebook\",\r\n                            label: \"日表\"\r\n                        },\r\n                        {\r\n                            value: \"tenDaysTable\",\r\n                            size: \"small\",\r\n                            // iconType: \"logo-facebook\",\r\n                            label: \"旬表\"\r\n                        },\r\n                        {\r\n                            value: \"monthTable\",\r\n                            size: \"small\",\r\n                            // iconType: \"logo-facebook\",\r\n                            label: \"月表\"\r\n                        },\r\n                        {\r\n                            value: \"yearTable\",\r\n                            size: \"small\",\r\n                            // iconType: \"logo-facebook\",\r\n                            label: \"年表\"\r\n                        }\r\n                    ],\r\n                    // 降雨数据历史表绑定值\r\n                    yuqing_select: \"hourTable\",\r\n                    // 旬选择器列表\r\n                    xunList: [\r\n                        {\r\n                            label: \"上旬\",\r\n                            value: 0\r\n                        },\r\n                        {\r\n                            label: \"中旬\",\r\n                            value: 1\r\n                        },\r\n                        {\r\n                            label: \"下旬\",\r\n                            value: 2\r\n                        },\r\n                    ],\r\n                    // 旬选择器绑定值\r\n                    xun_select: null\r\n                },\r\n                // 表格\r\n                table: {\r\n                    // 水情\r\n                    shuiqing: {\r\n                        // 表头设置\r\n                        columns: {\r\n                            // 历史表\r\n                            historyTable: [\r\n                                {\r\n                                    title: \" \",\r\n                                    type: \"index\",\r\n                                    width: 50,\r\n                                    align: \"center\",\r\n                                    // 自定义序号\r\n                                    indexMethod(item) {\r\n                                        var index =\r\n                                            item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n                                        return index;\r\n                                    },\r\n                                    ellipsis: true\r\n                                },\r\n                                {\r\n                                    title: \"时间\",\r\n                                    key: \"DT\",\r\n                                    width: 180,\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                },\r\n                                {\r\n                                    title: \"降雨(mm)\",\r\n                                    // width: 130,\r\n                                    key: \"P\",\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                }\r\n                            ],\r\n                            // 小时表\r\n                            hourTable: [\r\n                                {\r\n                                    title: \" \",\r\n                                    type: \"index\",\r\n                                    width: 50,\r\n                                    align: \"center\",\r\n                                    // 自定义序号\r\n                                    indexMethod(item) {\r\n                                        var index =\r\n                                            item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n                                        return index;\r\n                                    },\r\n                                    ellipsis: true\r\n                                },\r\n                                {\r\n                                    title: \"时间\",\r\n                                    key: \"DT\",\r\n                                    width: 180,\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                },\r\n                                {\r\n                                    title: \"降雨(mm)\",\r\n                                    // width: 130,\r\n                                    key: \"P\",\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                }\r\n                            ],\r\n                            // 日表\r\n                            dayTable: [\r\n                                {\r\n                                    title: \" \",\r\n                                    type: \"index\",\r\n                                    width: 50,\r\n                                    align: \"center\",\r\n                                    // 自定义序号\r\n                                    indexMethod(item) {\r\n                                        var index =\r\n                                            item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n\r\n                                        return index;\r\n                                    },\r\n                                    ellipsis: true\r\n                                },\r\n                                {\r\n                                    title: \"日期\",\r\n                                    key: \"TM\",\r\n                                    width: 150,\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                },\r\n                                {\r\n                                    title: \"降雨(mm)\",\r\n                                    // width: 130,\r\n                                    key: \"p\",\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                }\r\n                            ],\r\n                            // 旬表\r\n                            tenDaysTable: [\r\n                                {\r\n                                    title: \" \",\r\n                                    type: \"index\",\r\n                                    width: 50,\r\n                                    align: \"center\",\r\n                                    // 自定义序号\r\n                                    indexMethod(item) {\r\n                                        var index =\r\n                                            item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n\r\n                                        return index;\r\n                                    },\r\n                                    ellipsis: true\r\n                                },\r\n                                {\r\n                                    title: \"时间\",\r\n                                    key: \"DT\",\r\n                                    width: 130,\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                },\r\n                                {\r\n                                    title: \"降雨(mm)\",\r\n                                    // width: 130,\r\n                                    key: \"P\",\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                }\r\n                            ],\r\n                            // 月表\r\n                            monthTable: [\r\n                                {\r\n                                    title: \" \",\r\n                                    type: \"index\",\r\n                                    width: 50,\r\n                                    align: \"center\",\r\n                                    // 自定义序号\r\n                                    indexMethod(item) {\r\n                                        var index =\r\n                                            item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n\r\n                                        return index;\r\n                                    },\r\n                                    ellipsis: true\r\n                                },\r\n                                {\r\n                                    title: \"时间\",\r\n                                    key: \"DT\",\r\n                                    width: 130,\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                },\r\n                                {\r\n                                    title: \"降雨(mm)\",\r\n                                    // width: 130,\r\n                                    key: \"P\",\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                }\r\n                            ],\r\n                            // 年表\r\n                            yearTable: [\r\n                                {\r\n                                    title: \" \",\r\n                                    type: \"index\",\r\n                                    width: 50,\r\n                                    align: \"center\",\r\n                                    // 自定义序号\r\n                                    indexMethod(item) {\r\n                                        var index =\r\n                                            item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n\r\n                                        return index;\r\n                                    },\r\n                                    ellipsis: true\r\n                                },\r\n                                {\r\n                                    title: \"时间\",\r\n                                    key: \"YR\",\r\n                                    width: 130,\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                },\r\n                                {\r\n                                    title: \"降雨(mm)\",\r\n                                    // width: 130,\r\n                                    key: \"P\",\r\n                                    align: \"center\",\r\n                                    sortable: \"custom\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        // 正在激活的表头\r\n                        activeColumns: [],\r\n                        // 表体内容\r\n                        Rows: [],\r\n                        // 过滤后的表体内容\r\n                        Rows_filter: [],\r\n                        // 日期时间选择器的选项配置\r\n                        datePickerOptions: {\r\n                            historyTable: {\r\n                                shortcuts: [\r\n                                    {\r\n                                        text: \"最近6小时\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 6);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近12小时\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 12);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近24小时\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 24);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近36小时\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 36);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近72小时\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 72);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            },\r\n                            hourTable: {\r\n                                shortcuts: [\r\n                                    {\r\n                                        text: \"最近6小时\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 6);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近12小时\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 12);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近24小时\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 24);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近36小时\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 36);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近72小时\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 72);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            },\r\n                            dayTable: {\r\n                                shortcuts: [\r\n                                    {\r\n                                        text: \"最近10天\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 10);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近15天\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 15);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近30天\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近60天\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 60);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: \"最近90天\",\r\n                                        onClick(picker) {\r\n                                            const end = new Date();\r\n                                            const start = new Date();\r\n                                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                                            picker.$emit(\"pick\", [start, end]);\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            },\r\n                            monthTable: {\r\n                                shortcuts: []\r\n                            }\r\n                        },\r\n                        // 日期时间选择器类型\r\n                        datePickerType: \"date\",\r\n                        // 日期时间选择器值\r\n                        date: null,\r\n                        // 开始年\r\n                        start_year: null,\r\n                        //结束年\r\n                        end_year: null,\r\n\r\n                        tenDays_value: null,\r\n\r\n                        tenDays_lable: null,\r\n                        btn_tenday: null,\r\n                        // 排序\r\n                        sort: null,\r\n                        // 表格是否加载中\r\n                        loading: false,\r\n                        // 总条数\r\n                        total: 0,\r\n                        // 当前页\r\n                        currentPage: 1,\r\n                        // 每页显示数量\r\n                        pageSizes: 20,\r\n                        // 表格高度\r\n                        height: 430\r\n                    },\r\n                    // 特征雨量\r\n                    tezhengyuliang: {\r\n                        // 表头设置\r\n                        columns: [\r\n                            {\r\n                                title: \" \",\r\n                                type: \"index\",\r\n                                width: 50,\r\n                                align: \"center\",\r\n                                // 自定义序号\r\n                                indexMethod(item) {\r\n                                    var index =\r\n                                        item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n\r\n                                    return index;\r\n                                },\r\n                                ellipsis: true\r\n                            },\r\n                            {\r\n                                title: \"年份\",\r\n                                // width: 130,\r\n                                key: \"Years\",\r\n                                width: 150,\r\n                                align: \"center\",\r\n                                sortable: true\r\n                            },\r\n                            {\r\n                                title: \"最大时段降雨(mm)\",\r\n                                key: \"Max_DP\",\r\n\r\n                                align: \"center\",\r\n                                sortable: true\r\n                            }\r\n                        ],\r\n                        // 表体内容\r\n                        Rows: [],\r\n                        // 过滤后的表体内容\r\n                        Rows_filter: [],\r\n                        // 总条数\r\n                        total: 0,\r\n                        // 表格是否加载中\r\n                        loading: false,\r\n                        // 当前页\r\n                        currentPage: 1,\r\n                        // 日期时间选择器值\r\n                        date: null,\r\n                        // 日期时间选择器的选项配置\r\n                        datePickerOptions: {\r\n                            shortcuts: [\r\n                                {\r\n                                    text: \"最近5年\",\r\n                                    onClick(picker) {\r\n                                        const end = new Date();\r\n                                        const start = new Date();\r\n                                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 5);\r\n                                        picker.$emit(\"pick\", [start, end]);\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: \"最近3年\",\r\n                                    onClick(picker) {\r\n                                        const end = new Date();\r\n                                        const start = new Date();\r\n                                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 3);\r\n                                        picker.$emit(\"pick\", [start, end]);\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: \"最近2年\",\r\n                                    onClick(picker) {\r\n                                        const end = new Date();\r\n                                        const start = new Date();\r\n                                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 2);\r\n                                        picker.$emit(\"pick\", [start, end]);\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: \"最近1年\",\r\n                                    onClick(picker) {\r\n                                        const end = new Date();\r\n                                        const start = new Date();\r\n                                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 1);\r\n                                        picker.$emit(\"pick\", [start, end]);\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        // 表格高度\r\n                        height: 410,\r\n                        // 每页显示数量\r\n                        pageSizes: 20,\r\n                        alarmData: {\r\n                            EWL: \"\", // 预警等级\r\n                            OD_P: \"\", // 24小时降雨\r\n                            TWH_P: \"\", // 12小时降雨\r\n                            SH_P: \"\" // 6小时降雨\r\n                        }\r\n                    }\r\n                },\r\n                // 图形\r\n                chart: {\r\n                    shuiqing: null\r\n                },\r\n                //   日期数据\r\n                date: {\r\n                    shuiqing: \"\"\r\n                },\r\n                // 输入框对象\r\n                input: {\r\n                    // 关系曲线换算的\r\n                    huansuan: {\r\n                        waterLever: \"\",\r\n                        flowLever: \"\"\r\n                    }\r\n                },\r\n                //   导出按钮加载控制\r\n                outPutLoading: false,\r\n                //   导出确认对话框控制\r\n                outPutModal: false,\r\n                // 整块区域的加载控制\r\n                boxLoading: false,\r\n                tableType: ''\r\n            };\r\n        },\r\n        mixins: [FilterMethods, GetDataMethods],\r\n        methods: {\r\n            //   导出站点信息\r\n            outPutSiteInfo() {\r\n                //   关闭导出确认对话框\r\n                this.outPutModal = false;\r\n                //   按钮加载\r\n                this.outPutLoading = true;\r\n                setTimeout(() => {\r\n                    this.outPutLoading = false;\r\n                    this.$Modal.success({\r\n                        title: \"关于导出\",\r\n                        content: \"站点信息表导出成功\"\r\n                    });\r\n                }, 500);\r\n            },\r\n            //   确认导出\r\n            outPutSure() {\r\n                this.outPutSiteInfo();\r\n            },\r\n            // 日期时间选择器变化触发事件\r\n            // handleDatePickerChange(val, valType) {\r\n            //   var timeInterval = `${val[0].replace(/\\//g, \"-\")},${val[1].replace(\r\n            //     /\\//g,\r\n            //     \"-\"\r\n            //   )}`;\r\n            //   this.select.yuqing_datePicker = timeInterval;\r\n            // },\r\n            datePicke_on_ok(tableType) {\r\n                this.table[\"shuiqing\"].currentPage = 1; // 重置当前页\r\n                this.table.shuiqing.loading = true; // 表格加载中\r\n                var body = {\r\n                    STCD: this.siteInfo.STCD,\r\n                    TM: `bt,${this.select.yuqing_datePicker}`\r\n                };\r\n                var pageSizes = this.table.shuiqing.pageSizes;\r\n                var currentPage = 1;\r\n                this.getTableData_shuiqing(\r\n                    tableType,\r\n                    pageSizes,\r\n                    currentPage,\r\n                    body,\r\n                    data => {\r\n                        console.log(data);\r\n                        this.setTableTotal(\"shuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\r\n                        this.setTableData(\"shuiqing\", data.data); // 更新水情历史数据表的数据\r\n                        this.table.shuiqing.loading = false; // 取消表格加载\r\n                    }\r\n                );\r\n            },\r\n            // 查询\r\n            search_yuqing(tableType) {\r\n                var tableType = tableType || this.select.yuqing_select;\r\n                this.letTableLoading(\"shuiqing\"); // 表格加载中\r\n\r\n                // 传递参数\r\n                var body = {\r\n                    STCD: this.siteInfo.STCD,\r\n                    _page: this.table.shuiqing.currentPage || 1,\r\n                    _page_size: this.table.shuiqing.pageSizes || 20\r\n                };\r\n\r\n                // 如果有选择排序，则传递排序参数\r\n                if (this.table.shuiqing.sort) {\r\n                    var _sort = this.$FilterData.sort_Filter(this.table.shuiqing.sort);\r\n                    if (_sort) {\r\n                        body._orderby = _sort;\r\n                    }\r\n                } else {\r\n                    switch (tableType) {\r\n                        case \"hourTable\":\r\n                            body._orderby = `DT `;\r\n                            break;\r\n\r\n                        case \"dayTable\":\r\n                            body._orderby = `dt `;\r\n                            break;\r\n\r\n                        case \"tenDaysTable\":\r\n                            body._orderby = `dt1 `;\r\n                            break;\r\n\r\n                        case \"monthTable\":\r\n                            body._orderby = `dt `;\r\n                            break;\r\n\r\n                        case \"yearTable\":\r\n                            body._orderby = `YR `;\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                // 如果有选择日期进行查询，根据表格类型传递参数\r\n                if (this.table.shuiqing.date && tableType !== \"yearTable\") {\r\n                    switch (tableType) {\r\n                        case \"dayTable\":\r\n                            // body.DTT = this.$FilterData.elDatePicker_Filter(\r\n                            //   this.table.shuiqing.date\r\n                            // );\r\n                            var DTT = this.$FilterData\r\n                                .elDatePicker_Filter(this.table.shuiqing.date)\r\n                                .split(\",\");\r\n                            console.log(DTT[1].substr(0,10),DTT[2].substr(0,10))\r\n                            body.Time_min = DTT[1].substr(0,10);\r\n                            body.Time_max = DTT[2].substr(0,10);\r\n                            break;\r\n                        case \"hourTable\":\r\n                            // body.DTT = this.$FilterData.elDatePicker_Filter(\r\n                            //   this.table.shuiqing.date\r\n                            // );\r\n                            var DTT = this.$FilterData\r\n                                .elDatePicker_Filter(this.table.shuiqing.date)\r\n                                .split(\",\");\r\n                            body.Time_min = DTT[1];\r\n                            body.Time_max = DTT[2];\r\n                            break;\r\n                        case \"tenDaysTable\":\r\n                            // body.DTT = this.$FilterData.elDatePicker_Filter(\r\n                            //   this.table.shuiqing.date\r\n                            // );\r\n                            var DTT = this.$FilterData\r\n                                .elDatePicker_Filter(this.table.shuiqing.date)\r\n                                .split(\",\");\r\n                            body.Time_min = `${DTT[1].substr(0,7)}-01`;\r\n                            body.Time_max = `${DTT[2].substr(0,7)}-01`;\r\n                            break;\r\n                        case \"monthTable\":\r\n                            // body.DT = this.$FilterData.elDatePicker_Filter(\r\n                            //   this.table.shuiqing.date,\r\n                            //   \"monthTable\"\r\n                            // );\r\n                            var DTT = this.$FilterData\r\n                                .elDatePicker_Filter(this.table.shuiqing.date, \"monthTable\")\r\n                                .split(\",\");\r\n                            body.Time_min = `${DTT[1].substr(0,7)}-01`;\r\n                            body.Time_max = `${DTT[2].substr(0,7)}-01`;\r\n                            // body.YE = this.$FilterData.elDatePicker_Filter(\r\n                            //   this.table.shuiqing.date,\r\n                            //   \"monthTable\"\r\n                            // ).YE;\r\n                            // body.MON = this.$FilterData.elDatePicker_Filter(\r\n                            //   this.table.shuiqing.date,\r\n                            //   \"monthTable\"\r\n                            // ).MON;\r\n                            break;\r\n\r\n                    }\r\n                }\r\n\r\n                if (tableType === \"yearTable\") {\r\n                    var start_year = this.table.shuiqing.start_year;\r\n                    var end_year = this.table.shuiqing.end_year;\r\n                    if (start_year) {\r\n                        var start = new Date(start_year),\r\n                            end = end_year ? new Date(end_year) : new Date();\r\n                        body.Time_min = start.getFullYear()\r\n                        body.Time_max = end.getFullYear()\r\n                    }\r\n                    // console.log(body.yr_min,body.yr_max)\r\n\r\n                }\r\n\r\n                // if (tableType === \"tenDaysrange\") {\r\n                //     var start = new Date(this.table.shuiqing.start_year),\r\n                //         end = new Date(this.table.shuiqing.end_year);\r\n                //     body.yr_min = start.getFullYear()\r\n                //     body.yr_max = end.getFullYear()\r\n                //     console.log(body.yr_min,body.yr_max)\r\n                //\r\n                // }\r\n\r\n                // 获取雨情历史数据\r\n                this.$GetData.Survey_History_YQ(\r\n                    tableType,\r\n                    body,\r\n                    {\r\n                        default: true,\r\n                        myFilter: data => {\r\n                            data.map(val => {\r\n                                val.currentPage = body._page;\r\n                                val.pageSizes = body._page_size;\r\n                                return val;\r\n                            });\r\n                            console.log(data);\r\n                            return data;\r\n                        }\r\n                    },\r\n                    data => {\r\n\r\n                        this.setTableTotal(\"shuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\r\n                        this.setTableData(\"shuiqing\", data.data); // 更新水情历史数据表的数据\r\n\r\n                        body._page_size = 999999999;\r\n                        body._page = 1;\r\n                        this.$GetData.Survey_History_YQ(\r\n                            tableType,\r\n                            body,\r\n                            {\r\n                                default: true,\r\n                                myFilter: data => {\r\n                                    data.map(val => {\r\n                                        val.currentPage = body._page;\r\n                                        val.pageSizes = body._page_size;\r\n                                        return val;\r\n                                    });\r\n                                    return data;\r\n                                }\r\n                            },\r\n                            chartData => {\r\n                                console.log(\"chartData\", chartData)\r\n                                this.createChart_shuiqingshuju(\r\n                                    \"shuiqingChart\",\r\n                                    tableType,\r\n                                    chartData.data\r\n                                ); // 水情表格\r\n                            }\r\n                        );\r\n\r\n\r\n                        let obj = {};\r\n                        obj.Time_max = body.Time_max;\r\n                        obj.Time_min = body.Time_min;\r\n                        obj.STCD = body.STCD;\r\n\r\n\r\n                        this.$GetData.statistics_rain_YQ(tableType, obj, false, (data) => {\r\n                            console.log(\"data\",data.data)\r\n                            var d = data.data\r\n\r\n                            // console.log(this);\r\n\r\n                            this.jiangyu_tongji.rainSum = d.LeiJiYuLiang;\r\n                            this.jiangyu_tongji.rainVag = d.PingJunJiangYu\r\n                            this.jiangyu_tongji.rainMax = d.ZuiDaJiangYu\r\n\r\n                        })\r\n                        this.cancelTableLoading(\"shuiqing\"); // 取消表格加载\r\n                    }\r\n                );\r\n            },\r\n            // 查询关系曲线表格\r\n            search_guanxiquxian() {\r\n                this.letTableLoading(\"guanxiquxian\");\r\n\r\n                // 传递参数\r\n                var body = {\r\n                    STCD: this.siteInfo.STCD,\r\n                    _page: this.table[\"guanxiquxian\"].currentPage || 1,\r\n                    _page_size: this.table[\"guanxiquxian\"].pageSizes || 20\r\n                };\r\n\r\n                // 如果有选择日期进行查询，根据表格类型传递参数\r\n                if (this.table.guanxiquxian.date) {\r\n                    body.YR = this.$FilterData.elDatePicker_Filter(\r\n                        this.table.guanxiquxian.date,\r\n                        \"onlyYear\"\r\n                    );\r\n                }\r\n\r\n                this.$GetData.Base_MonitoringSites(\r\n                    \"Z_Q_relation\",\r\n                    body,\r\n                    {\r\n                        default: true,\r\n                        myFilter: data => {\r\n                            data.map(val => {\r\n                                val.currentPage = body._page;\r\n                                val.pageSizes = body._page_size;\r\n                                return val;\r\n                            });\r\n                            return data;\r\n                        }\r\n                    },\r\n                    data => {\r\n                        this.setTableTotal(\"guanxiquxian\", data.total);\r\n                        this.setTableData(\"guanxiquxian\", data.data);\r\n                        this.cancelTableLoading(\"guanxiquxian\");\r\n                    }\r\n                );\r\n            },\r\n            // 设置表格总条数\r\n            setTableTotal(tableName, total) {\r\n                this.table[tableName].total = total;\r\n            },\r\n            // 表格加载中\r\n            letTableLoading(tableName) {\r\n                this.table[tableName].loading = true;\r\n            },\r\n            // 取消表格加载\r\n            cancelTableLoading(tableName) {\r\n                this.table[tableName].loading = false;\r\n            },\r\n            // 绘图\r\n            createChart_guanxiquxian(idName) {\r\n                let myChart = this.$echarts.init(document.getElementById(idName));\r\n\r\n                myChart.setOption({\r\n                    title: {\r\n                        // text: this.info.STNM\r\n                        // subtext: \"纯属虚构\"\r\n                    },\r\n                    grid: {\r\n                        x: '50%'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: \"axis\"\r\n                    },\r\n                    legend: {\r\n                        data: [\"流量\", \"水位\"]\r\n                    },\r\n                    toolbox: {\r\n                        show: true,\r\n                        feature: {\r\n                            mark: {show: true},\r\n                            dataView: {show: true, readOnly: false},\r\n                            magicType: {show: true, type: [\"line\", \"bar\"]},\r\n                            restore: {show: true},\r\n                            saveAsImage: {show: true}\r\n                        }\r\n                    },\r\n                    calculable: true,\r\n                    xAxis: [\r\n                        {\r\n                            type: \"category\",\r\n                            boundaryGap: false,\r\n                            data: [\r\n                                \"00:00-02:00\",\r\n                                \"02:00-04:00\",\r\n                                \"04:00-06:00\",\r\n                                \"06:00-08:00\",\r\n                                \"08:00-10:00\"\r\n                            ]\r\n                        }\r\n                    ],\r\n                    yAxis: [\r\n                        {\r\n                            name: \"流量 m³/s\",\r\n                            type: \"value\",\r\n                            axisLabel: {\r\n                                formatter: \"{value}\"\r\n                            }\r\n                        },\r\n                        {\r\n                            name: \"水位 m\",\r\n                            type: \"value\",\r\n                            axisLabel: {\r\n                                formatter: \"{value} \"\r\n                            }\r\n                        }\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: \"流量\",\r\n                            type: \"line\",\r\n                            data: [11, 11, 15, 13, 12, 13, 10],\r\n                            markLine: {\r\n                                data: [{type: \"average\", name: \"平均值\"}]\r\n                            }\r\n                        },\r\n                        {\r\n                            name: \"水位\",\r\n                            type: \"line\",\r\n                            data: [1, 4, 2, 5, 3, 2, 0],\r\n                            yAxisIndex: 1,\r\n                            markLine: {\r\n                                data: [{type: \"average\", name: \"平均值\"}],\r\n                                effect: {\r\n                                    show: false,\r\n                                    loop: true,\r\n                                    period: 15,\r\n                                    scaleSize: 10,\r\n                                    color: null,\r\n                                    shadowColor: null,\r\n                                    shadowBlur: null\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                });\r\n            },\r\n\r\n            // 制图\r\n            createChart_shuiqingshuju(id, tableType, data) {\r\n                var ele = document.getElementById(id);\r\n                if (data.length > 0) {\r\n                    // 雨情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n                    var echartData = this.$App.transform_YQ_data_into_ehart_data(data, tableType);\r\n\r\n\r\n                    // x轴\r\n                    // echartData.x.list = data.map((val, index, array) => {\r\n                    //   // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                    //   var time = val.DT;\r\n                    //   return time;\r\n                    // });\r\n                    echartData.x.list = echartData.x.list\r\n                    if (!this.chart.shuiqing) {\r\n                        this.chart.shuiqing = this.$echarts.init(ele);\r\n                    }\r\n                    this.chart.shuiqing.setOption({\r\n                        title: {\r\n                            text: echartData.chartName\r\n                        },\r\n                        grid: {\r\n                            x: '20%'\r\n                        },\r\n                        tooltip: {\r\n                            trigger: \"axis\"\r\n                        },\r\n                        legend: {\r\n                            data: [echartData.y1.name],\r\n                            y: \"bottom\"\r\n                        },\r\n                        toolbox: {\r\n                            show: true,\r\n                            feature: {\r\n                                mark: {show: true},\r\n                                magicType: {show: true, type: [\"line\", \"bar\"]},\r\n                                restore: {show: true},\r\n                                saveAsImage: {show: true}\r\n                            }\r\n                        },\r\n                        calculable: true,\r\n                        animation: true,\r\n                        xAxis: [\r\n                            {\r\n                                type: \"category\",\r\n                                // boundaryGap: false,\r\n                                data: echartData.x.list,\r\n                                axisTick: {\r\n                                    interval: parseInt(echartData.x.list.length / 4)\r\n                                    //     function (index, val) {\r\n                                    //     var listLength = echartData.x.list.length\r\n                                    //     if (listLength >= 4) {\r\n                                    //\r\n                                    //         var tick = Math.round(listLength / 4);\r\n                                    //         // console.log((index + 1) % tick === 0);\r\n                                    //         // console.log('1575listLength',listLength);\r\n                                    //         // console.log('1576tick',tick);\r\n                                    //         if ((index + 1) % tick === 0) {\r\n                                    //             return true;\r\n                                    //         } else {\r\n                                    //             return false;\r\n                                    //         }\r\n                                    //     } else {\r\n                                    //         return true\r\n                                    //     }\r\n                                    // },\r\n                                    ,\r\n                                    length: 10\r\n                                },\r\n                                axisLabel: {\r\n                                    interval: parseInt(echartData.x.list.length / 4)\r\n                                    //     function (index, val) {\r\n                                    //     var listLength = echartData.x.list.length\r\n                                    //     if (listLength >= 4) {\r\n                                    //         console.log(index);\r\n                                    //         var tick = Math.round(listLength / 4);\r\n                                    //         // console.log('1575listLength',listLength);\r\n                                    //         // console.log('1576tick',tick);\r\n                                    //         let a = (index + 1) % tick\r\n                                    //         console.log(a);\r\n                                    //         console.log((index + 1) % tick === 0);\r\n                                    //         if ((index + 1) % tick === 0) {\r\n                                    //             return true;\r\n                                    //         } else {\r\n                                    //             return false;\r\n                                    //         }\r\n                                    //     } else {\r\n                                    //         return true\r\n                                    //     }\r\n                                    // },\r\n                                    ,\r\n                                    rotate: 10,\r\n                                    margin: 16\r\n                                }\r\n                            }\r\n                        ],\r\n                        yAxis: [\r\n                            {\r\n                                name: `${echartData.y1.name} mm`,\r\n                                type: \"value\",\r\n                                axisLabel: {\r\n                                    formatter: \"{value} \"\r\n                                },\r\n                                // scale: true\r\n                                // max: echartData.y1.max,\r\n                                // min: echartData.y1.min\r\n                            },\r\n                            // {\r\n                            //   name: `${echartData.y2.name}m`,\r\n                            //   type: \"value\",\r\n                            //   axisLabel: {\r\n                            //     formatter: \"{value} \"\r\n                            //   },\r\n                            //   scale: true\r\n                            //   // max: echartData.y2.max,\r\n                            //   // min: echartData.y2.min\r\n                            // }\r\n                        ],\r\n                        series: [\r\n                            {\r\n                                name: echartData.y1.name,\r\n                                type: \"bar\",\r\n                                data: echartData.y1.list,\r\n\r\n                                itemStyle: {\r\n                                    //通常情况下：\r\n                                    normal: {\r\n                                        //每个柱子的颜色即为colorList数组里的每一项，如果柱子数目多于colorList的长度，则柱子颜色循环使用该数组\r\n                                        color: function (params) {\r\n\r\n                                            switch (echartData.chartName) {\r\n                                                case \"小时表\":\r\n                                                    if (params.data >= 25 && params.data < 50) return 'orange';\r\n                                                    if (params.data > 50) return 'red';\r\n                                                    return 'blue'\r\n                                                    break\r\n                                                case \"日表\":\r\n                                                    if (params.data >= 25 && params.data < 50) return 'orange';\r\n                                                    if (params.data > 50) return 'red';\r\n                                                    return 'blue'\r\n                                                    break\r\n                                                case \"月表\":\r\n                                                    if (params.data >= 100 && params.data < 250) return 'orange';\r\n                                                    if (params.data > 250) return 'red';\r\n                                                    return 'blue'\r\n                                                    break\r\n                                                case \"旬表\":\r\n                                                    if (params.data >= 100 && params.data < 250) return 'orange';\r\n                                                    if (params.data > 250) return 'red';\r\n                                                    return 'blue'\r\n                                                    break\r\n                                                case \"年表\":\r\n                                                    if (params.data >= 1400 && params.data < 1650) return 'orange';\r\n                                                    if (params.data > 1650) return 'red';\r\n                                                    return 'blue'\r\n                                                    break\r\n\r\n                                            }\r\n\r\n                                            //     var colorList = [\r\n                                            //         (() => {\r\n                                            //             if ( === '小时表') {\r\n                                            //                 if (params.data >= 25 && params.data < 50) return 'orange';\r\n                                            //                 if (params.data > 50) return 'red';\r\n                                            //                 return 'blue'\r\n                                            //             }\r\n                                            //         })(),\r\n                                            //         (() => {\r\n                                            //             if (echartData.chartName === '月表') {\r\n                                            //                 if (params.data >= 100 && params.data < 250) return 'orange';\r\n                                            //                 if (params.data > 250) return 'red';\r\n                                            //                 return 'blue'\r\n                                            //             }\r\n                                            //         })(),\r\n                                            //         (() => {\r\n                                            //             if (echartData.chartName === '年表') {\r\n                                            //                 if (params.data >= 1400 && params.data < 1650) return 'orange';\r\n                                            //                 if (params.data > 1650) return 'red';\r\n                                            //                 return 'blue'\r\n                                            //             }\r\n                                            //         })()\r\n                                            // ]\r\n                                            //     return colorList[params.dataIndex];\r\n                                        }\r\n                                    },\r\n                                }\r\n                            },\r\n                            // {\r\n                            //   name: echartData.y2.name,\r\n                            //   type: \"line\",\r\n                            //   data: echartData.y2.list,\r\n                            //   yAxisIndex: 1\r\n                            // },\r\n                            // {\r\n                            //   name: echartData.y3.name,\r\n                            //   type: \"bar\",\r\n                            //   data: echartData.y3.list,\r\n                            //   yAxisIndex: 1,\r\n                            //   barMaxWidth: 10\r\n                            // }\r\n                        ]\r\n                    });\r\n                    console.log(\"this.chart.shuiqing.setOption\",tableType)\r\n                }\r\n            },\r\n            // 加载站点数据\r\n            loadSiteData(data) {\r\n                this.siteInfo = data;\r\n            },\r\n            // 组件加载中\r\n            componentLoading() {\r\n                this.boxLoading = true;\r\n            },\r\n            // 取消组件加载\r\n            cancelComponentLoading() {\r\n                this.boxLoading = false;\r\n            },\r\n            // 处理页码切换_降雨数据\r\n            handleCurrentChange_shuiqing(index) {\r\n                this.table[\"shuiqing\"].currentPage = index;\r\n                this.search_yuqing(this.tableType);\r\n            },\r\n            // 处理页码切换_关系曲线\r\n            handleCurrentChange_guanxiquxian(index) {\r\n                this.table[\"guanxiquxian\"].currentPage = index;\r\n                this.search_guanxiquxian();\r\n            },\r\n            // 处理页码切换_特征雨量\r\n            handleCurrentChange_tezhengyuliang(index) {\r\n                this.table[\"tezhengyuliang\"].currentPage = index;\r\n                this.search_tezhengyuliang();\r\n            },\r\n            // 处理每页显示条数切换_降雨数据\r\n            handleSizeChange_shuiqing(pageSizes) {\r\n                this.table[\"shuiqing\"].pageSizes = pageSizes;\r\n                this.table[\"shuiqing\"].currentPage = 1;\r\n                this.search_yuqing(this.tableType);\r\n            },\r\n            // 处理每页显示条数切换_关系曲线\r\n            handleSizeChange_guanxiquxian(pageSizes) {\r\n                this.table[\"guanxiquxian\"].pageSizes = pageSizes;\r\n                this.table[\"guanxiquxian\"].currentPage = 1;\r\n                this.search_guanxiquxian();\r\n            },\r\n            // 处理每页显示条数切换_特征雨量\r\n            handleSizeChange_tezhengyuliang(pageSizes) {\r\n                this.table[\"tezhengyuliang\"].pageSizes = pageSizes;\r\n                this.table[\"tezhengyuliang\"].currentPage = 1;\r\n                this.search_tezhengyuliang();\r\n            },\r\n            // 分页过滤\r\n            pageFilter(currentPage, pageSizes, tableName) {\r\n                // 截取数组\r\n                var newList = this.table[tableName].Rows_filter.slice(\r\n                    (currentPage - 1) * pageSizes,\r\n                    currentPage * pageSizes\r\n                );\r\n\r\n                return newList;\r\n            },\r\n            // 水情历史数据表 当前正在激活的表头\r\n            setActiveColumns_shuiqing(tableType) {\r\n                console.log('********',tableType);\r\n                this.table.shuiqing.activeColumns = this.table.shuiqing.columns[tableType];\r\n                this.select.yuqing_select = tableType;\r\n            },\r\n            // 切换 水情历史数据表类型\r\n            tableTypeOnChange_shuiqing(tableType) {\r\n                console.log(tableType)\r\n                let tabName = ''\r\n                switch (tableType) {\r\n                    case 'hourTable':\r\n                        tabName = '小时';\r\n                        break\r\n                    case 'dayTable':\r\n                        tabName = '日';\r\n                        break\r\n                    case  'tenDaysTable':\r\n                        tabName = '旬';\r\n                        break\r\n                    case  'monthTable':\r\n                        tabName = '月';\r\n                        break\r\n                    case  'yearTable':\r\n                        tabName = '年'\r\n                }\r\n                this.biao_yuqing = tabName;\r\n                this.table[\"shuiqing\"].currentPage = 1;\r\n                this.table[\"shuiqing\"].date = null;\r\n                this.table[\"shuiqing\"].sort = null;\r\n                this.tableType = tableType;\r\n                this.setDatePickerType_shuiqing(tableType); // 设置日期时间选择器的类型\r\n                // this.select[\"yuqing_select\"] = tableType; // 设置选中的表\r\n                // this.setSelectOption_quickSearch(tableType); // 设置数据表快速查询选择框内容\r\n                this.setActiveColumns_shuiqing(tableType); // 设置水情历史数据表 当前激活的表头\r\n                this.table.shuiqing.loading = true; // 表格加载中\r\n                if (this[`setTableDefaultDate_yuqing_${tableType}`]) {\r\n                    this[`setTableDefaultDate_yuqing_${tableType}`]();\r\n                }\r\n                // 获取对应水情历史数据表的数据\r\n                this.search_yuqing(tableType);\r\n            },\r\n            // 设置降雨数据历史表默认查询日期\r\n            setTableDefaultDate_yuqing_historyTable() {\r\n                const end = new Date();\r\n                const start = eightPointOfTheDay();\r\n\r\n                var timeSlot = [start, end];\r\n\r\n                this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n                function eightPointOfTheDay() {\r\n                    var date = new Date();\r\n                    date.setHours(8);\r\n                    date.setMinutes(0);\r\n                    date.setSeconds(0);\r\n                    date.setMilliseconds(0);\r\n                    return date;\r\n                }\r\n            },\r\n            // 设置降雨数据小时表默认查询日期\r\n            setTableDefaultDate_yuqing_hourTable() {\r\n                const end = new Date();\r\n                const start = eightPointOfTheDay();\r\n                // console.log(end.getHours());\r\n\r\n\r\n                var timeSlot = [start, end];\r\n\r\n                this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n\r\n                function eightPointOfTheDay() {\r\n                    var date = new Date();\r\n                    date.setHours(8);\r\n                    date.setMinutes(0);\r\n                    date.setSeconds(0);\r\n                    date.setMilliseconds(0);\r\n                    return date;\r\n                }\r\n            },\r\n            // 设置降雨数据日表默认查询日期\r\n            setTableDefaultDate_yuqing_dayTable() {\r\n                const end = new Date();\r\n                const start = new Date();\r\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n\r\n                var timeSlot = [start, end];\r\n\r\n                this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n                function zeroPointOfTheDay() {\r\n                    var date = new Date();\r\n                    date.setHours(0);\r\n                    date.setMinutes(0);\r\n                    date.setSeconds(0);\r\n                    date.setMilliseconds(0);\r\n                    return date;\r\n                }\r\n            },\r\n            // 设置降雨数据旬表默认查询日期\r\n            setTableDefaultDate_yuqing_tenDaysTable() {\r\n                const end = new Date();\r\n                const start = new Date();\r\n                console.log(start.getTime());\r\n                if(start.getHours() < 8){\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30 * 6);\r\n                }\r\n                var timeSlot = [start, end];\r\n\r\n                this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n                function zeroPointOfTheDay() {\r\n                    var date = new Date();\r\n                    date.setHours(0);\r\n                    date.setMinutes(0);\r\n                    date.setSeconds(0);\r\n                    date.setMilliseconds(0);\r\n                    return date;\r\n                }\r\n            },\r\n            // 设置降雨数据月表默认查询日期\r\n            setTableDefaultDate_yuqing_monthTable() {\r\n                const end = new Date();\r\n                const start = new Date();\r\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 160);\r\n\r\n                var timeSlot = [start, end];\r\n\r\n                this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n                function zeroPointOfTheDay() {\r\n                    var date = new Date();\r\n                    date.setHours(0);\r\n                    date.setMinutes(0);\r\n                    date.setSeconds(0);\r\n                    date.setMilliseconds(0);\r\n                    return date;\r\n                }\r\n            },\r\n            // 设置降雨数据旬表默认查询日期\r\n            setTableDefaultDate_yuqing_tenDaysTable() {\r\n                const end = new Date();\r\n                const start = new Date();\r\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 180);\r\n\r\n                var timeSlot = [start, end];\r\n\r\n                this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n                function zeroPointOfTheDay() {\r\n                    var date = new Date();\r\n                    date.setHours(0);\r\n                    date.setMinutes(0);\r\n                    date.setSeconds(0);\r\n                    date.setMilliseconds(0);\r\n                    return date;\r\n                }\r\n            },\r\n            // 设置降雨数据旬表默认查询日期\r\n            setTableDefaultDate_yuqing_yearTable() {\r\n                const end = new Date();\r\n                const start = new Date();\r\n                console.log(start.getHours(),start.getTime());\r\n                if(start.getHours() < 8){\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30 * 12 * 5);\r\n                }\r\n\r\n                var timeSlot = [start, end];\r\n\r\n                this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n                function zeroPointOfTheDay() {\r\n                    var date = new Date();\r\n                    date.setHours(0);\r\n                    date.setMinutes(0);\r\n                    date.setSeconds(0);\r\n                    date.setMilliseconds(0);\r\n                    return date;\r\n                }\r\n            },\r\n            // 设置日期时间选择器的类型\r\n            setDatePickerType_shuiqing(tableType) {\r\n                var datePickerType;\r\n                switch (tableType) {\r\n                    case \"historyTable\":\r\n                        datePickerType = \"datetimerange\";\r\n                        break;\r\n                    case \"hourTable\":\r\n                        datePickerType = \"datetimerange\";\r\n                        break;\r\n                    case \"dayTable\":\r\n                        datePickerType = \"daterange\";\r\n                        break;\r\n                    case \"tenDaysTable\":\r\n                        datePickerType = \"monthrange\";\r\n                        break;\r\n                    case \"monthTable\":\r\n                        datePickerType = \"monthrange\";\r\n                        break;\r\n                    case \"yearTable\":\r\n                        datePickerType = \"yearrange\";\r\n                        this.table.shuiqing.start_year = new Date(new Date().valueOf() - 1000 * 60 * 60 * 24 * 365 * 5);\r\n                        this.table.shuiqing.end_year = new Date();\r\n                        break;\r\n                }\r\n                this.table[\"shuiqing\"].datePickerType = datePickerType;\r\n            },\r\n            // 设置数据表快速查询选择框内容\r\n            setSelectOption_quickSearch(tableType) {\r\n                this.select.activeQuickSearchList = this.select.quickSearch[tableType];\r\n                this.select.select = this.select.activeQuickSearchList[0]\r\n                    ? this.select.activeQuickSearchList[0].value\r\n                    : null; // 设置默认值为第一项\r\n            },\r\n            // 获取特征雨量表格的数据\r\n            getTableData_tezhengyuliang(\r\n                pageSizes,\r\n                currentPage,\r\n                body,\r\n                callback,\r\n                callback_beforeFilter\r\n            ) {\r\n                this.axios\r\n                    .get(\r\n                        `/guanqu/admin/ST_G_CQORD?_page_size=${pageSizes ||\r\n                        20}&_page=${currentPage || 1}`,\r\n                        {\r\n                            params: body\r\n                        }\r\n                    )\r\n                    .then(res => {\r\n                        if (typeof callback_beforeFilter == \"function\") {\r\n                            callback_beforeFilter({\r\n                                data: res.data.rows || [],\r\n                                total: res.data.total || 0\r\n                            });\r\n                        }\r\n                        console.log(\"tezhengyuliang\", res);\r\n                        // 降雨数据过滤\r\n                        var data = res.data.rows.map(val => {\r\n                            val.currentPage = this.table.shuiqing.currentPage; // 添加数据当前页码\r\n                            val.pageSizes = this.table.shuiqing.pageSizes; // 添加当前每页条数到数据\r\n                            val.TMMXQ = this.dateFilter(val.TMMXQ); // 日期过滤\r\n                            val.TMXQ = this.Z_Filter(val.TMXQ, 3); // 平均流量过滤\r\n                            val.YMXQZ = this.Z_Filter(val.YMXQZ); // 平均水位过滤\r\n                            val.WQ = this.Z_Filter(val.WQ, 3); // 小时累计水量过滤\r\n\r\n                            return val;\r\n                        });\r\n                        if (typeof callback == \"function\") {\r\n                            callback({\r\n                                data: data,\r\n                                total: res.data.total\r\n                            });\r\n                        }\r\n                    });\r\n            },\r\n            // 获取特征雨量预警信息表的数据\r\n            getTableData_tezhengyuqing_Alarm(body, callback, callback_beforeFilter) {\r\n                this.axios\r\n                    .get(`/guanqu/admin/ST_Canal_Alarm`, {\r\n                        params: body\r\n                    })\r\n                    .then(res => {\r\n                        var data = res.data.rows;\r\n                        if (typeof callback_beforeFilter == \"function\") {\r\n                            callback_beforeFilter(res);\r\n                        }\r\n                        // 降雨数据过滤\r\n                        var data = res.data.list.map(val => {\r\n                            val.Q = this.Z_Filter(val.Q, 3); // 流量过滤\r\n                            val.Z = this.Z_Filter(val.Z); // 水位过滤\r\n                            val.JYQ = this.Z_Filter(val.JYQ, 3); // 预警流量过滤\r\n                            val.JYZ = this.Z_Filter(val.JYZ); // 预警水位过滤\r\n\r\n                            return val;\r\n                        });\r\n                        if (typeof callback == \"function\") {\r\n                            callback(data);\r\n                        }\r\n                    });\r\n            },\r\n            // 更新 XX 表格的数据\r\n            setTableData(tableName, data) {\r\n                this.table[tableName].Rows_filter = data;\r\n            },\r\n            // 获取对应关系曲线数据表的数据\r\n            getTableData_guanxiquxian(callback) {\r\n                this.axios\r\n                    .get(`/guanqu/admin/ST_ZQRL_B`, {\r\n                        params: {\r\n                            STCD: this.info.STCD\r\n                        }\r\n                    })\r\n                    .then(res => {\r\n                        var data = res.data.rows;\r\n                        if (typeof callback == \"function\") {\r\n                            callback(data);\r\n                        }\r\n                    });\r\n            },\r\n            // 更新水情历史数据表的数据\r\n            setTableData_guanxiquxian(data) {\r\n                this.table.guanxiquxian.Rows_filter = data;\r\n            },\r\n            // 根据关联编号获取关联站点\r\n            getRelateSiteByRelateCode(callback) {\r\n                var RELATECODE = this.info.RELATECODE;\r\n                if (RELATECODE && RELATECODE != 0) {\r\n                    this.axios\r\n                        .get(`/guanqu/admin/ST_STBPRP_B`, {\r\n                            params: {\r\n                                RELATECODE: RELATECODE\r\n                            }\r\n                        })\r\n                        .then(res => {\r\n                            var data = res.data.rows;\r\n                            if (typeof callback == \"function\") {\r\n                                callback(data);\r\n                            }\r\n                        });\r\n                }\r\n            },\r\n            // 根据行政区划编码获取行政区划\r\n            getCompartmentByADDVCD(callback) {\r\n                var ADDVCD = this.info.rowinfo.ADDVCD;\r\n                if (ADDVCD && ADDVCD != \"\") {\r\n                    this.axios\r\n                        .get(`/guanqu/admin/WRP_AD_B`, {\r\n                            params: {\r\n                                AD_CD: ADDVCD\r\n                            }\r\n                        })\r\n                        .then(res => {\r\n                            var data = res.data.rows;\r\n                            if (typeof callback == \"function\") {\r\n                                callback(data);\r\n                            }\r\n                        });\r\n                }\r\n            },\r\n            // 特征雨量表格查询\r\n            search_tezhengyuliang() {\r\n                this.letTableLoading(\"tezhengyuliang\"); // 表格加载中\r\n                // 传递站码参数\r\n                var body = {\r\n                    STCD: this.siteInfo.STCD,\r\n                    _page: this.table.tezhengyuliang.currentPage,\r\n                    _page_size: this.table.tezhengyuliang.pageSizes\r\n                };\r\n\r\n                if (this.table.tezhengyuliang.date) {\r\n                    body.YR = this.$FilterData.elDatePicker_Filter(\r\n                        this.table.tezhengyuliang.date,\r\n                        \"maxQTable\"\r\n                    );\r\n                }\r\n\r\n                this.$GetData.Survey_History_QDSQ(\r\n                    \"maxQTable\",\r\n                    body,\r\n                    {\r\n                        default: true,\r\n                        myFilter: data => {\r\n                            data.map(val => {\r\n                                val.currentPage = body._page;\r\n                                val.pageSizes = body._page_size;\r\n                                return val;\r\n                            });\r\n                            return data;\r\n                        }\r\n                    },\r\n                    data => {\r\n                        this.setTableTotal(\"tezhengyuliang\", data.total); // 根据返回的total数量, 设置表格总条数\r\n                        this.setTableData(\"tezhengyuliang\", data.data); // 更新特征降雨数据表的数据\r\n                        this.cancelTableLoading(\"tezhengyuliang\"); // 取消表格加载\r\n                    }\r\n                );\r\n\r\n                // // 获取特征雨量表格数据\r\n                // this.getTableData_tezhengyuliang(pageSizes, currentPage, body, data => {\r\n\r\n                // });\r\n            },\r\n            // 设置特征雨量预警信息数据\r\n            setAlarmData_tezhengyuliang(data) {\r\n                this.table.tezhengyuliang.alarmData = data;\r\n            },\r\n            // 处理日期时间选择器确定事件_降雨数据\r\n            handleDatePickerChange(item) {\r\n                this.table.shuiqing.currentPage = 1;\r\n                this.search_yuqing(this.tableType);\r\n            },\r\n            handleDatePickerChange_tezhengyuliang() {\r\n                this.table.tezhengyuliang.currentPage = 1;\r\n                this.search_tezhengyuliang();\r\n            },\r\n            handleDatePickerChange_guanxiquxian(item) {\r\n                console.log(\"item\", item);\r\n                this.search_guanxiquxian();\r\n            },\r\n            // 设置 xx表格 时间选择器值\r\n            setTableDate(tableName, val) {\r\n                // 判断当前时间是否小于8时\r\n                if(val[1].getHours() < 8){\r\n                    val[0].setTime(val[0] - 3600 * 1000 * 24);\r\n                }\r\n                // val[0].setTime(val[0] - 3600 * 1000 * 24);\r\n                console.log('++++++++++++',val[0].getHours());\r\n\r\n                this.table[tableName].date = val;\r\n            },\r\n            // 特征水情表默认查询时间\r\n            setTableDefaultDate_tezhengyuliang() {\r\n                const end = new Date();\r\n                const start = new Date();\r\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 5);\r\n\r\n                var timeSlot = [start, end];\r\n\r\n                this.setTableDate(\"tezhengyuliang\", timeSlot);\r\n            },\r\n            // 排序\r\n            sort_change_shuiqing(item) {\r\n                this.table.shuiqing.sort = item;\r\n\r\n                this.search_yuqing(this.tableType);\r\n            }\r\n        },\r\n        mounted() {\r\n            // 组件加载中\r\n            this.componentLoading();\r\n            // 获取详情数据\r\n            this.axios\r\n                .get(`/guanqu/table/details?ID=${this.info.rowinfo.STCD}&pk=STCD`)\r\n                .then(res => {\r\n                    // 站点信息\r\n                    // 根据关联编号获取关联站点\r\n                    this.getRelateSiteByRelateCode(data => {\r\n                        console.log(\"RelateSite\", data);\r\n                    });\r\n                    // 根据行政区划码获取行政区划名\r\n                    this.getCompartmentByADDVCD(data => {\r\n                        this.siteInfo.AD_NM = data[0].AD_NM;\r\n                    });\r\n\r\n\r\n                    // 根据河流编码获取河流名\r\n                    this.$GetData.Base_R_I(\r\n                        {\r\n                            RVCD: this.info.rowinfo.RVCD\r\n                        },\r\n                        true,\r\n                        data => {\r\n                            this.siteInfo.RVCD = data.data[0].RVNM;\r\n                        }\r\n                    );\r\n\r\n                    // 根据流域编码获取流域名\r\n                    this.$GetData.Base_B_I(\r\n                        {\r\n                            CTCD: this.info.rowinfo.CTCD\r\n                        },\r\n                        true,\r\n                        data => {\r\n                            this.siteInfo.CTCD = data.data[0].CTNM;\r\n                        }\r\n                    );\r\n\r\n                    // 加载站点数据\r\n                    this.loadSiteData(res.data);\r\n                    // 加载取消\r\n                    this.cancelComponentLoading();\r\n                    // 降雨数据\r\n                    console.log('+++++++', this.info);\r\n                    this.tableTypeOnChange_shuiqing(this.info.rowinfo.tableType.yq); // 设置 默认的水情历史数据表\r\n                    // 特征雨量最大流量表数据\r\n                    if (this.setTableDefaultDate_tezhengyuliang) {\r\n                        this.setTableDefaultDate_tezhengyuliang(); // 默认查询日期\r\n                    }\r\n                    this.search_tezhengyuliang();\r\n                    // 特征雨量预警信息表数据\r\n                    this.getTableData_tezhengyuqing_Alarm(\r\n                        {\r\n                            STCD: this.siteInfo.STCD\r\n                        },\r\n                        data => {\r\n                            this.setAlarmData_tezhengyuliang(data[0]);\r\n                        }\r\n                    );\r\n                });\r\n        }\r\n    };\r\n</script>\r\n\r\n\r\n<style lang=\"less\" scope>\r\n    @import \"./common/common.less\";\r\n\r\n    .drawer-profile {\r\n        font-size: @siteInfoFontSize;\r\n        position: relative;\r\n\r\n        .outPutButton {\r\n            position: absolute;\r\n            right: -10px;\r\n            top: -45px;\r\n            z-index: 2;\r\n        }\r\n\r\n        .row_header {\r\n            text-align: center;\r\n            font-size: 1.5625rem;\r\n            font-weight: 700;\r\n        }\r\n\r\n        .relationRow {\r\n            margin-top: 1.25rem;\r\n\r\n            button {\r\n                margin-right: 1.25rem;\r\n            }\r\n        }\r\n\r\n        .checkBoxItem {\r\n            margin: 0 0.9375rem;\r\n        }\r\n    }\r\n</style>\r\n"]}]}