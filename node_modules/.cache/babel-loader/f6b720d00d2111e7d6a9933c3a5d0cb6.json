{"remainingRequest":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\visualplace\\zhihuiguanqu\\src\\table\\table-sksq\\table-history.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\src\\table\\table-sksq\\table-history.vue","mtime":1679908614210},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\babel.config.js","mtime":1577669403468},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport _JSON$stringify from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\";\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\nimport TABLECHART from \"@/table/table-sksq/table-chart.vue\";\nimport App from \"@/App.vue\";\nexport default {\n  data: function data() {\n    return {\n      loading: false,\n      theight: window.innerHeight - 330,\n      chartheight: window.innerHeight - 310 > 600 ? 600 : window.innerHeight - 310,\n      qudao: true,\n      xingzhengquhua: false,\n      show1: true,\n      Menu: {\n        show_Controller: false\n      },\n      dialogwidth: 600 / window.innerWidth * 100 + \"%\",\n      chartdetail: '',\n      //断面特征弹框标题\n      detailVisible: false,\n      //是否显示弹框\n      detailitem: {\n        itemshow: false\n      },\n      //弹框对象\n      span1: '19',\n      span2: '5',\n      select: {\n        // 日期选择器绑定值\n        shuiqing_datePicker: null,\n        // 水位数据历史表\n        shuiqingList: [{\n          value: \"historyTable\",\n          size: \"small\",\n          label: \"历史水情\"\n        }, {\n          value: \"hourTable\",\n          size: \"small\",\n          label: \"小时水情\"\n        }, {\n          value: \"dayTable\",\n          size: \"small\",\n          label: \"日水情\"\n        }, {\n          value: \"monthTable\",\n          size: \"small\",\n          label: \"月水情\"\n        }],\n        // 水位数据历史表绑定值\n        shuiqing_select: \"historyTable\"\n      },\n      table: {\n        // 水情\n        shuiqing: {\n          // 表头设置\n          columns: {\n            // 历史表\n            historyTable: [{\n              title: \"时间\",\n              key: \"tm\",\n              width: 135,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库水位\",\n              width: 90,\n              key: \"RZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 90,\n              title: \"库容\",\n              key: \"W\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 105,\n              title: \"入库流量\",\n              key: \"INQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 105,\n              title: \"出库流量\",\n              key: \"OTQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }],\n            // 小时表\n            hourTable: [{\n              title: \"时间\",\n              key: \"dt\",\n              width: 135,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库水位\",\n              width: 90,\n              key: \"RZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 90,\n              title: \"库容\",\n              key: \"HW\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, // {\n            //   title: \"库下水位(m)\",\n            //   width: 150,\n            //   key: \"BLRZ\",\n            //   align: \"center\",\n            //   sortable: \"custom\"\n            // },\n            {\n              width: 105,\n              title: \"入库流量\",\n              key: \"INQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 110,\n              title: \"出库流量\",\n              key: \"OTQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }],\n            // 日表\n            dayTable: [{\n              title: \"时间\",\n              key: \"tm\",\n              width: 120,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库水位\",\n              width: 90,\n              key: \"RZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 90,\n              title: \"库容\",\n              key: \"DW\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, // {\n            //   title: \"库下水位(m)\",\n            //   width: 150,\n            //   key: \"BLRZ\",\n            //   align: \"center\",\n            //   sortable: \"custom\"\n            // },\n            {\n              width: 105,\n              title: \"入库流量\",\n              key: \"INQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 105,\n              title: \"出库流量\",\n              key: \"OTQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }],\n            // 月表\n            monthTable: [{\n              title: \"时间\",\n              key: \"dt\",\n              width: 100,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"库水位\",\n              width: 90,\n              key: \"RZ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 90,\n              title: \"库容\",\n              key: \"MW\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, // {\n            //   title: \"库下水位(m)\",\n            //   width: 150,\n            //   key: \"BLRZ\",\n            //   align: \"center\",\n            //   sortable: \"custom\"\n            // },\n            {\n              width: 105,\n              title: \"入库流量\",\n              key: \"INQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 105,\n              title: \"出库流量\",\n              key: \"OTQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }]\n          },\n          // 正在激活的表头\n          activeColumns: [],\n          // 表体内容\n          Rows: [],\n          // 过滤后的表体内容\n          Rows_filter: [],\n          // 日期时间选择器的选项配置\n          datePickerOptions: {\n            historyTable: {\n              shortcuts: [{\n                text: \"最近6小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 6);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近12小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 12);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近24小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近36小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 36);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近72小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 72);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }]\n            },\n            hourTable: {\n              shortcuts: [{\n                text: \"最近6小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 6);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近12小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 12);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近24小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近36小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 36);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近72小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 72);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }]\n            },\n            dayTable: {\n              shortcuts: [{\n                text: \"最近10天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 10);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近15天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 15);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近30天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近60天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 60);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近90天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }]\n            },\n            monthTable: {\n              shortcuts: []\n            }\n          },\n          // 日期时间选择器类型\n          datePickerType: \"date\",\n          // 日期时间选择器值\n          date: null,\n          // 排序\n          sort: null,\n          // 表格是否加载中\n          loading: false,\n          // 总条数\n          total: 0,\n          // 当前页\n          currentPage: 1,\n          // 每页显示数量\n          pageSizes: 20,\n          // 表格高度\n          height: 430\n        }\n      },\n      Treedata: [],\n      expandedarray: [],\n      filterTreeData: [],\n      GD: '',\n      data1: [],\n      data2: [],\n      date: '',\n      STinfo: {},\n      searchs: \"\",\n      siteno: '',\n      timesearch: '',\n      CZMC: '',\n      echarts: {\n        TM: [],\n        Q: [],\n        UPZ: [],\n        DWZ: []\n      },\n      form: {\n        searchmsg: '',\n        date: '',\n        field: ''\n      },\n      searchmsg: '',\n      MaxY1: 0,\n      MaxY2: 0,\n      MinY1: 0,\n      MinY2: 0,\n      list_input: {\n        total: 100,\n        pagesize: 50,\n        pagesizeopts: [10, 20, 50, 75, 100, 200],\n        current: 1\n      },\n      yujingdata: {\n        A_ZCFWL: '',\n        A_XXFWL: ''\n      }\n    };\n  },\n  // 引入过滤方法到此组件\n  mixins: [FilterMethods, GetDataMethods],\n  components: {\n    TABLECHART: TABLECHART\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    //获取行政区划树\n    this.axios.get(\"/guanqu/info/xzqhtree?TYPE=6\").then(function (res) {\n      _this2.Treedata = res.data;\n\n      _this2.expandedarray.push(_this2.Treedata[0].id);\n\n      _this2.expandedarray.push(_this2.Treedata[0].children[0].id);\n\n      var stcd = _this2.Treedata[0].children[0].children[0].value;\n      _this2.searchs = stcd;\n      _this2.siteno = _this2.Treedata[0].children[0].children[0].label;\n      _this2.table[\"shuiqing\"].currentPage = 1;\n      _this2.table[\"shuiqing\"].date = null;\n      _this2.table[\"shuiqing\"].sort = null;\n\n      _this2.setDatePickerType_shuiqing(_this2.select.shuiqing_select); // 设置日期时间选择器的类型\n\n\n      _this2.setActiveColumns_shuiqing(_this2.select.shuiqing_select); // 设置水情历史数据表 当前激活的表头\n\n\n      _this2.table.shuiqing.loading = true; // 表格加载中\n\n      if (_this2[\"setTableDefaultDate_shuiqing_\".concat(_this2.select.shuiqing_select)]) {\n        _this2[\"setTableDefaultDate_shuiqing_\".concat(_this2.select.shuiqing_select)]();\n      }\n\n      _this2.set_SKSQ_alarmInfo(_this2.searchs, function (data) {\n        _this2.Reload();\n      });\n    });\n  },\n  methods: {\n    // 设置 xx表格 时间选择器值\n    setTableDate: function setTableDate(tableName, val) {\n      this.table[tableName].date = val;\n    },\n    sort_change: function sort_change(column) {\n      console.log(column);\n\n      if (column.order == 'ascending') {\n        this.form.field = column.prop;\n        this.ReloadBysort();\n      }\n\n      if (column.order == 'descending') {\n        this.form.field = column.prop + ' desc';\n        this.ReloadBysort();\n      }\n\n      if (column.order == null) {\n        this.form.field = '';\n        this.ReloadBysort();\n      }\n    },\n    Menu_toggle: function Menu_toggle() {\n      this.Menu.show_Controller = !this.Menu.show_Controller;\n      this.show1 = !this.show1;\n\n      if (this.show1 == true) {\n        this.span1 = '19';\n        this.span2 = '5';\n        this.data2 = {};\n        this.Reload();\n      } else {\n        this.span1 = '24';\n        this.span2 = '0';\n        this.data2 = {};\n        this.Reload();\n      }\n    },\n    // 监听动态参数事件处理函数\n    test1: function test1(agmt) {\n      this.Menu.show_Controller = !agmt; // this.show1 = agmt;\n\n      if (agmt) {\n        if (this.span1 == '24') {\n          this.span2 = '0';\n          this.asyncExecute();\n          return;\n        }\n\n        this.span1 = '19';\n        this.span2 = '5';\n        this.data2 = {};\n        this.asyncExecute();\n      } else {\n        if (this.span1 == '24') {\n          this.span2 = '0';\n          this.asyncExecute();\n          return;\n        }\n\n        this.span1 = '19';\n        this.span2 = '5';\n        this.data2 = {};\n        this.asyncExecute();\n      }\n    },\n    // 异步刷新，重新绘图\n    asyncExecute: function asyncExecute() {\n      setTimeout(this.Reload, 100);\n    },\n    filterNode: function filterNode(value, Treedata, node) {\n      if (!value) {\n        this.filterTreeData.push(Treedata);\n        return true;\n      }\n\n      if (Treedata.label.indexOf(value) !== -1) {\n        this.filterTreeData.push(Treedata);\n        return true;\n      } else {\n        if (this.filterTreeData.length == 0) {\n          return false;\n        } else {\n          var nodedata = this.filterTreeData[this.filterTreeData.length - 1];\n\n          if (nodedata.level == 3) {\n            return false;\n          } else {\n            if (nodedata.level >= Treedata.level) {\n              return false;\n            } else {\n              var parent = Treedata.parent;\n\n              if (parent.indexOf(nodedata.value) > -1) {\n                return true;\n              } else {\n                return false;\n              }\n            }\n          }\n        }\n      }\n    },\n    xzqh_tree: function xzqh_tree(data) {\n      var _this3 = this;\n\n      console.log(data);\n\n      if (data.level == 3) {\n        this.searchs = data.value;\n        this.siteno = data.label;\n        this.set_SKSQ_alarmInfo(this.searchs, function (data) {\n          _this3.Reload();\n        });\n      }\n    },\n    search: function search() {\n      var _this4 = this;\n\n      this.filterTreeData = [];\n      this.$refs.tree.filter(this.searchmsg);\n\n      if (this.searchmsg != '') {\n        this.filterTreeData.some(function (val, index) {\n          if (index == 0 && val.level == 1) {\n            _this4.expandedarray = [val.id, val.children[0].id];\n            _this4.searchs = val.children[0].children[0].value;\n            _this4.siteno = val.children[0].children[0].label;\n            return true;\n          } else if (index == 0 && val.level == 2) {\n            _this4.expandedarray = [val.id];\n            _this4.searchs = val.children[0].value;\n            _this4.siteno = val.children[0].label;\n            return true;\n          } else if (index == 0 && val.level == 3) {\n            _this4.searchs = val.value;\n            _this4.siteno = val.label;\n            return true;\n          }\n        });\n        this.set_SKSQ_alarmInfo(this.searchs, function (data) {\n          _this4.Reload();\n        });\n      } else {\n        this.$refs.tree.root.childNodes.forEach(function (e) {\n          e.expanded = false;\n        });\n        this.expandedarray = [this.Treedata[0].id, this.Treedata[0].children[0].id];\n        this.searchs = this.Treedata[0].children[0].children[0].value;\n        this.siteno = this.Treedata[0].children[0].children[0].label;\n        this.set_SKSQ_alarmInfo(this.searchs, function (data) {\n          _this4.Reload();\n        });\n      }\n    },\n    handleDatePickerChange: function handleDatePickerChange() {\n      this.table.shuiqing.currentPage = 1;\n      this.Reload();\n    },\n    timechange: function timechange() {\n      console.log(this.form.date);\n      this.Reload();\n    },\n    cellclick: function cellclick() {\n      console.log(_JSON$stringify(this.STinfo));\n\n      if (_JSON$stringify(this.STinfo) == \"{}\") {\n        this.$Message.warning('请先选择站点');\n      } else {\n        if (this.STinfo.bj) this.STinfo.STCD = this.STinfo.canal_code;\n        var evt = new Object();\n        evt.graphic = new Object();\n        evt.graphic.attributes = this.STinfo;\n        evt.graphic.attributes.STNM = this.CZMC;\n        evt.graphic.attributes.itype = \"shuikushuiqing\";\n        evt.graphic.attributes.rowinfo = JSON.parse(_JSON$stringify(this.STinfo));\n        evt.graphic.attributes.rowinfo.tableType = {\n          sksq: \"historyTable\"\n        };\n        var v = new Object();\n        v.itype = \"shuikushuiqing\";\n        console.log(\"evt\", evt);\n        this.$App.showDrawer(evt, v);\n      } // var evt = new Object();\n      // evt.graphic = new Object();\n      // evt.graphic.attributes = this.data1[0];\n      // evt.graphic.attributes.itype = \"zhafashuiqing\";\n      // evt.graphic.attributes.rowinfo = JSON.parse(JSON.stringify(this.data1[0]))\n      // evt.graphic.attributes.rowinfo.tableType = {\n      //   qdsq: \"historyTable\"\n      // };\n      // var v = new Object;\n      // v.itype = \"zhafashuiqing\";\n      // console.log(\"evt\",evt);\n      // this.$App.showDrawer(evt, v);\n\n    },\n    drawchart: function drawchart() {\n      var achart = this.$echarts.init(this.$refs.achart);\n      console.log(achart);\n      achart.resize();\n      achart.setOption({\n        title: {\n          text: this.data2.chartName\n        },\n        tooltip: {\n          trigger: \"axis\"\n        },\n        legend: {\n          data: [\"库水位\", \"库容\"],\n          bottom: -5\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {\n              show: true\n            },\n            magicType: {\n              show: true,\n              type: [\"line\", \"bar\"]\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        axisPointer: {\n          link: {\n            xAxisIndex: 'all'\n          }\n        },\n        grid: [{\n          left: 38,\n          right: this.data2.right,\n          height: '34%'\n        }, {\n          left: 38,\n          right: this.data2.right,\n          top: '59%',\n          height: '34%'\n        }],\n        xAxis: [{\n          boundaryGap: false,\n          data: this.data2.x.list\n        }, {\n          gridIndex: 1,\n          boundaryGap: false,\n          data: this.data2.x.list,\n          position: 'bottom'\n        }],\n        yAxis: [{\n          name: '库水位(m)',\n          type: \"value\",\n          minInterval: 1,\n          min: this.data2.y1.min,\n          max: this.data2.y1.max\n        }, {\n          gridIndex: 1,\n          name: this.data2.y4.name + '(万m³)',\n          type: \"value\",\n          minInterval: 1,\n          min: this.data2.y4.min,\n          max: this.data2.y4.max\n        }],\n        series: [{\n          name: \"库水位\",\n          type: \"line\",\n          yAxisIndex: 0,\n          data: this.data2.y1.list,\n          showSymbol: false,\n          smooth: true,\n          itemStyle: {\n            normal: {\n              color: '#6C84CE'\n            }\n          },\n          areaStyle: {},\n          markLine: {\n            symbol: 'none',\n            itemStyle: {\n              normal: {\n                lineStyle: {\n                  type: 'solid',\n                  color: 'red'\n                }\n              }\n            },\n            data: this.data2.markdata\n          }\n        }, {\n          name: this.data2.y4.name,\n          type: \"line\",\n          xAxisIndex: 1,\n          yAxisIndex: 1,\n          data: this.data2.y4.list,\n          showSymbol: false,\n          smooth: true,\n          itemStyle: {\n            normal: {\n              color: '#91CC75'\n            }\n          },\n          areaStyle: {},\n          markLine: {\n            symbol: 'none',\n            itemStyle: {\n              normal: {\n                lineStyle: {\n                  type: 'solid',\n                  color: 'red'\n                }\n              }\n            },\n            data: this.data2.markdata2\n          }\n        }]\n      });\n    },\n    err: function err() {\n      this.$Message.warning('该功能还在开发中...');\n    },\n    // 设置水库水情预警信息\n    set_SKSQ_alarmInfo: function set_SKSQ_alarmInfo(STCD, callback) {\n      var _this5 = this;\n\n      this.$GetData.Survey_History_SKSQ(\"alarmTable\", {\n        STCD: STCD\n      }, true, function (data) {\n        var yujingdata = data.data[0];\n        _this5.yujingdata.FWL = yujingdata.FWL;\n        _this5.yujingdata.FWL79 = yujingdata.FWL79;\n        _this5.yujingdata.SJWL = yujingdata.SJWL;\n        _this5.yujingdata.JYWL = yujingdata.JYWL;\n        _this5.yujingdata.XHWL = yujingdata.XHWL;\n        _this5.yujingdata.ZCWL = yujingdata.ZCWL;\n\n        _this5.axios.get(\"/guanqu/alarm/tzkrinfo?STCD=\".concat(STCD)).then(function (res) {\n          var tzkr = res.data;\n          _this5.yujingdata.FLDCP = tzkr.fldcp;\n          _this5.yujingdata.DDCP = tzkr.ddcp;\n          _this5.yujingdata.TTCP = tzkr.ttcp;\n          callback(yujingdata);\n        });\n      });\n    },\n    // 切换 水情历史数据表类型\n    tableTypeOnChange_shuiqing: function tableTypeOnChange_shuiqing(tableType) {\n      this.table[\"shuiqing\"].currentPage = 1;\n      this.table[\"shuiqing\"].sort = null;\n      this.table[\"shuiqing\"].date = null;\n      this.setDatePickerType_shuiqing(tableType); // 设置日期时间选择器的类型\n\n      this.setActiveColumns_shuiqing(tableType); // 设置水情历史数据表 当前激活的表头\n\n      if (this[\"setTableDefaultDate_shuiqing_\".concat(tableType)]) {\n        this[\"setTableDefaultDate_shuiqing_\".concat(tableType)]();\n      } // 获取对应水情历史数据表的数据\n\n\n      this.Reload();\n    },\n    // 水情历史数据表 当前正在激活的表头\n    setActiveColumns_shuiqing: function setActiveColumns_shuiqing(tableType) {\n      this.table.shuiqing.activeColumns = this.table.shuiqing.columns[tableType];\n      this.select.shuiqing_select = tableType;\n    },\n    // 设置水位数据历史表默认查询日期\n    setTableDefaultDate_shuiqing_historyTable: function setTableDefaultDate_shuiqing_historyTable() {\n      var end = new Date();\n      var start = zeroPointOfTheDay();\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置水位数据小时表默认查询日期\n    setTableDefaultDate_shuiqing_hourTable: function setTableDefaultDate_shuiqing_hourTable() {\n      var end = new Date();\n      var start = zeroPointOfTheDay();\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置水位数据日表默认查询日期\n    setTableDefaultDate_shuiqing_dayTable: function setTableDefaultDate_shuiqing_dayTable() {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置水位数据月表默认查询日期\n    setTableDefaultDate_shuiqing_monthTable: function setTableDefaultDate_shuiqing_monthTable() {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 160);\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置日期时间选择器的类型\n    setDatePickerType_shuiqing: function setDatePickerType_shuiqing(tableType) {\n      var datePickerType;\n\n      switch (tableType) {\n        case \"historyTable\":\n          datePickerType = \"datetimerange\";\n          break;\n\n        case \"hourTable\":\n          datePickerType = \"datetimerange\";\n          break;\n\n        case \"dayTable\":\n          datePickerType = \"daterange\";\n          break;\n\n        case \"monthTable\":\n          datePickerType = \"monthrange\";\n          break;\n      }\n\n      this.table[\"shuiqing\"].datePickerType = datePickerType;\n    },\n    // 表格加载中\n    letTableLoading: function letTableLoading(tableName) {\n      this.table[tableName].loading = true;\n    },\n    // 取消表格加载\n    cancelTableLoading: function cancelTableLoading(tableName) {\n      this.table[tableName].loading = false;\n    },\n    ReloadBysort: function ReloadBysort() {\n      var _this6 = this;\n\n      var tableType = this.select.shuiqing_select;\n      this.letTableLoading(\"shuiqing\"); // 表格加载中\n\n      console.log('+++++++++++++' + tableType); // 传递参数\n\n      var body = {\n        STCD: this.searchs,\n        _page: this.list_input.current,\n        _page_size: this.list_input.pagesize\n      }; // 如果有选择排序，则传递排序参数\n\n      if (this.form.field != null && this.form.field != '') {\n        body._orderby = this.form.field;\n      } // 如果有选择日期进行查询，根据表格类型传递参数\n\n\n      if (this.table.shuiqing.date) {\n        switch (tableType) {\n          case \"historyTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2];\n            break;\n\n          case \"dayTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1].substr(0, 10);\n            body.Time_max = DTT[2].substr(0, 10);\n            break;\n\n          case \"hourTable\":\n            console.log('~~~~~~~~~~~~~~~~~~~~~~~' + tableType);\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2];\n            break;\n\n          case \"monthTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date, \"monthTable\").split(\",\");\n            body.Time_min = DTT[1].substring(0, 7);\n            body.Time_max = DTT[2].substring(0, 7);\n            break;\n        }\n      } // 获取水库水情历史数据\n\n\n      this.$GetData.Survey_History_SKSQ(tableType, body, {\n        default: true,\n        myFilter: function myFilter(data) {\n          data.map(function (val) {\n            val.currentPage = body._page;\n            val.pageSizes = body._page_size;\n            return val;\n          });\n          return data;\n        }\n      }, function (data) {\n        _this6.table.shuiqing.Rows_filter = data.data;\n        _this6.list_input.total = data.total;\n      });\n    },\n    Reload: function Reload() {\n      var _this7 = this;\n\n      var tableType = this.select.shuiqing_select;\n      this.letTableLoading(\"shuiqing\"); // 表格加载中\n\n      console.log('+++++++++++++' + tableType); // 传递参数\n\n      var body = {\n        STCD: this.searchs,\n        _page: this.list_input.current,\n        _page_size: this.list_input.pagesize\n      }; // 如果有选择排序，则传递排序参数\n\n      if (this.form.field != null && this.form.field != '') {\n        body._orderby = _this.form.field;\n      } // 如果有选择日期进行查询，根据表格类型传递参数\n\n\n      if (this.table.shuiqing.date) {\n        switch (tableType) {\n          case \"historyTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2];\n            break;\n\n          case \"dayTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1].substr(0, 10);\n            body.Time_max = DTT[2].substr(0, 10);\n            break;\n\n          case \"hourTable\":\n            console.log('~~~~~~~~~~~~~~~~~~~~~~~' + tableType);\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2];\n            break;\n\n          case \"monthTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date, \"monthTable\").split(\",\");\n            body.Time_min = DTT[1].substring(0, 7);\n            body.Time_max = DTT[2].substring(0, 7);\n            break;\n        }\n      } // 获取水库水情历史数据\n\n\n      this.$GetData.Survey_History_SKSQ(tableType, body, {\n        default: true,\n        myFilter: function myFilter(data) {\n          data.map(function (val) {\n            val.currentPage = body._page;\n            val.pageSizes = body._page_size;\n            return val;\n          });\n          return data;\n        }\n      }, function (data) {\n        _this7.table.shuiqing.Rows_filter = data.data;\n        _this7.list_input.total = data.total;\n        body._page_size = 999999999;\n        body._page = 1;\n\n        _this7.$GetData.Survey_History_SKSQ(tableType, body, {\n          default: true,\n          myFilter: function myFilter(data) {\n            data.map(function (val) {\n              val.currentPage = body._page;\n              val.pageSizes = body._page_size;\n              return val;\n            });\n            return data;\n          }\n        }, function (chartData) {\n          _this7.data2 = chartData.data;\n\n          if (_this7.data2 == null || _this7.data2.length == 0) {\n            return;\n          }\n\n          _this7.data2 = _this7.$App.transform_SKSQ_data_into_ehart_data(_this7.data2, tableType, true); // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n\n          console.log(_this7.data2);\n          _this7.data2.markdata = [];\n          _this7.data2.markdata2 = [];\n          var swmax = Math.ceil(FilterMethods.methods.get_echart_max(_this7.data2.y1.list));\n          var y1max = Math.ceil(_parseFloat(_this7.yujingdata.XHWL)),\n              y1min = Math.floor(FilterMethods.methods.get_echart_min(_this7.data2.y1.list));\n\n          if (swmax > y1max) {\n            _this7.data2.y1.max = swmax;\n          } else {\n            _this7.data2.y1.max = y1max;\n          }\n\n          _this7.data2.y1.min = y1min;\n\n          var mintime = _this7.data2.x.list[0].slice(0, 10),\n              maxtime = _this7.data2.x.list[_this7.data2.x.list.length - 1].slice(0, 10);\n\n          var minmonth = mintime.split(\"-\")[1],\n              maxmonth = maxtime.split(\"-\")[1];\n          _this7.data2.y1.markval2 = _this7.yujingdata.XHWL;\n\n          if (_parseInt(minmonth) >= 7 && _parseInt(minmonth) <= 9 || _parseInt(maxmonth) >= 7 && _parseInt(maxmonth) <= 9) {\n            _this7.data2.y1.markval = _this7.yujingdata.FWL79;\n          } else {\n            _this7.data2.y1.markval = _this7.yujingdata.FWL;\n          } //设置水位markLine\n\n\n          var jhsw = new Object();\n          jhsw.name = '校核水位 ' + _this7.data2.y1.markval2;\n          jhsw.yAxis = _parseFloat(_this7.yujingdata.XHWL);\n          jhsw.label = {\n            formatter: '{b}',\n            position: 'middle'\n          };\n\n          _this7.data2.markdata.push(jhsw);\n\n          var zcsw = new Object();\n          zcsw.name = '汛限水位 ' + _this7.data2.y1.markval;\n          zcsw.yAxis = _parseFloat(_this7.data2.y1.markval);\n          zcsw.label = {\n            formatter: '{b}',\n            position: 'middle'\n          };\n\n          _this7.data2.markdata.push(zcsw);\n\n          if (_this7.data2.y1.min > _parseFloat(_this7.yujingdata.SWL)) {\n            _this7.data2.y1.min = _parseFloat(_this7.yujingdata.SWL);\n          } else {\n            var ssw = new Object();\n            ssw.name = '死水位 ' + _this7.yujingdata.SWL;\n            ssw.yAxis = _parseFloat(_this7.yujingdata.SWL);\n            ssw.label = {\n              formatter: '{b}',\n              position: 'middle'\n            };\n\n            _this7.data2.markdata.push(ssw);\n          }\n\n          var nowDate = new Date();\n\n          var now = _this7.getNowDayString(nowDate);\n\n          console.log(now);\n          _this7.data2.right = 24;\n\n          if (mintime == now && maxtime == now && tableType == 'historyTable') {\n            _this7.data2.chartName = \"今日水情图\"; //this.data2.right=10;\n\n            for (var i = 0; i < _this7.data2.x.list.length; i++) {\n              var time = _this7.data2.x.list[i].split(\" \");\n\n              _this7.data2.x.list[i] = time[1];\n            }\n          } else if (mintime.slice(0, 4) == maxtime.slice(0, 4) && maxtime.slice(0, 4) == nowDate.getFullYear()) {\n            for (var i = 0; i < _this7.data2.x.list.length; i++) {\n              var time = _this7.data2.x.list[i].substr(5);\n\n              _this7.data2.x.list[i] = time;\n            }\n          } // y4轴\n\n\n          _this7.data2.y4.name = \"库容\"; // Y2轴名字\n\n          var y4max = Math.ceil(FilterMethods.methods.get_echart_max(_this7.data2.y4.list)),\n              y4min = Math.floor(FilterMethods.methods.get_echart_min(_this7.data2.y4.list));\n          var krmax = Math.ceil(_this7.yujingdata.TTCP) + 50;\n          var krmin = Math.floor(_this7.yujingdata.DDCP) - 50;\n\n          if (y4max < krmax) {\n            y4max = krmax;\n          }\n\n          if (y4min > krmin) {\n            y4min = krmin;\n          }\n\n          _this7.data2.y4.max = y4max; // y4最大值\n\n          _this7.data2.y4.min = y4min < 0 ? 0 : y4min; // y4最小值\n          //设置库容markLine\n\n          var fhkr = new Object();\n          fhkr.name = '防洪库容 ' + _this7.yujingdata.FLDCP;\n          fhkr.yAxis = _parseFloat(_this7.yujingdata.FLDCP);\n          fhkr.label = {\n            formatter: '{b}',\n            position: 'middle'\n          };\n\n          _this7.data2.markdata2.push(fhkr);\n\n          if (_this7.data2.y4.min <= _parseFloat(_this7.yujingdata.DDCP)) {\n            var ddkr = new Object();\n            ddkr.name = '死库容 ' + _this7.yujingdata.DDCP;\n            ddkr.yAxis = _parseFloat(_this7.yujingdata.DDCP);\n            ddkr.label = {\n              formatter: '{b}',\n              position: 'middle'\n            };\n\n            _this7.data2.markdata2.push(ddkr);\n          }\n\n          var datalist1 = [];\n          var datalist2 = [];\n\n          for (var i = 0; i < _this7.data2.x.list.length; i++) {\n            var obj_data1 = [_this7.data2.x.list[i], _this7.data2.y1.list[i]];\n            datalist1.push(obj_data1);\n            var obj_data2 = [_this7.data2.x.list[i], _this7.data2.y4.list[i]];\n            datalist2.push(obj_data2);\n          }\n\n          _this7.data2.y1.list = datalist1;\n          _this7.data2.y4.list = datalist2;\n\n          switch (_this7.data2.chartName) {\n            case \"历史表\":\n              _this7.data2.chartName = \"历史水情图\";\n              break;\n\n            case \"小时表\":\n              _this7.data2.chartName = \"小时水情图\";\n              break;\n\n            case \"日表\":\n              _this7.data2.chartName = \"日水情图\";\n              break;\n\n            case \"月表\":\n              _this7.data2.chartName = \"月水情图\";\n              break;\n\n            case \"年表\":\n              _this7.data2.chartName = \"年水情图\";\n              break;\n          }\n\n          _this7.drawchart();\n        });\n\n        _this7.cancelTableLoading(\"shuiqing\"); // 取消表格加载\n\n      });\n    },\n    //弹框显示水位库容曲线\n    handleClick: function handleClick() {\n      this.chartdetail = this.siteno + \"水位库容面积关系曲线\";\n      this.detailitem = {\n        STCD: this.searchs,\n        itemshow: true\n      };\n      this.detailVisible = true;\n    },\n    closeQxDialog: function closeQxDialog() {\n      this.detailVisible = false;\n      this.detailitem.itemshow = false;\n    },\n    //返回日期\n    getNowDayString: function getNowDayString(now) {\n      return now.getFullYear() + \"-\" + (now.getMonth() + 1 < 10 ? \"0\" + (now.getMonth() + 1) : now.getMonth() + 1) + \"-\" + (now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate());\n    },\n    indexMethod: function indexMethod(index) {\n      return index + 1 + this.list_input.pagesize * (this.list_input.current - 1);\n    },\n    // 处理页码切换\n    CurrentChange: function CurrentChange(index) {\n      // console.log(index);\n      this.list_input.current = index;\n      this.ReloadBysort();\n    },\n    // 处理每页显示条数切换\n    PagesizeChange: function PagesizeChange(pagesize) {\n      // console.log(pagesize)\n      this.list_input.current = 1;\n      this.list_input.pagesize = pagesize;\n      this.ReloadBysort();\n    }\n  },\n  created: function created() {},\n  computed: {\n    balabala: function balabala() {\n      //console.log(this.$store.state.anniu);\n      return this.$store.state.anniu;\n    }\n  },\n  watch: {\n    // 'this.$store.state.anniu': function(){\n    //   console.log(this.$store.state.anniu);\n    // }\n    balabala: function balabala(curVal, oldVal) {\n      console.log(curVal);\n      this.test1(curVal);\n    }\n  }\n};",{"version":3,"sources":["table-history.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <Content :style=\"{padding: '12px 24px 24px 24px', background: '#fff'}\">\r\n            <Row :gutter=\"16\">\r\n                <Col :span=\"span1\">\r\n                    <Row :gutter=\"16\" type=\"flex\" justify=\"start\" z style=\"margin: 10px;line-height: 32px;\">\r\n                        <Col>时间:</Col>\r\n                        <Col>\r\n                            <!-- 开始到结束时间选择 -->\r\n                                <Col span=\"19\">\r\n                                    <el-date-picker\r\n                                    v-model=\"table.shuiqing.date\"\r\n                                    range-separator=\"至\"\r\n                                    start-placeholder=\"开始日期\"\r\n                                    end-placeholder=\"结束日期\"\r\n                                    @change=\"handleDatePickerChange\"\r\n                                    :picker-options=\"table.shuiqing.datePickerOptions[select.shuiqing_select]\"\r\n                                    unlink-panels\r\n                                    :type=\"table.shuiqing.datePickerType\"\r\n                                    size=\"mini\"\r\n                                    style=\"min-width: 360px\"\r\n                                    ></el-date-picker>\r\n                                </Col>\r\n                        </Col>\r\n                        <Col>\r\n                        时段类别：\r\n                        <Select v-model=\"select.shuiqing_select\" @on-change=\"tableTypeOnChange_shuiqing\" style=\"width:130px;margin-right: 20px;\" >\r\n                            <Option v-for=\"item in select.shuiqingList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                        </Select>\r\n                        </Col>\r\n                        <!-- \r\n                        <Col>\r\n                            <Button type=\"primary\" style=\"width: auto;margin-right: 10px;;\"\r\n                                    @click=\"cellclick\">站点详情\r\n                            </Button>\r\n\r\n                            <Button type=\"primary\" style=\"width: auto;margin-right: 0px;margin-left: 10px;\" @click=\"test1\">显示/隐藏树形</Button>\r\n                            <Button type=\"primary\" style=\"width: auto;margin-right: 20px;margin-left: 10px;\"\r\n                                    @click=\"err\">导出\r\n                            </Button>\r\n                        </Col>\r\n                         -->\r\n                        <Col>\r\n                            <Button type=\"primary\" style=\"width: auto;margin-right: 10px;\"\r\n                                    @click=\"handleClick\">水位库容曲线\r\n                            </Button>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    <div class=\"switch\" @click=\"Menu_toggle\">\r\n                        <i class=\"el-icon-d-arrow-left\" v-if=\"Menu.show_Controller\"></i>\r\n                        <i class=\"el-icon-d-arrow-right\" v-if=\"!Menu.show_Controller\"></i>\r\n                    </div>\r\n                    <Divider/>\r\n                    <Row>\r\n                        <!-- <Col style=\"text-align: center;margin: 0 0 10px 0;\">\r\n                            监测站名：{{CZMC}}\r\n                        </Col> -->\r\n                        <Col style='font-size: 14px;' class=\"borsLine\">站名：{{siteno}}&nbsp;\r\n                        单位：水位 m，流量 10m³/s，库容 万m³&nbsp;&nbsp;4-6月汛限水位：{{yujingdata.FWL}}m&nbsp;7-9月汛限水位：{{yujingdata.FWL79}}m&nbsp;校核洪水位：{{yujingdata.XHWL}}m</Col>\r\n                    </Row>\r\n                    <Row :gutter=\"24\" style=\"display: flex\">\r\n                        <Col style=\"width: 520px;\">\r\n                            <el-table\r\n                                    :data=\"table.shuiqing.Rows_filter\"\r\n                                    border\r\n                                    :height=\"theight\"\r\n                                    :loading=\"table.shuiqing.loading\"\r\n                                    @sort-change=\"sort_change\"\r\n                                    style=\"width: 520px\">\r\n                                <el-table-column\r\n                                        label=\" \"\r\n                                        type=\"index\"\r\n                                        align=\"center\"\r\n                                        width=\"55\"\r\n                                        :index=\"indexMethod\">\r\n                                </el-table-column>\r\n                                <el-table-column\r\n                                        v-for=\"(item,index) in table.shuiqing.activeColumns\"\r\n                                        :prop=\"item.key\"\r\n                                        :align=\"item.align\"\r\n                                        :label=\"item.title\"\r\n                                        :min-width=\"item.width\"\r\n                                        :sortable=\"item.sortable\"\r\n                                        :show-overflow-tooltip=\"true\"\r\n                                ></el-table-column>\r\n                            </el-table>\r\n                            <div style=\"margin: 10px;overflow: hidden\">\r\n                                <div style=\"float: right;\">\r\n                                    <Page\r\n                                            :total=\"list_input.total\"\r\n                                            :current=\"list_input.current\"\r\n                                            show-sizer\r\n                                            :page-size=\"list_input.pagesize\"\r\n                                            :page-size-opts=\"list_input.pagesizeopts\"\r\n                                            @on-change=\"CurrentChange\"\r\n                                            @on-page-size-change=\"PagesizeChange\"\r\n                                            size=\"small\"\r\n                                            show-total\r\n                                            show-elevator\r\n                                    ></Page>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col span=\"13\">\r\n                            <div ref=\"achart\" v-show=\"table.shuiqing.Rows_filter.length>0\"  :style=\"{'width': '100%','height': chartheight+'px','margin-top': '1%'}\"></div>\r\n                            <div ref=\"noachart\" v-show=\"table.shuiqing.Rows_filter.length==0\"  :style=\"{'width': '100%','height': chartheight+'px',margin: 'auto', display:'flex', alignItems:'center', justifyContent: 'center','margin-top': '1%'}\">暂无水情图数据</div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <transition name=\"el-fade-in-linear\">\r\n                    <Col :span=\"span2\" v-show=\"show1\">\r\n                        <Row style=\"margin-top: 10px;line-height: 32px;\">\r\n                            <Col>\r\n                                <Input search enter-button suffix=\"ios-search\" placeholder=\"请输入行政区划或者站点名称\" style=\"width: 250px;margin-right: 20px;\" @on-search=\"search\" v-model=\"searchmsg\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style=\"margin-top: 30px;margin-left: 20px;\">\r\n                            <Col :style=\"{'overflow-y': 'auto', height: (theight+30)+'px'}\">\r\n                            <el-tree\r\n                            \r\n                                class=\"filter-tree\"\r\n                                :data=\"Treedata\"\r\n                                highlight-current=\"true\"\r\n                                node-key=\"id\"\r\n                                :default-expanded-keys=\"expandedarray\"\r\n                                :filter-node-method=\"filterNode\"\r\n                                @node-click=\"xzqh_tree\"\r\n                                ref=\"tree\">\r\n                            </el-tree>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </transition>\r\n            </Row>\r\n        </Content>\r\n        <el-dialog\r\n    :title=\"chartdetail\"\r\n    :visible=\"detailVisible\"\r\n    :width=\"dialogwidth\"\r\n    @close=\"closeQxDialog()\"\r\n    append-to-body center\r\n   >\r\n  <TABLECHART v-if=\"detailitem.itemshow\" :info=\"detailitem\" ></TABLECHART>\r\n  </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script type=\"text/javascript\">\r\n    import FilterMethods from \"@/assets/commonJS/FilterMethods\";\r\n    import GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\r\n    import TABLECHART from \"@/table/table-sksq/table-chart.vue\";\r\n    import App from \"@/App.vue\";\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                loading: false,\r\n                theight:window.innerHeight-330,\r\n                chartheight:(window.innerHeight-310)>600?600:(window.innerHeight-310),\r\n                qudao: true,\r\n                xingzhengquhua: false,\r\n                show1: true,\r\n                Menu: {show_Controller: false},\r\n                dialogwidth:(600/window.innerWidth*100)+\"%\",\r\n                chartdetail:'',//断面特征弹框标题\r\n                detailVisible:false,//是否显示弹框\r\n                detailitem:{itemshow:false},//弹框对象\r\n                span1: '19',\r\n                span2: '5',\r\n                select:{\r\n                    // 日期选择器绑定值\r\n                    shuiqing_datePicker: null,\r\n                    // 水位数据历史表\r\n                    shuiqingList: [\r\n                    {\r\n                        value: \"historyTable\",\r\n                        size: \"small\",\r\n                        label: \"历史水情\"\r\n                    },\r\n                    {\r\n                        value: \"hourTable\",\r\n                        size: \"small\",\r\n                        label: \"小时水情\"\r\n                    },\r\n                    {\r\n                        value: \"dayTable\",\r\n                        size: \"small\",\r\n                        label: \"日水情\"\r\n                    },\r\n                    {\r\n                        value: \"monthTable\",\r\n                        size: \"small\",\r\n                        label: \"月水情\"\r\n                    }\r\n                    ],\r\n                    // 水位数据历史表绑定值\r\n                    shuiqing_select: \"historyTable\",\r\n                },\r\n                table:{\r\n                    // 水情\r\n                    shuiqing: {\r\n                    // 表头设置\r\n                    columns: {\r\n                        // 历史表\r\n                    historyTable: [\r\n                    {\r\n                        title: \"时间\",\r\n                        key: \"tm\",\r\n                        width: 135,\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        title: \"库水位\",\r\n                        width: 90,\r\n                        key: \"RZ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },                   \r\n                    {\r\n                        width: 90,\r\n                        title: \"库容\",\r\n                        key: \"W\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 105,\r\n                        title: \"入库流量\",\r\n                        key: \"INQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 105,\r\n                        title: \"出库流量\",\r\n                        key: \"OTQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    ],\r\n                    // 小时表\r\n                    hourTable: [\r\n                    {\r\n                        title: \"时间\",\r\n                        key: \"dt\",\r\n                        width: 135,\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        title: \"库水位\",\r\n                        width: 90,\r\n                        key: \"RZ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 90,\r\n                        title: \"库容\",\r\n                        key: \"HW\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    // {\r\n                    //   title: \"库下水位(m)\",\r\n                    //   width: 150,\r\n                    //   key: \"BLRZ\",\r\n                    //   align: \"center\",\r\n                    //   sortable: \"custom\"\r\n                    // },\r\n                    {\r\n                        width: 105,\r\n                        title: \"入库流量\",\r\n                        key: \"INQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 110,\r\n                        title: \"出库流量\",\r\n                        key: \"OTQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    }\r\n                    ],\r\n                    // 日表\r\n                    dayTable: [\r\n                    {\r\n                        title: \"时间\",\r\n                        key: \"tm\",\r\n                        width: 120,\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        title: \"库水位\",\r\n                        width: 90,\r\n                        key: \"RZ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 90,\r\n                        title: \"库容\",\r\n                        key: \"DW\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    // {\r\n                    //   title: \"库下水位(m)\",\r\n                    //   width: 150,\r\n                    //   key: \"BLRZ\",\r\n                    //   align: \"center\",\r\n                    //   sortable: \"custom\"\r\n                    // },\r\n                    {\r\n                        width: 105,\r\n                        title: \"入库流量\",\r\n                        key: \"INQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 105,\r\n                        title: \"出库流量\",\r\n                        key: \"OTQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    }\r\n                    ],\r\n                    // 月表\r\n                    monthTable: [\r\n                    {\r\n                        title: \"时间\",\r\n                        key: \"dt\",\r\n                        width: 100,\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        title: \"库水位\",\r\n                        width: 90,\r\n                        key: \"RZ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 90,\r\n                        title: \"库容\",\r\n                        key: \"MW\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    // {\r\n                    //   title: \"库下水位(m)\",\r\n                    //   width: 150,\r\n                    //   key: \"BLRZ\",\r\n                    //   align: \"center\",\r\n                    //   sortable: \"custom\"\r\n                    // },\r\n                    {\r\n                        width: 105,\r\n                        title: \"入库流量\",\r\n                        key: \"INQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 105,\r\n                        title: \"出库流量\",\r\n                        key: \"OTQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    }\r\n                    ]\r\n                },\r\n                // 正在激活的表头\r\n                activeColumns: [],\r\n                // 表体内容\r\n                Rows: [],\r\n                // 过滤后的表体内容\r\n                Rows_filter: [],\r\n                // 日期时间选择器的选项配置\r\n                datePickerOptions: {\r\n                    historyTable: {\r\n                    shortcuts: [\r\n                        {\r\n                        text: \"最近6小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 6);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近12小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 12);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近24小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近36小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 36);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近72小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 72);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        }\r\n                    ]\r\n                    },\r\n                    hourTable: {\r\n                    shortcuts: [\r\n                        {\r\n                        text: \"最近6小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 6);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近12小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 12);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近24小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近36小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 36);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近72小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 72);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        }\r\n                    ]\r\n                    },\r\n                    dayTable: {\r\n                    shortcuts: [\r\n                        {\r\n                        text: \"最近10天\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 10);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近15天\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 15);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近30天\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近60天\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 60);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近90天\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        }\r\n                    ]\r\n                    },\r\n                    monthTable: {\r\n                    shortcuts: []\r\n                    }\r\n                },\r\n                // 日期时间选择器类型\r\n                datePickerType: \"date\",\r\n                // 日期时间选择器值\r\n                date: null,\r\n                // 排序\r\n                sort: null,\r\n                // 表格是否加载中\r\n                loading: false,\r\n                // 总条数\r\n                total: 0,\r\n                // 当前页\r\n                currentPage: 1,\r\n                // 每页显示数量\r\n                pageSizes: 20,\r\n                // 表格高度\r\n                height: 430\r\n                },\r\n                },\r\n                Treedata: [],\r\n                expandedarray:[],\r\n                filterTreeData:[],\r\n                GD: '',\r\n                data1: [],\r\n                data2: [],\r\n                date: '',\r\n                STinfo: {},\r\n                searchs:\"\",\r\n                siteno:'',\r\n                timesearch: '',\r\n                CZMC: '',\r\n                echarts: {\r\n                    TM: [],\r\n                    Q: [],\r\n                    UPZ: [],\r\n                    DWZ: [],\r\n                },\r\n                form: {\r\n                    searchmsg: '',\r\n                    date: '',\r\n                    field: '',\r\n                },\r\n                searchmsg: '',\r\n                MaxY1: 0,\r\n                MaxY2: 0,\r\n                MinY1: 0,\r\n                MinY2: 0,\r\n                list_input: {\r\n                    total: 100,\r\n                    pagesize: 50,\r\n                    pagesizeopts: [10, 20, 50, 75, 100, 200],\r\n                    current: 1\r\n                },\r\n                yujingdata: {\r\n                    A_ZCFWL: '',\r\n                    A_XXFWL: '',\r\n                }\r\n            };\r\n        },\r\n        // 引入过滤方法到此组件\r\n        mixins: [FilterMethods, GetDataMethods],\r\n        components: {\r\n          TABLECHART\r\n        },\r\n        mounted() {\r\n            //获取行政区划树\r\n            this.axios.get(\"/guanqu/info/xzqhtree?TYPE=6\").then(res => {\r\n                this.Treedata = res.data;\r\n                this.expandedarray.push(this.Treedata[0].id);\r\n                this.expandedarray.push(this.Treedata[0].children[0].id);\r\n                var stcd=this.Treedata[0].children[0].children[0].value;\r\n                this.searchs = stcd;    \r\n                this.siteno = this.Treedata[0].children[0].children[0].label;\r\n                this.table[\"shuiqing\"].currentPage = 1;\r\n                this.table[\"shuiqing\"].date = null;\r\n                this.table[\"shuiqing\"].sort = null;\r\n                this.setDatePickerType_shuiqing(this.select.shuiqing_select); // 设置日期时间选择器的类型\r\n                this.setActiveColumns_shuiqing(this.select.shuiqing_select); // 设置水情历史数据表 当前激活的表头\r\n                this.table.shuiqing.loading = true; // 表格加载中\r\n                if (this[`setTableDefaultDate_shuiqing_${this.select.shuiqing_select}`]) {\r\n                    this[`setTableDefaultDate_shuiqing_${this.select.shuiqing_select}`]();\r\n                }\r\n                this.set_SKSQ_alarmInfo(this.searchs,data=>{\r\n                    this.Reload();\r\n                });           \r\n            });\r\n        },\r\n        methods: {\r\n            // 设置 xx表格 时间选择器值\r\n            setTableDate(tableName, val) {\r\n            this.table[tableName].date = val;\r\n            },\r\n            sort_change(column) {\r\n                console.log(column);\r\n                if (column.order == 'ascending') {\r\n                    this.form.field = column.prop;\r\n                    this.ReloadBysort();\r\n                }\r\n                if (column.order == 'descending') {\r\n                    this.form.field = column.prop + ' desc';\r\n                    this.ReloadBysort();\r\n                }\r\n                if (column.order == null) {\r\n                    this.form.field = '';\r\n                    this.ReloadBysort();\r\n                }\r\n            },\r\n            Menu_toggle() {\r\n                this.Menu.show_Controller = !this.Menu.show_Controller;\r\n                this.show1 = !this.show1;\r\n                if (this.show1 == true) {\r\n                    this.span1 = '19';\r\n                    this.span2 = '5';\r\n                    this.data2 = {};\r\n                    this.Reload();\r\n                } else {\r\n                    this.span1 = '24';\r\n                    this.span2 = '0';\r\n                    this.data2 = {};\r\n                    this.Reload();\r\n                }\r\n            },\r\n\r\n            // 监听动态参数事件处理函数\r\n            test1(agmt) {\r\n                this.Menu.show_Controller = !agmt;\r\n                // this.show1 = agmt;\r\n                if (agmt) {\r\n                    if(this.span1 == '24'){\r\n                        this.span2 = '0';\r\n                        this.asyncExecute();\r\n                        return\r\n                    }\r\n                    this.span1 = '19';\r\n                    this.span2 = '5';\r\n                    this.data2 = {};\r\n                    this.asyncExecute()\r\n                } else {\r\n                    if(this.span1 == '24'){\r\n                        this.span2 = '0';\r\n                        this.asyncExecute();\r\n                        return;\r\n                    }\r\n                    this.span1 = '19';\r\n                    this.span2 = '5';\r\n                    this.data2 = {};\r\n                    this.asyncExecute()\r\n                }\r\n            },\r\n            // 异步刷新，重新绘图\r\n            asyncExecute(){\r\n                setTimeout(this.Reload, 100)\r\n            },\r\n            filterNode(value, Treedata, node) {  \r\n                if (!value){\r\n                    this.filterTreeData.push(Treedata);\r\n                    return true;\r\n                } \r\n                if(Treedata.label.indexOf(value) !== -1){\r\n                    this.filterTreeData.push(Treedata);\r\n                    return true;\r\n                }else{\r\n                    if(this.filterTreeData.length==0){\r\n                    return false;\r\n                    }else{\r\n                    var nodedata=this.filterTreeData[this.filterTreeData.length-1];\r\n                    if(nodedata.level==3){\r\n                        return false;\r\n                    }else{\r\n                        if(nodedata.level>=Treedata.level){\r\n                        return false;\r\n                        }else{\r\n                        var parent=Treedata.parent;\r\n                            if(parent.indexOf(nodedata.value)>-1){\r\n                            return true;\r\n                            }else{\r\n                            return false;\r\n                            }     \r\n                        }\r\n                    }\r\n                    \r\n                    }\r\n                    \r\n                }                \r\n                },\r\n            xzqh_tree(data){\r\n                console.log(data);\r\n                if (data.level==3) {\r\n                    this.searchs = data.value;\r\n                    this.siteno=data.label;\r\n                    this.set_SKSQ_alarmInfo(this.searchs,data=>{\r\n                        this.Reload();\r\n                    });\r\n                }\r\n                },\r\n            search() {\r\n                this.filterTreeData = [];\r\n                this.$refs.tree.filter(this.searchmsg);\r\n                if (this.searchmsg != '') {\r\n                    this.filterTreeData.some((val, index) => {\r\n                    if(index==0 && val.level==1){\r\n                    this.expandedarray=[val.id,val.children[0].id];\r\n                    this.searchs=val.children[0].children[0].value;\r\n                    this.siteno=val.children[0].children[0].label;\r\n                    return true;\r\n                    }else if(index==0 && val.level==2){\r\n                    this.expandedarray=[val.id];\r\n                    this.searchs=val.children[0].value;\r\n                    this.siteno=val.children[0].label;\r\n                    return true;\r\n                    }else if(index==0 && val.level==3){\r\n                    this.searchs = val.value;\r\n                    this.siteno=val.label;\r\n                    return true;\r\n                    }\r\n                });\r\n                    this.set_SKSQ_alarmInfo(this.searchs,data=>{\r\n                        this.Reload();\r\n                    });\r\n                }else{\r\n                    this.$refs.tree.root.childNodes.forEach((e)=>{\r\n                        e.expanded=false;\r\n                    }); \r\n                    this.expandedarray=[this.Treedata[0].id,this.Treedata[0].children[0].id];\r\n                    this.searchs = this.Treedata[0].children[0].children[0].value;   \r\n                    this.siteno= this.Treedata[0].children[0].children[0].label;    \r\n                    this.set_SKSQ_alarmInfo(this.searchs,data=>{\r\n                        this.Reload();\r\n                    });\r\n                }\r\n            },\r\n            handleDatePickerChange(){\r\n                this.table.shuiqing.currentPage = 1;\r\n                this.Reload();\r\n            },\r\n            timechange() {\r\n                console.log(this.form.date);\r\n                this.Reload();\r\n            },\r\n            cellclick() {\r\n                console.log(JSON.stringify(this.STinfo));\r\n                if (JSON.stringify(this.STinfo) == \"{}\") {\r\n                    this.$Message.warning('请先选择站点');\r\n                } else {\r\n                    if(this.STinfo.bj) this.STinfo.STCD = this.STinfo.canal_code;\r\n                    var evt = new Object();\r\n                    evt.graphic = new Object();\r\n                    evt.graphic.attributes = this.STinfo;\r\n                    evt.graphic.attributes.STNM = this.CZMC;\r\n                    evt.graphic.attributes.itype = \"shuikushuiqing\";\r\n                    evt.graphic.attributes.rowinfo = JSON.parse(JSON.stringify(this.STinfo));\r\n                    evt.graphic.attributes.rowinfo.tableType = {\r\n                        sksq: \"historyTable\"\r\n                    };\r\n                    var v = new Object;\r\n                    v.itype = \"shuikushuiqing\";\r\n                    console.log(\"evt\", evt);\r\n                    this.$App.showDrawer(evt, v);\r\n                }\r\n                // var evt = new Object();\r\n                // evt.graphic = new Object();\r\n                // evt.graphic.attributes = this.data1[0];\r\n                // evt.graphic.attributes.itype = \"zhafashuiqing\";\r\n                // evt.graphic.attributes.rowinfo = JSON.parse(JSON.stringify(this.data1[0]))\r\n                // evt.graphic.attributes.rowinfo.tableType = {\r\n                //   qdsq: \"historyTable\"\r\n                // };\r\n                // var v = new Object;\r\n                // v.itype = \"zhafashuiqing\";\r\n                // console.log(\"evt\",evt);\r\n                // this.$App.showDrawer(evt, v);\r\n            },\r\n            drawchart() {\r\n                var achart = this.$echarts.init(this.$refs.achart);\r\n                console.log(achart);\r\n                achart.resize();\r\n                achart.setOption({\r\n                    title: {text: this.data2.chartName},\r\n                    tooltip: {\r\n                        trigger: \"axis\"\r\n                    },\r\n                    legend: {\r\n                        data: [\"库水位\",\"库容\"],\r\n                        bottom:-5\r\n                    },\r\n                    toolbox: {\r\n                        show: true,\r\n                        feature: {\r\n                        mark: { show: true },\r\n                        magicType: { show: true, type: [\"line\", \"bar\"] },\r\n                        saveAsImage: { show: true }\r\n                        }\r\n                    },\r\n                    axisPointer: {\r\n                        link: {xAxisIndex: 'all'}\r\n                    },\r\n                    grid: [{\r\n                        left: 38,\r\n                        right: this.data2.right,\r\n                        height: '34%'\r\n                        }, {\r\n                        left: 38,\r\n                        right: this.data2.right,\r\n                        top: '59%',\r\n                        height: '34%'\r\n                    }],\r\n                    xAxis: [\r\n                        {\r\n                            boundaryGap: false,\r\n                            data: this.data2.x.list,\r\n                        },\r\n                        {\r\n                            gridIndex: 1,\r\n                            boundaryGap: false,\r\n                            data: this.data2.x.list,\r\n                            position: 'bottom'\r\n                        }\r\n                    ],\r\n                    yAxis: [\r\n                        {\r\n                            name: '库水位(m)',\r\n                            type: \"value\",\r\n                            minInterval:1, \r\n                            min:this.data2.y1.min,\r\n                            max:this.data2.y1.max\r\n                        },\r\n                        {\r\n                            gridIndex: 1,\r\n                            name: this.data2.y4.name+'(万m³)',\r\n                            type: \"value\",\r\n                            minInterval:1, \r\n                            min:this.data2.y4.min,\r\n                            max:this.data2.y4.max\r\n                        }\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: \"库水位\",\r\n                            type: \"line\",\r\n                            yAxisIndex: 0,\r\n                            data:this.data2.y1.list,\r\n                            showSymbol: false,\r\n                            smooth: true,\r\n                            itemStyle : {  \r\n                                normal : {  \r\n                                    color:'#6C84CE'  \r\n                                }  \r\n                            },  \r\n                            areaStyle: {},\r\n                            markLine : {\r\n                                symbol:'none',\r\n                                itemStyle : {  \r\n                                                normal : {  \r\n                                                    lineStyle:{  \r\n                                                    type:'solid',\r\n                                                        color:'red',\r\n                                                    }  \r\n                                                }  \r\n                                            },\r\n                                data : this.data2.markdata,\r\n                            },\r\n                        },\r\n                        {\r\n                            name: this.data2.y4.name,\r\n                            type: \"line\",\r\n                            xAxisIndex: 1,\r\n                            yAxisIndex: 1,\r\n                            data:this.data2.y4.list,\r\n                            showSymbol: false,\r\n                            smooth: true,\r\n                            itemStyle : {  \r\n                                normal : {  \r\n                                    color:'#91CC75'  \r\n                                }  \r\n                            },  \r\n                            areaStyle: {},\r\n                            markLine: {\r\n                            symbol:'none',\r\n                                itemStyle : {  \r\n                                                normal : {  \r\n                                                    lineStyle:{ \r\n                                                        type:'solid', \r\n                                                        color:'red',\r\n                                                    }  \r\n                                                }  \r\n                                            },\r\n                            data: this.data2.markdata2,\r\n                        }\r\n                        }\r\n                    ]\r\n                });\r\n            },\r\n            err() {\r\n                this.$Message.warning('该功能还在开发中...');\r\n            },\r\n            // 设置水库水情预警信息\r\n            set_SKSQ_alarmInfo(STCD,callback) {\r\n            this.$GetData.Survey_History_SKSQ(\r\n                \"alarmTable\",\r\n                {\r\n                STCD: STCD,\r\n                },\r\n                true,\r\n                data => {\r\n                var yujingdata = data.data[0];\r\n                this.yujingdata.FWL = yujingdata.FWL;\r\n                this.yujingdata.FWL79 = yujingdata.FWL79;\r\n                this.yujingdata.SJWL = yujingdata.SJWL;\r\n                this.yujingdata.JYWL = yujingdata.JYWL;\r\n                this.yujingdata.XHWL=yujingdata.XHWL;\r\n                this.yujingdata.ZCWL=yujingdata.ZCWL;\r\n                this.axios.get(`/guanqu/alarm/tzkrinfo?STCD=${STCD}`).then(res => {\r\n                    var tzkr=res.data;\r\n                    this.yujingdata.FLDCP=tzkr.fldcp;\r\n                    this.yujingdata.DDCP=tzkr.ddcp;\r\n                    this.yujingdata.TTCP=tzkr.ttcp;\r\n                    callback(yujingdata);\r\n                });                \r\n                }\r\n            );\r\n            },\r\n            // 切换 水情历史数据表类型\r\n            tableTypeOnChange_shuiqing(tableType) {\r\n            this.table[\"shuiqing\"].currentPage = 1;\r\n            this.table[\"shuiqing\"].sort = null;\r\n            this.table[\"shuiqing\"].date = null;\r\n            this.setDatePickerType_shuiqing(tableType); // 设置日期时间选择器的类型\r\n            this.setActiveColumns_shuiqing(tableType); // 设置水情历史数据表 当前激活的表头\r\n            if (this[`setTableDefaultDate_shuiqing_${tableType}`]) {\r\n                    this[`setTableDefaultDate_shuiqing_${tableType}`]();\r\n                }\r\n            // 获取对应水情历史数据表的数据\r\n            this.Reload();\r\n            },\r\n            // 水情历史数据表 当前正在激活的表头\r\n            setActiveColumns_shuiqing(tableType) {\r\n            this.table.shuiqing.activeColumns = this.table.shuiqing.columns[tableType];\r\n            this.select.shuiqing_select = tableType;\r\n            },\r\n            // 设置水位数据历史表默认查询日期\r\n            setTableDefaultDate_shuiqing_historyTable() {\r\n            const end = new Date();\r\n            const start = zeroPointOfTheDay();\r\n\r\n            var timeSlot = [start, end];\r\n\r\n            this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n            function zeroPointOfTheDay() {\r\n                var date = new Date();\r\n                date.setHours(0);\r\n                date.setMinutes(0);\r\n                date.setSeconds(0);\r\n                date.setMilliseconds(0);\r\n                return date;\r\n            }\r\n            },\r\n            // 设置水位数据小时表默认查询日期\r\n            setTableDefaultDate_shuiqing_hourTable() {\r\n            const end = new Date();\r\n            const start = zeroPointOfTheDay();\r\n\r\n            var timeSlot = [start, end];\r\n\r\n            this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n            function zeroPointOfTheDay() {\r\n                var date = new Date();\r\n                date.setHours(0);\r\n                date.setMinutes(0);\r\n                date.setSeconds(0);\r\n                date.setMilliseconds(0);\r\n                return date;\r\n            }\r\n            },\r\n            // 设置水位数据日表默认查询日期\r\n            setTableDefaultDate_shuiqing_dayTable() {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n\r\n            var timeSlot = [start, end];\r\n\r\n            this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n            function zeroPointOfTheDay() {\r\n                var date = new Date();\r\n                date.setHours(0);\r\n                date.setMinutes(0);\r\n                date.setSeconds(0);\r\n                date.setMilliseconds(0);\r\n                return date;\r\n            }\r\n            },\r\n            // 设置水位数据月表默认查询日期\r\n            setTableDefaultDate_shuiqing_monthTable() {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 160);\r\n\r\n            var timeSlot = [start, end];\r\n\r\n            this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n            function zeroPointOfTheDay() {\r\n                var date = new Date();\r\n                date.setHours(0);\r\n                date.setMinutes(0);\r\n                date.setSeconds(0);\r\n                date.setMilliseconds(0);\r\n                return date;\r\n            }\r\n            },\r\n            // 设置日期时间选择器的类型\r\n            setDatePickerType_shuiqing(tableType) {\r\n            var datePickerType;\r\n            switch (tableType) {\r\n                case \"historyTable\":\r\n                datePickerType = \"datetimerange\";\r\n                break;\r\n                case \"hourTable\":\r\n                datePickerType = \"datetimerange\";\r\n                break;\r\n                case \"dayTable\":\r\n                datePickerType = \"daterange\";\r\n                break;\r\n                case \"monthTable\":\r\n                datePickerType = \"monthrange\";\r\n                break;\r\n            }\r\n            this.table[\"shuiqing\"].datePickerType = datePickerType;\r\n            },\r\n            // 表格加载中\r\n            letTableLoading(tableName) {\r\n                this.table[tableName].loading = true;\r\n            },\r\n            // 取消表格加载\r\n            cancelTableLoading(tableName) {\r\n                this.table[tableName].loading = false;\r\n            },\r\n            ReloadBysort(){\r\n                var tableType = this.select.shuiqing_select;\r\n                this.letTableLoading(\"shuiqing\"); // 表格加载中\r\n                console.log('+++++++++++++'+tableType);\r\n                // 传递参数\r\n                var body = {\r\n                    STCD: this.searchs,\r\n                    _page: this.list_input.current,\r\n                    _page_size: this.list_input.pagesize\r\n                };\r\n\r\n                // 如果有选择排序，则传递排序参数\r\n                if (this.form.field!=null && this.form.field!='') {\r\n                    body._orderby = this.form.field;\r\n                }\r\n                // 如果有选择日期进行查询，根据表格类型传递参数\r\n                if (this.table.shuiqing.date) {\r\n                    switch (tableType) {\r\n                    case \"historyTable\":\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1];\r\n                        body.Time_max = DTT[2];\r\n                        break;\r\n                    case \"dayTable\":\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1].substr(0,10);\r\n                        body.Time_max = DTT[2].substr(0,10);\r\n                        break;\r\n                    case \"hourTable\":\r\n                        console.log('~~~~~~~~~~~~~~~~~~~~~~~'+tableType);\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1];\r\n                        body.Time_max = DTT[2];\r\n                        break;\r\n                    case \"monthTable\":\r\n                        var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date,\"monthTable\").split(\",\");\r\n                        body.Time_min = DTT[1].substring(0,7);\r\n                        body.Time_max = DTT[2].substring(0,7);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 获取水库水情历史数据\r\n                this.$GetData.Survey_History_SKSQ(\r\n                    tableType,\r\n                    body,\r\n                    {\r\n                    default: true,\r\n                    myFilter: data => {\r\n                        data.map(val => {\r\n                        val.currentPage = body._page;\r\n                        val.pageSizes = body._page_size;\r\n                        return val;\r\n                        });\r\n                        return data;\r\n                    }\r\n                    },\r\n                    data => {\r\n                    this.table.shuiqing.Rows_filter = data.data;\r\n                    this.list_input.total = data.total;\r\n                    }\r\n                );\r\n            },\r\n            Reload() {\r\n                var tableType = this.select.shuiqing_select;\r\n                this.letTableLoading(\"shuiqing\"); // 表格加载中\r\n                console.log('+++++++++++++'+tableType);\r\n                // 传递参数\r\n                var body = {\r\n                    STCD: this.searchs,\r\n                    _page: this.list_input.current,\r\n                    _page_size: this.list_input.pagesize\r\n                };\r\n\r\n                // 如果有选择排序，则传递排序参数\r\n                if (this.form.field!=null && this.form.field!='') {\r\n                    body._orderby = _this.form.field;\r\n                }\r\n                // 如果有选择日期进行查询，根据表格类型传递参数\r\n                if (this.table.shuiqing.date) {\r\n                    switch (tableType) {\r\n                    case \"historyTable\":\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1];\r\n                        body.Time_max = DTT[2];\r\n                        break;\r\n                    case \"dayTable\":\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1].substr(0,10);\r\n                        body.Time_max = DTT[2].substr(0,10);\r\n                        break;\r\n                    case \"hourTable\":\r\n                        console.log('~~~~~~~~~~~~~~~~~~~~~~~'+tableType);\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1];\r\n                        body.Time_max = DTT[2];\r\n                        break;\r\n                    case \"monthTable\":\r\n                        var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date,\"monthTable\").split(\",\");\r\n                        body.Time_min = DTT[1].substring(0,7);\r\n                        body.Time_max = DTT[2].substring(0,7);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 获取水库水情历史数据\r\n                this.$GetData.Survey_History_SKSQ(\r\n                    tableType,\r\n                    body,\r\n                    {\r\n                    default: true,\r\n                    myFilter: data => {\r\n                        data.map(val => {\r\n                        val.currentPage = body._page;\r\n                        val.pageSizes = body._page_size;\r\n                        return val;\r\n                        });\r\n                        return data;\r\n                    }\r\n                    },\r\n                    data => {\r\n                    this.table.shuiqing.Rows_filter = data.data;\r\n                    this.list_input.total = data.total;\r\n                    body._page_size = 999999999;\r\n                    body._page = 1;\r\n                    this.$GetData.Survey_History_SKSQ(\r\n                        tableType,\r\n                        body,\r\n                        {\r\n                        default: true,\r\n                        myFilter: data => {\r\n                            data.map(val => {\r\n                            val.currentPage = body._page;\r\n                            val.pageSizes = body._page_size;\r\n                            return val;\r\n                            });\r\n                            return data;\r\n                        }\r\n                        },\r\n                        chartData => {\r\n                          this.data2=chartData.data;\r\n                            if(this.data2==null || this.data2.length==0){\r\n                             return;\r\n                            }\r\n                            this.data2 = this.$App.transform_SKSQ_data_into_ehart_data(this.data2,tableType,true); // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        console.log(this.data2);\r\n        this.data2.markdata=[];\r\n        this.data2.markdata2=[];\r\n        var swmax=Math.ceil(FilterMethods.methods.get_echart_max(this.data2.y1.list));\r\n        var y1max = Math.ceil(parseFloat(this.yujingdata.XHWL)),\r\n            y1min = Math.floor(FilterMethods.methods.get_echart_min(this.data2.y1.list));\r\n        if(swmax>y1max){\r\n            this.data2.y1.max=swmax;\r\n        }else{\r\n            this.data2.y1.max=y1max;\r\n        }       \r\n        this.data2.y1.min=y1min;\r\n        var mintime=this.data2.x.list[0].slice(0, 10),maxtime=this.data2.x.list[this.data2.x.list.length-1].slice(0, 10);\r\n        var minmonth=mintime.split(\"-\")[1],maxmonth=maxtime.split(\"-\")[1];\r\n          this.data2.y1.markval2=this.yujingdata.XHWL;\r\n        if((parseInt(minmonth)>=7 && parseInt(minmonth)<=9) || (parseInt(maxmonth)>=7 && parseInt(maxmonth)<=9)){\r\n          this.data2.y1.markval=this.yujingdata.FWL79;\r\n        }else{\r\n          this.data2.y1.markval=this.yujingdata.FWL;\r\n        }\r\n        //设置水位markLine\r\n                    var jhsw=new Object();\r\n                    jhsw.name='校核水位 '+this.data2.y1.markval2;\r\n                    jhsw.yAxis=parseFloat(this.yujingdata.XHWL);\r\n                    jhsw.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                    }\r\n                    this.data2.markdata.push(jhsw);\r\n                    var zcsw=new Object();\r\n                    zcsw.name='汛限水位 '+this.data2.y1.markval;\r\n                    zcsw.yAxis=parseFloat(this.data2.y1.markval);\r\n                    zcsw.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                    }\r\n                    this.data2.markdata.push(zcsw);\r\n        if(this.data2.y1.min>parseFloat(this.yujingdata.SWL)){\r\n          this.data2.y1.min=parseFloat(this.yujingdata.SWL);\r\n        }else{\r\n          var ssw=new Object();\r\n                      ssw.name='死水位 '+this.yujingdata.SWL;\r\n                      ssw.yAxis=parseFloat(this.yujingdata.SWL);\r\n                      ssw.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                    }\r\n                      this.data2.markdata.push(ssw);\r\n        }\r\n        var nowDate=new Date();\r\n        var now=this.getNowDayString(nowDate);\r\n        console.log(now);\r\n        this.data2.right=24;\r\n        if(mintime==now && maxtime==now && tableType=='historyTable'){\r\n            this.data2.chartName = \"今日水情图\";\r\n            //this.data2.right=10;\r\n            for(var i=0;i<this.data2.x.list.length;i++){\r\n              var time = this.data2.x.list[i].split(\" \");\r\n              this.data2.x.list[i]=time[1];\r\n            }\r\n        }else if(mintime.slice(0,4)==maxtime.slice(0,4) && maxtime.slice(0,4)==nowDate.getFullYear()){\r\n            for(var i=0;i<this.data2.x.list.length;i++){\r\n              var time = this.data2.x.list[i].substr(5);\r\n              this.data2.x.list[i]=time;\r\n            }\r\n        }\r\n        // y4轴\r\n                    this.data2.y4.name = \"库容\"; // Y2轴名字\r\n                    var y4max = Math.ceil(FilterMethods.methods.get_echart_max(this.data2.y4.list)),\r\n                        y4min = Math.floor(FilterMethods.methods.get_echart_min(this.data2.y4.list));\r\n                    var krmax=Math.ceil(this.yujingdata.TTCP)+50;\r\n                    var krmin=Math.floor(this.yujingdata.DDCP)-50;\r\n                    if(y4max<krmax){\r\n                      y4max=krmax;\r\n                    }\r\n                    if(y4min>krmin){\r\n                      y4min=krmin;\r\n                    }\r\n                    this.data2.y4.max = y4max; // y4最大值\r\n                    this.data2.y4.min = y4min < 0 ? 0 : y4min; // y4最小值\r\n        //设置库容markLine\r\n                    var fhkr=new Object();\r\n                    fhkr.name='防洪库容 '+this.yujingdata.FLDCP;\r\n                    fhkr.yAxis=parseFloat(this.yujingdata.FLDCP);\r\n                    fhkr.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                    }\r\n                    this.data2.markdata2.push(fhkr);\r\n                    if(this.data2.y4.min<=parseFloat(this.yujingdata.DDCP)){\r\n                        var ddkr=new Object();\r\n                        ddkr.name='死库容 '+this.yujingdata.DDCP;\r\n                        ddkr.yAxis=parseFloat(this.yujingdata.DDCP);\r\n                        ddkr.label={\r\n                            formatter: '{b}',\r\n                           position: 'middle',\r\n                        }\r\n                        this.data2.markdata2.push(ddkr);\r\n                    }            \r\n                    var datalist1=[];\r\n                    var datalist2=[];\r\n                    for(var i=0;i<this.data2.x.list.length;i++){\r\n                      var obj_data1=[this.data2.x.list[i],this.data2.y1.list[i]];\r\n                      datalist1.push(obj_data1);\r\n                      var obj_data2=[this.data2.x.list[i],this.data2.y4.list[i]];\r\n                      datalist2.push(obj_data2);\r\n                    }\r\n                    this.data2.y1.list=datalist1;\r\n                    this.data2.y4.list=datalist2;\r\n        switch (this.data2.chartName) {\r\n                case \"历史表\":\r\n                    this.data2.chartName=\"历史水情图\";\r\n                    break;\r\n                case \"小时表\":\r\n                    this.data2.chartName=\"小时水情图\";\r\n                    break;\r\n                case \"日表\":\r\n                    this.data2.chartName=\"日水情图\";\r\n                    break;\r\n                case \"月表\":\r\n                    this.data2.chartName=\"月水情图\";\r\n                    break;\r\n                case \"年表\":\r\n                    this.data2.chartName=\"年水情图\";\r\n                    break;\r\n                }\r\n                this.drawchart();\r\n                         }                        \r\n                    );\r\n\r\n                    this.cancelTableLoading(\"shuiqing\"); // 取消表格加载\r\n                    }\r\n                );\r\n            },\r\n            //弹框显示水位库容曲线\r\n            handleClick(){\r\n                this.chartdetail=this.siteno+\"水位库容面积关系曲线\";\r\n              this.detailitem={STCD:this.searchs,itemshow:true};\r\n              this.detailVisible=true;\r\n            },\r\n            closeQxDialog(){\r\n              this.detailVisible=false;\r\n              this.detailitem.itemshow=false;\r\n            },\r\n            //返回日期\r\n    getNowDayString(now){\r\n      return now.getFullYear()+\"-\"+((now.getMonth()+1)<10?\"0\"+(now.getMonth()+1):(now.getMonth()+1))+\"-\"+(now.getDate()<10?\"0\"+now.getDate():now.getDate());\r\n    },\r\n            indexMethod(index) {\r\n                return index + 1 + (this.list_input.pagesize * (this.list_input.current - 1));\r\n            },\r\n            // 处理页码切换\r\n            CurrentChange(index) {\r\n                // console.log(index);\r\n                this.list_input.current = index;\r\n                this.ReloadBysort();\r\n            },\r\n            // 处理每页显示条数切换\r\n            PagesizeChange(pagesize) {\r\n                // console.log(pagesize)\r\n                this.list_input.current = 1;\r\n                this.list_input.pagesize = pagesize;\r\n                this.ReloadBysort();\r\n            }\r\n        },\r\n        created() {\r\n        },\r\n        computed: {\r\n            balabala() {\r\n                //console.log(this.$store.state.anniu);\r\n                return this.$store.state.anniu\r\n            }\r\n        },\r\n        watch: {\r\n            // 'this.$store.state.anniu': function(){\r\n            //   console.log(this.$store.state.anniu);\r\n            // }\r\n            balabala(curVal, oldVal) {\r\n                console.log(curVal);\r\n                this.test1(curVal)\r\n            }\r\n        },\r\n    };\r\n</script>\r\n\r\n<style type=\"text/css\" lang=\"less\">\r\n    .switch {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 55px;\r\n        display: flex;\r\n        align-items: center;\r\n        background: white;\r\n        border-top-left-radius: 5px;\r\n        border-bottom-left-radius: 5px;\r\n        border: #7eb7f0 2px solid;\r\n        border-right: 0;\r\n    }\r\n\r\n    .el-table th {\r\n        padding: 0 !important;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/table/table-sksq"}]}