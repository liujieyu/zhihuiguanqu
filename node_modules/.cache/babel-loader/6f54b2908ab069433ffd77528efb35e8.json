{"remainingRequest":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\thread-loader\\dist\\cjs.js!D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\huangcaiplace\\zhihuiguanqu\\src\\components\\Details\\Details-yunxinggongkuang.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\huangcaiplace\\zhihuiguanqu\\src\\components\\Details\\Details-yunxinggongkuang.vue","mtime":1577669404027},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FilterMethods from \"../../assets/commonJS/FilterMethods\"; // 过滤方法\n\nimport GetDataMethods from \"../../assets/commonJS/GetDataMethods\"; // 获取数据方法\n\nimport { timingSafeEqual } from \"crypto\";\nexport default {\n  props: {\n    info: {}\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      // 激活标签栏\n      activeName: \"zhuangtaishuju\",\n      // 站点\n      siteInfo: {},\n      // 表格\n      table: {\n        // 状态数据\n        zhuangtaishuju: {\n          // 表头设置\n          columns: {},\n          // 正在激活的表头\n          activeColumns: [{\n            type: \"index\",\n            title: \" \",\n            width: 60,\n            align: \"center\",\n            // 自定义序号\n            indexMethod: function indexMethod(item) {\n              var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n              return index;\n            },\n            ellipsis: true\n          }, {\n            title: \"时间\",\n            key: \"tm\",\n            // width: 150,\n            align: \"center\"\n          }, {\n            title: \"电压(v)\",\n            width: 110,\n            key: \"VOL\",\n            align: \"center\",\n            render: function render(h, params) {\n              console.log(\"params\", params);\n              console.log(\"VOL\", params.row.VOL < _this.ZCDY.VOLMIN || params.row.VOL > _this.ZCDY.VOLMAX ? \"red\" : \"black\");\n              return h(\"div\", {\n                style: {\n                  color: params.row.VOL < _this.ZCDY.VOLMIN || params.row.VOL > _this.ZCDY.VOLMAX ? \"red\" : \"black\"\n                }\n              }, params.row.VOL);\n            }\n          }, {\n            width: 120,\n            title: \"通讯状态\",\n            key: \"cs\",\n            align: \"center\",\n            render: function render(h, params) {\n              // console.log(\"params\", params);\n              // console.log(\"CS\", params.row.CS == \"正常\" ? \"black\" : \"red\");\n              return h(\"div\", {\n                style: {\n                  color: params.row.cs == \"正常\" ? \"black\" : \"red\"\n                }\n              }, params.row.cs);\n            }\n          }],\n          // 表体内容\n          Rows: [],\n          // 过滤后的表体内容\n          Rows_filter: [],\n          // 日期时间选择器的选项配置\n          datePickerOptions: {\n            shortcuts: [{\n              text: \"最近6小时\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 6);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近12小时\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 12);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近24小时\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近36小时\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 36);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近72小时\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 72);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }]\n          },\n          // 日期时间选择器类型\n          datePickerType: \"datetimerange\",\n          // 日期时间选择器值\n          date: null,\n          // 表格是否加载中\n          loading: false,\n          // 当前页\n          currentPage: 1,\n          // 每页显示数量\n          pageSizes: 20,\n          // 总条数\n          total: 0,\n          // 表格高度\n          height: 430\n        }\n      },\n      // 图形\n      chart: {\n        zhuangtaishuju: null\n      },\n      //   日期数据\n      date: {\n        shuiqing: \"\"\n      },\n      // 输入框对象\n      input: {\n        // 关系曲线换算的\n        huansuan: {\n          waterLever: \"\",\n          flowLever: \"\"\n        }\n      },\n      //   导出按钮加载控制\n      outPutLoading: false,\n      //   导出确认对话框控制\n      outPutModal: false,\n      // 整块区域的加载控制\n      boxLoading: false,\n      //正常电压范围\n      ZCDY: {}\n    };\n  },\n  mixins: [FilterMethods, GetDataMethods],\n  methods: {\n    //   导出站点信息\n    outPutSiteInfo: function outPutSiteInfo() {\n      var _this2 = this;\n\n      //   关闭导出确认对话框\n      this.outPutModal = false; //   按钮加载\n\n      this.outPutLoading = true;\n      setTimeout(function () {\n        _this2.outPutLoading = false;\n\n        _this2.$Modal.success({\n          title: \"关于导出\",\n          content: \"站点信息表导出成功\"\n        });\n      }, 500);\n    },\n    //   确认导出\n    outPutSure: function outPutSure() {\n      this.outPutSiteInfo();\n    },\n    // 搜索\n    search: function search() {\n      var _this3 = this;\n\n      // 表格加载中\n      this.table.loading = true;\n      setTimeout(function () {\n        // var newList = this.featrue.Rows.map((val, index) => {\n        //   return val.attributes;\n        // });\n        // this.table.Rows = newList;\n        // 取消表格加载\n        _this3.table.loading = false;\n      }, 1000);\n    },\n    // 绘图\n    createChart: function createChart(idName) {\n      var myChart = this.$echarts.init(document.getElementById(idName));\n      myChart.setOption({\n        // title: {\n        //   text: this.info.STNM,\n        //   backgroundColor:\"rgb(200,200,200)\"\n        // },\n        tooltip: {\n          trigger: \"axis\"\n        },\n        legend: {\n          data: [\"电压\", \"电压范围\"]\n        },\n        // toolbox: {\n        //   show: true,\n        //   feature: {\n        //     mark: { show: true },\n        //     dataView: { show: true, readOnly: false },\n        //     magicType: { show: true, type: [\"line\", \"bar\"] },\n        //     restore: { show: true },\n        //     saveAsImage: { show: true }\n        //   }\n        // },\n        // calculable: true,\n        animation: false,\n        xAxis: [{\n          type: \"category\",\n          boundaryGap: false,\n          data: [\"00:00-02:00\", \"02:00-04:00\", \"04:00-06:00\", \"06:00-08:00\", \"08:00-10:00\"]\n        }],\n        yAxis: [{\n          name: \"电压 v\",\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value}\"\n          }\n        }, {\n          name: \"电压范围 \",\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value} \"\n          }\n        }],\n        series: [{\n          name: \"电压\",\n          type: \"line\",\n          data: [11, 11, 15, 13, 12],\n          // markPoint: {\n          //   data: [\n          //     { type: \"max\", name: \"最大值\" },\n          //     { type: \"min\", name: \"最小值\" }\n          //   ]\n          // },\n          markLine: {\n            data: [{\n              type: \"average\",\n              name: \"平均值\"\n            }]\n          }\n        }, {\n          name: \"电压范围\",\n          type: \"line\",\n          data: [1, 4, 2, 5, 3],\n          yAxisIndex: 1,\n          markLine: {\n            data: [{\n              type: \"average\",\n              name: \"平均值\"\n            }]\n          }\n        }]\n      });\n    },\n    // 制图——电压线型图\n    createChart_zhuangtaishuju: function createChart_zhuangtaishuju(id, tableType, data) {\n      var ele = document.getElementById(id);\n\n      if (data.length > 0) {\n        var echartData = this.$App.transform_YXGK_data_into_ehart_data(data, tableType); // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n\n        if (!this.chart.zhuangtaishuju) {\n          this.chart.zhuangtaishuju = this.$echarts.init(ele);\n        }\n\n        this.chart.zhuangtaishuju.setOption({\n          title: {\n            text: echartData.chartName\n          },\n          tooltip: {\n            trigger: \"axis\"\n          },\n          // legend: {\n          //   data: [echartData.y1.name],\n          //   y: \"bottom\"\n          // },\n          toolbox: {\n            show: true,\n            feature: {\n              mark: {\n                show: true\n              },\n              magicType: {\n                show: true,\n                type: [\"line\", \"bar\"]\n              },\n              restore: {\n                show: true\n              },\n              saveAsImage: {\n                show: true\n              }\n            }\n          },\n          calculable: true,\n          animation: true,\n          xAxis: [{\n            type: \"category\",\n            boundaryGap: false,\n            data: echartData.x.list\n          }],\n          yAxis: [{\n            name: \"\".concat(echartData.y1.name, \" V\"),\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value} \"\n            },\n            max: echartData.y1.max,\n            min: echartData.y1.min\n          }],\n          series: [{\n            name: echartData.y1.name,\n            type: \"line\",\n            data: echartData.y1.list\n          }]\n        });\n      }\n    },\n    // 加载站点数据\n    loadSiteData: function loadSiteData(data) {\n      this.siteInfo = data;\n    },\n    // 组件加载中\n    componentLoading: function componentLoading() {\n      this.boxLoading = true;\n    },\n    // 取消组件加载\n    cancelComponentLoading: function cancelComponentLoading() {\n      this.boxLoading = false;\n    },\n    // 处理页码切换\n    handleCurrentChange_zhuangtaishuju: function handleCurrentChange_zhuangtaishuju(index) {\n      this.table[\"zhuangtaishuju\"].currentPage = index;\n      this.search_StationStatus();\n    },\n    // 处理每页显示条数切换\n    handleSizeChange_zhuangtaishuju: function handleSizeChange_zhuangtaishuju(pageSizes) {\n      this.table[\"zhuangtaishuju\"].pageSizes = pageSizes;\n      this.table[\"zhuangtaishuju\"].currentPasge = 1;\n      this.search_StationStatus();\n    },\n    // 获取对应水情历史数据表的数据\n    getTableData_zhuangtaishuju: function getTableData_zhuangtaishuju(callback) {\n      this.axios.get(\"/guanqu/admin/ST_StationStatus_H\", {\n        params: {\n          STCD: this.info.STCD\n        }\n      }).then(function (res) {\n        var data = res.data.rows;\n\n        if (typeof callback == \"function\") {\n          callback(data);\n        }\n      });\n    },\n    // 更新水情历史数据表的数据\n    setTableData_zhuangtaishuju: function setTableData_zhuangtaishuju(data) {\n      this.table.zhuangtaishuju.Rows_filter = data;\n      console.log(685, data);\n    },\n    // 过滤水情历史数据表的数据\n    filterTableData_zhuangtaishuju: function filterTableData_zhuangtaishuju(data, callback) {\n      var _this4 = this;\n\n      var data = data.map(function (val) {\n        // val.TM = this.dateFilter(val.TM); // 过滤日期\n        val.VOL = _this4.Float_Filter(val.VOL, 1);\n        return val;\n      });\n\n      if (typeof callback == \"function\") {\n        callback(data);\n      }\n    },\n    // 根据行政区划编码获取行政区划\n    getCompartmentByADDVCD: function getCompartmentByADDVCD(callback) {\n      var ADDVCD = this.info.rowinfo.ADDVCD;\n\n      if (ADDVCD && ADDVCD != \"\") {\n        this.axios.get(\"/guanqu/admin/WRP_AD_B\", {\n          params: {\n            AD_CD: ADDVCD\n          }\n        }).then(function (res) {\n          var data = res.data.rows;\n\n          if (typeof callback == \"function\") {\n            callback(data);\n          }\n        });\n      }\n    },\n    // 处理日期时间选择器确定事件_状态数据\n    handleDatePickerChange: function handleDatePickerChange(item) {\n      this.table.zhuangtaishuju.currentPage = 1;\n      this.search_StationStatus();\n    },\n    // 查询运行工况状态数据历史表\n    search_StationStatus: function search_StationStatus() {\n      var _this5 = this;\n\n      this.table.zhuangtaishuju.loading = true; // 加载中\n\n      var body = {\n        _page: this.table[\"zhuangtaishuju\"].currentPage || 1,\n        _page_size: this.table[\"zhuangtaishuju\"].pageSizes || 20,\n        STCD: this.info.STCD\n      }; // 如果有选择日期进行查询，根据表格类型传递参数\n\n      if (this.table.zhuangtaishuju.date) {\n        var time = this.$FilterData.elDatePicker_Filter(this.table.zhuangtaishuju.date);\n        time = time.split(',');\n        body.Time_min = time[1];\n        body.Time_max = time[2]; // console.log(body.TM.split());\n      } // debugger;\n\n\n      this.$GetData.Survey_History_YXGK(\"historyTable\", body, {\n        default: true,\n        myFilter: function myFilter(data) {\n          data.map(function (val) {\n            val.currentPage = body._page;\n            val.pageSizes = body._page_size;\n            return val;\n          });\n          return data;\n        }\n      }, function (data) {\n        _this5.setTableTotal_zhuangtaishuju(data.total); // 设置状态数据表格总条数\n\n\n        _this5.setTableData_zhuangtaishuju(data.data); // 更新状态数据表的数据\n\n\n        body._page_size = 999999999;\n        body._page = 1;\n\n        _this5.$GetData.Survey_History_YXGK(\"historyTable\", body, {\n          default: true,\n          myFilter: function myFilter(data) {\n            data.map(function (val) {\n              val.currentPage = body._page;\n              val.pageSizes = body._page_size;\n              return val;\n            });\n            return data;\n          }\n        }, function (chartData) {\n          _this5.createChart_zhuangtaishuju(\"zhuangtaishujuChart\", \"zhuangtaishuju\", chartData.data); // 电压线型图\n\n        });\n\n        _this5.table.zhuangtaishuju.loading = false; // 加载取消\n      });\n    },\n    setTableTotal_zhuangtaishuju: function setTableTotal_zhuangtaishuju(total) {\n      this.table.zhuangtaishuju.total = total;\n    },\n    // 设置状态数据表默认查询日期\n    setTableDefaultDate_zhuangtaishuju: function setTableDefaultDate_zhuangtaishuju() {\n      var timeSlot = this.$App.zeroPointToNowOfTheDay();\n      this.setTableDate(\"zhuangtaishuju\", timeSlot);\n    },\n    // 设置 xx表格 时间选择器值\n    setTableDate: function setTableDate(tableName, val) {\n      this.table[tableName].date = val;\n    }\n  },\n  mounted: function mounted() {\n    var _this6 = this;\n\n    // 请求正常电压范围\n    // this.$GetData.Survey_Around_YXGK(null,body,false,data => {\n    //\n    // })\n    // 组件加载中\n    this.componentLoading(); // 获取详情数据\n\n    this.axios // .get(`/guanqu/table/details?ID=${this.info.rowinfo.STCD}&pk=STCD`)\n    .get(\"/guanqu/gongkuang/details?STCD=\".concat(this.info.rowinfo.STCD)).then(function (res) {\n      _this6.getCompartmentByADDVCD(function (data) {\n        _this6.siteInfo.AD_NM = data[0].AD_NM;\n      }); //获取预警数据\n\n\n      _this6.axios.get('/guanqu/table/ST_StationStatusType').then(function (res) {\n        // debugger;\n        console.log(res);\n        var dataVol = res.data.list[0],\n            volMin = dataVol.VOLMIN,\n            volMax = dataVol.VOLMAX;\n        _this6.ZCDY.VOLMIN = volMin;\n        _this6.ZCDY.VOLMAX = volMax;\n      }); // 根据河流编码获取河流名\n\n\n      _this6.$GetData.Base_R_I({\n        RVCD: _this6.info.rowinfo.RVCD\n      }, true, function (data) {\n        _this6.siteInfo.RVCD = data.data[0].RVNM;\n      }); // 根据流域编码获取流域名\n\n\n      _this6.$GetData.Base_B_I({\n        CTCD: _this6.info.rowinfo.CTCD\n      }, true, function (data) {\n        _this6.siteInfo.CTCD = data.data[0].CTNM;\n      }); // 加载站点数据\n\n\n      _this6.loadSiteData(res.data); // 组件加载取消\n\n\n      _this6.cancelComponentLoading(); // 设置状态数据表默认查询日期\n\n\n      _this6.setTableDefaultDate_zhuangtaishuju(); // 查询状态数据表的数据\n\n\n      _this6.search_StationStatus();\n    });\n  }\n};",null]}