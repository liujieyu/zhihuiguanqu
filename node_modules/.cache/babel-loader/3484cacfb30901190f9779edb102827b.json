{"remainingRequest":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\huangcaiplace\\zhihuiguanqu\\src\\components\\Details\\Details-zhafazhuangtai.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\huangcaiplace\\zhihuiguanqu\\src\\components\\Details\\Details-zhafazhuangtai.vue","mtime":1577669404030},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\babel.config.js","mtime":1577669403468},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.sort\";\nimport _defineProperty from \"D:\\\\huangcaiplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar oEcarts = document.getElementById(\"echartOD\");\nimport FilterMethods from \"../../assets/commonJS/FilterMethods\"; // 过滤方法\n\nexport default {\n  props: {\n    info: {}\n  },\n  data: function data() {\n    var _kaidulishi;\n\n    return {\n      OD: '',\n      // 激活标签栏\n      activeName: \"zhuangtaishuju\",\n      // 站点\n      siteInfo: {},\n      //   多选框对象\n      checkBox: {},\n      //   选择框对象\n      select: {},\n      // 表格\n      table: {\n        // 状态数据\n        kaidulishi: (_kaidulishi = {\n          // 表头设置\n          columns: {},\n          // 正在激活的表头\n          activeColumns: [{\n            type: \"index\",\n            title: \" \",\n            width: 60,\n            align: \"center\",\n            // 自定义序号\n            indexMethod: function indexMethod(item) {\n              var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n              return index;\n            },\n            ellipsis: true\n          }, {\n            title: \"时间\",\n            key: \"tm\",\n            width: 150,\n            align: \"center\",\n            sortable: \"custom\"\n          }, {\n            title: \"闸门开度(m)\",\n            width: 125,\n            key: \"OD\",\n            align: \"center\",\n            sortable: \"custom\"\n          }, {\n            width: 135,\n            title: \"闸前水位(m)\",\n            key: \"UPZ\",\n            align: \"center\",\n            sortable: \"custom\"\n          }, {\n            width: 135,\n            title: \"闸后水位(m)\",\n            key: \"DWZ\",\n            align: \"center\",\n            sortable: \"custom\"\n          }, {\n            width: 150,\n            title: \"流量(m³/s)\",\n            key: \"Q\",\n            align: \"center\",\n            sortable: \"custom\"\n          }],\n          // 表体内容\n          Rows: [],\n          // 过滤后的表体内容\n          Rows_filter: [],\n          // 表格是否加载中\n          loading: false,\n          // 日期时间选择器的选项配置\n          datePickerOptions: {\n            shortcuts: [{\n              text: \"最近6小时\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 6);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近12小时\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 12);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近24小时\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近36小时\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 36);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近72小时\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 72);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }]\n          },\n          // 日期时间选择器类型\n          datePickerType: \"datetimerange\",\n          // 日期时间选择器值\n          date: null,\n          // 表格高度\n          height: 430\n        }, _defineProperty(_kaidulishi, \"loading\", false), _defineProperty(_kaidulishi, \"total\", 0), _defineProperty(_kaidulishi, \"currentPage\", 1), _defineProperty(_kaidulishi, \"pageSizes\", 20), _kaidulishi)\n      },\n      // 图形\n      chart: {\n        zhuangtai: null\n      },\n      //   日期数据\n      date: {\n        shuiqing: \"\"\n      },\n      // 输入框对象\n      input: {\n        // 关系曲线换算的\n        huansuan: {\n          waterLever: \"\",\n          flowLever: \"\"\n        }\n      },\n      //   导出按钮加载控制\n      outPutLoading: false,\n      //   导出确认对话框控制\n      outPutModal: false,\n      // 整块区域的加载控制\n      boxLoading: false\n    };\n  },\n  mixins: [FilterMethods],\n  methods: {\n    // 绘制开度动态模拟图\n    // createEchartsOD(el) {\n    //     console.log('-------------', el)\n    //     let myChart = this.$echarts.init(el)\n    //     app.title = '柱状图框选';\n    //\n    //     var xAxisData = [];\n    //     var data1 = [];\n    //\n    //     xAxisData.push('已开度');\n    //     data1.push((Math.random() * 2).toFixed(2));\n    //     var itemStyle = {\n    //         normal: {},\n    //         emphasis: {\n    //             barBorderWidth: 1,\n    //             shadowBlur: 10,\n    //             shadowOffsetX: 0,\n    //             shadowOffsetY: 0,\n    //             shadowColor: 'rgba(0,0,0,0.5)'\n    //         }\n    //     };\n    //\n    //     let option = {\n    //         backgroundColor: '#eee',\n    //         legend: {\n    //             data: ['bar'],\n    //             align: 'left',\n    //             left: 10\n    //         },\n    //         brush: {\n    //             toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n    //             xAxisIndex: 0\n    //         },\n    //         toolbox: {\n    //             feature: {\n    //                 magicType: {\n    //                     type: ['stack', 'tiled']\n    //                 },\n    //                 dataView: {}\n    //             }\n    //         },\n    //         tooltip: {},\n    //         xAxis: {\n    //             show: false,\n    //             data: xAxisData,\n    //             name: 'X Axis',\n    //             silent: false,\n    //             axisLine: {onZero: true},\n    //             splitLine: {show: false},\n    //             splitArea: {show: false}\n    //         },\n    //         yAxis: [\n    //             {\n    //                 show: false,\n    //                 inverse: true,\n    //                 splitArea: {show: false}\n    //             },\n    //             {\n    //                 inverse: true,\n    //                 splitArea: {show: false}\n    //             },\n    //         ],\n    //         grid: {\n    //             left: 100\n    //         },\n    //\n    //         series: [\n    //             {\n    //                 name: 'bar',\n    //                 type: 'bar',\n    //                 stack: 'one',\n    //                 itemStyle: itemStyle,\n    //                 data: data1\n    //             }\n    //         ]\n    //     };\n    //\n    //     myChart.setOption(option);\n    // },\n    //   导出站点信息\n    outPutSiteInfo: function outPutSiteInfo() {\n      var _this = this;\n\n      //   关闭导出确认对话框\n      this.outPutModal = false; //   按钮加载\n\n      this.outPutLoading = true;\n      setTimeout(function () {\n        _this.outPutLoading = false;\n\n        _this.$Modal.success({\n          title: \"关于导出\",\n          content: \"站点信息表导出成功\"\n        });\n      }, 500);\n    },\n    //   确认导出\n    outPutSure: function outPutSure() {\n      this.outPutSiteInfo();\n    },\n    // 搜索\n    search_kaidulishi: function search_kaidulishi() {\n      var _this2 = this;\n\n      // 表格加载中\n      this.table.kaidulishi.loading = true; // 传递参数\n\n      var body = {\n        STCD: this.siteInfo.STCD,\n        _page: this.table.kaidulishi.currentPage || 1,\n        _page_size: this.table.kaidulishi.pageSizes || 20\n      }; // 如果有选择排序，则传递排序参数\n\n      if (this.table.kaidulishi.sort) {\n        var _sort = this.$FilterData.sort_Filter(this.table.kaidulishi.sort);\n\n        if (_sort) {\n          body._orderby = _sort;\n        }\n      } else {\n        body._orderby = \"TM desc\";\n      } // 如果有选择日期进行查询，根据表格类型传递参数\n\n\n      if (this.table.kaidulishi.date) {\n        var DTT = this.$FilterData.elDatePicker_Filter(this.table.kaidulishi.date).split(\",\");\n        body.Time_min = DTT[1];\n        body.Time_max = DTT[2];\n      }\n\n      this.$GetData.Survey_History_ZFZT(\"historyTable\", body, {\n        default: true,\n        myFilter: function myFilter(data) {\n          data.map(function (val) {\n            val.currentPage = body._page;\n            val.pageSizes = body._page_size;\n            return val;\n          });\n          return data;\n        }\n      }, function (data) {\n        _this2.setTableTotal(\"kaidulishi\", data.total);\n\n        _this2.setTableData(\"kaidulishi\", data.data);\n\n        _this2.table.kaidulishi.loading = false; // this.createChart_historyTable(\"ztChart\", \"historyTable\", data.data)\n\n        body._page_size = 999999999;\n        body._page = 1;\n\n        _this2.$GetData.Survey_History_ZFZT(\"historyTable\", body, {\n          default: true,\n          myFilter: function myFilter(data) {\n            data.map(function (val) {\n              val.currentPage = body._page;\n              val.pageSizes = body._page_size;\n              return val;\n            });\n            return data;\n          }\n        }, function (chartData) {\n          _this2.createChart_historyTable(\"ztChart\", \"historyTable\", chartData.data); // 水情表格\n\n        });\n      }); // this.getTableData_kaidulishi(body, (data) => {\n      // })\n    },\n    // 设置水情数据表格的总页数\n    setTableTotal: function setTableTotal(tableName, total) {\n      this.table[tableName].total = total;\n    },\n    // 绘图\n    createChart_historyTable: function createChart_historyTable(id, tableType, data) {\n      var ele = document.getElementById(id);\n\n      if (data.length > 0) {\n        var echartData = this.$App.transform_ZFZT_data_into_ehart_data(data, tableType); // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n\n        if (!this.chart.zhuangtai) {\n          this.chart.zhuangtai = this.$echarts.init(ele);\n        }\n\n        this.chart.zhuangtai.setOption({\n          title: {\n            text: echartData.chartName\n          },\n          tooltip: {\n            trigger: \"axis\"\n          },\n          legend: {\n            data: [echartData.y1.name, echartData.y2.name, echartData.y3.name],\n            y: \"bottom\"\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              mark: {\n                show: true\n              },\n              magicType: {\n                show: true,\n                type: [\"line\", \"bar\"]\n              },\n              restore: {\n                show: true\n              },\n              saveAsImage: {\n                show: true\n              }\n            }\n          },\n          calculable: true,\n          animation: true,\n          xAxis: [{\n            type: \"category\",\n            // boundaryGap: false,\n            data: echartData.x.list\n          }],\n          yAxis: [{\n            name: \"\".concat(echartData.y1.name, \" m\\xB3/s\"),\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value} \"\n            },\n            scale: true\n          }, {\n            name: \"\\u95F8\\u9600\\u4E0A/\\u4E0B\\u6C34\\u4F4Dm\",\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value} \"\n            },\n            scale: true\n          }],\n          series: [{\n            name: echartData.y1.name,\n            type: \"line\",\n            data: echartData.y1.list\n          }, {\n            name: echartData.y2.name,\n            type: \"line\",\n            data: echartData.y2.list,\n            yAxisIndex: 1\n          }, {\n            name: echartData.y3.name,\n            type: \"line\",\n            data: echartData.y3.list,\n            yAxisIndex: 1\n          }]\n        });\n      }\n    },\n    // 加载站点数据\n    loadSiteData: function loadSiteData(data) {\n      this.siteInfo = data;\n    },\n    // 组件加载中\n    componentLoading: function componentLoading() {\n      this.boxLoading = true;\n    },\n    // 取消组件加载\n    cancelComponentLoading: function cancelComponentLoading() {\n      this.boxLoading = false;\n    },\n    // 处理页码切换\n    handleCurrentChange_kaidulishi: function handleCurrentChange_kaidulishi(index) {\n      this.table[\"kaidulishi\"].currentPage = index;\n      this.search_kaidulishi();\n    },\n    // 处理每页显示条数切换\n    handleSizeChange_kaidulishi: function handleSizeChange_kaidulishi(pageSizes) {\n      this.table[\"kaidulishi\"].pageSizes = pageSizes;\n      this.table[\"kaidulishi\"].currentPage = 1;\n      this.search_kaidulishi();\n    },\n    // 设置开度历史表默认查询日期\n    setTableDefaultDate_kaidulishi: function setTableDefaultDate_kaidulishi() {\n      var end = new Date();\n      var start = zeroPointOfTheDay();\n      var timeSlot = [start, end];\n      this.setTableDate(\"kaidulishi\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 获取对应水情历史数据表的数据\n    getTableData_kaidulishi: function getTableData_kaidulishi(body, callback) {\n      var _this3 = this;\n\n      console.log(\"getTableData_kaidulishi\");\n      this.axios.get(\"/guanqu/zhafakongzhi/kaidulishi\", {\n        // params: {\n        //   STCD: this.info.STCD\n        // }\n        params: body\n      }).then(function (res) {\n        var data = res.data.list;\n        console.log(\"========================\");\n        console.log(data);\n        var total = res.data.total;\n        _this3.OD = data[0].OD;\n        data = data.map(function (val) {\n          val.currentPage = _this3.table.kaidulishi.currentPage;\n          val.pageSizes = _this3.table.kaidulishi.pageSizes;\n          val.TM = _this3.dateFilter(val.TM);\n          val.OD = _this3.Z_Filter(val.OD);\n          val.UPZ = _this3.Z_Filter(val.UPZ);\n          val.DWZ = _this3.Z_Filter(val.DWZ);\n          val.Q = _this3.Z_Filter(val.Q, 3);\n          return val;\n        });\n\n        if (typeof callback == \"function\") {\n          callback({\n            data: data,\n            total: total\n          });\n        }\n      });\n    },\n    // 更新 XX 表格的数据\n    setTableData: function setTableData(tableName, data) {\n      this.table[tableName].Rows_filter = data;\n    },\n    // 根据行政区划编码获取行政区划\n    getCompartmentByADDVCD: function getCompartmentByADDVCD(callback) {\n      var ADDVCD = this.info.rowinfo.ADDVCD;\n\n      if (ADDVCD && ADDVCD != \"\") {\n        this.axios.get(\"/guanqu/admin/WRP_AD_B\", {\n          params: {\n            AD_CD: ADDVCD\n          }\n        }).then(function (res) {\n          var data = res.data.rows;\n\n          if (typeof callback == \"function\") {\n            callback(data);\n          }\n        });\n      }\n    },\n    // 处理日期时间选择器确定事件_开度历史\n    handleDatePickerChange_kaidulishi: function handleDatePickerChange_kaidulishi(item) {\n      this.table.kaidulishi.currentPage = 1;\n      this.search_kaidulishi();\n    },\n    // 设置 xx表格 时间选择器值\n    setTableDate: function setTableDate(tableName, val) {\n      this.table[tableName].date = val;\n    },\n    // 排序\n    sort_change_kaidulishi: function sort_change_kaidulishi(item) {\n      this.table.kaidulishi.sort = item;\n      this.search_kaidulishi();\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    // this.createEchartsOD(document.getElementById('echartOD'))\n    // 组件加载中\n    this.componentLoading(); // 获取详情数据\n\n    this.axios.get(\"/guanqu/table/details?ID=\".concat(this.info.rowinfo.STCD, \"&pk=STCD\")).then(function (res) {\n      _this4.getCompartmentByADDVCD(function (data) {\n        _this4.siteInfo.AD_NM = data[0].AD_NM;\n      }); // 根据河流编码获取河流名\n\n\n      _this4.$GetData.Base_R_I({\n        RVCD: _this4.info.rowinfo.RVCD\n      }, true, function (data) {\n        _this4.siteInfo.RVCD = data.data[0].RVNM;\n      }); // 根据流域编码获取流域名\n\n\n      _this4.$GetData.Base_B_I({\n        CTCD: _this4.info.rowinfo.CTCD\n      }, true, function (data) {\n        _this4.siteInfo.CTCD = data.data[0].CTNM;\n      }); // 加载站点数据\n\n\n      _this4.loadSiteData(res.data); // 组件加载取消\n\n\n      _this4.cancelComponentLoading(); // 设置开度历史数据表默认查询日期\n\n\n      _this4.setTableDefaultDate_kaidulishi(); // 查询开度历史数据表的数据\n\n\n      _this4.search_kaidulishi();\n    });\n    this.getTableData_kaidulishi();\n  }\n};",{"version":3,"sources":["Details-zhafazhuangtai.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div v-loading=\"boxLoading\">\r\n        <el-tabs type=\"border-card\" v-model=\"activeName\" @tab-click=\"handleClick\" style=\"\">\r\n            <!-- 站点信息 -->\r\n            <el-tab-pane name=\"zhandianxinxi\">\r\n        <span slot=\"label\">\r\n          <i class=\"el-icon-tickets\"></i> 站点信息\r\n        </span>\r\n                <div class=\"drawer-profile\">\r\n                    <!-- 导出按钮 -->\r\n                    <Button size=\"small\" class=\"outPutButton\" type=\"success\" @click=\"$App.developing_tip\">\r\n                        <div>导出</div>\r\n                    </Button>\r\n                    <!-- 信息表 -->\r\n                    <div>\r\n                        <!-- 信息内容 -->\r\n                        <div>\r\n                            <!-- table start -->\r\n                            <table\r\n                                    style=\"border: 1px solid #EBEEF5\"\r\n                                    border\r\n                                    cellspacing=\"0\"\r\n                                    width=\"100%\"\r\n                                    class=\"table_detail\"\r\n                            >\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">站名：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\" style=\"border-right: 1px solid #EBEEF5\">\r\n                                        {{\r\n                                        siteInfo.STNM || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">国家定类：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">\r\n                                        {{ this.STTP_Filter(siteInfo.STTP) || \"&nbsp;\"\r\n                                        }}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">等级：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\" style=\"border-right: 1px solid #EBEEF5\">\r\n                                        {{\r\n                                        this.$FilterData.STGR_Filter(siteInfo.STGR) || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">行政区划：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">{{ siteInfo.AD_NM || \"&nbsp;\" }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">经度：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\" style=\"border-right: 1px solid #EBEEF5\">\r\n                                        {{\r\n                                        siteInfo.LGTD || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">纬度：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">{{ siteInfo.LTTD || \"&nbsp;\" }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">站址：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\" style=\"border-right: 1px solid #EBEEF5\">\r\n                                        {{\r\n                                        siteInfo.STLC || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">水系：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">{{ siteInfo.HNNM || \"&nbsp;\" }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">流域：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\" style=\"border-right: 1px solid #EBEEF5\">\r\n                                        {{\r\n                                        siteInfo.CTCD || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">河流：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">{{ siteInfo.RVCD || \"&nbsp;\" }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\">建站日期：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\" style=\"border-right: 1px solid #EBEEF5\">\r\n                                        {{\r\n                                        siteInfo.ESSTDT || \"&nbsp;\" }}\r\n                                    </td>\r\n                                    <td align=\"right\" class=\"dt_name\">建设单位：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\">{{ siteInfo.DLOG || \"&nbsp;\" }}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td align=\"right\" class=\"dt_name\" style=\"border-bottom: none\">录入时间：</td>\r\n                                    <td\r\n                                            align=\"center\"\r\n                                            class=\"dt_vale\"\r\n                                            style=\"border-right: 1px solid #EBEEF5;border-bottom: none\"\r\n                                    ></td>\r\n                                    <td align=\"right\" class=\"dt_name\" style=\"border-bottom: none\">图像按钮：</td>\r\n                                    <td align=\"center\" class=\"dt_vale\" style=\"border-bottom: none\">\r\n                                        <Button type=\"info\" @click=\"$App.developing_tip\" size=\"small\">查看图片</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                            <!-- table end -->\r\n\r\n                            <!-- <Row class=\"row\">\r\n                                            <Col span=\"5\" align=\"right\">站名：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.STNM || \"&nbsp;\" }}</Col>\r\n                                            <Col span=\"5\" align=\"right\">国家定类：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ this.STTP_Filter(siteInfo.STTP) || \"&nbsp;\" }}</Col>\r\n                                          </Row>\r\n                                          <Row class=\"row\">\r\n                                            <Col span=\"5\" align=\"right\">等级：</Col>\r\n                                            <Col\r\n                                              span=\"7\"\r\n                                              align=\"center\"\r\n                                                    >{{ this.$FilterData.STGR_Filter(siteInfo.STGR) ||                                                                                                                                                   \"&nbsp;\" }}</Col>\r\n                                                    <Col span=\"5\" align=\"right\">行政区划：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.AD_NM || \"&nbsp;\" }}</Col>\r\n                                          </Row>\r\n                                          <Row class=\"row\">\r\n                                            <Col span=\"5\" align=\"right\">经度：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.LGTD || \"&nbsp;\" }}</Col>\r\n                                            <Col span=\"5\" align=\"right\">纬度：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.LTTD || \"&nbsp;\" }}</Col>\r\n                                          </Row>\r\n                                          <Row class=\"row\">\r\n                                            <Col span=\"5\" align=\"right\">站址：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.STLC || \"&nbsp;\" }}</Col>\r\n                                            <Col span=\"5\" align=\"right\">水系：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.HNNM || \"&nbsp;\" }}</Col>\r\n                                          </Row>\r\n                                          <Row class=\"row\">\r\n                                            <Col span=\"5\" align=\"right\">流域：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.CTCD || \"&nbsp;\" }}</Col>\r\n                                            <Col span=\"5\" align=\"right\">河流：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.RVCD || \"&nbsp;\" }}</Col>\r\n                                          </Row>\r\n                                          <Row class=\"row\">\r\n                                            <Col span=\"5\" align=\"right\">建站日期：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.ESSTDT || \"&nbsp;\" }}</Col>\r\n                                            <Col span=\"5\" align=\"right\">建设单位：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.DLOG || \"&nbsp;\" }}</Col>\r\n                                          </Row>\r\n                                          <Row class=\"row\">\r\n                                            <Col span=\"5\" align=\"right\">隶属单位：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.ATCUNIT || \"&nbsp;\" }}</Col>\r\n                                            <Col span=\"5\" align=\"right\">管理单位：</Col>\r\n                                            <Col span=\"7\" align=\"center\">{{ siteInfo.DLOG || \"&nbsp;\" }}</Col>\r\n                            </Row>-->\r\n                            <!--              <Row class=\"row\">-->\r\n                            <!--                <Col span=\"5\" align=\"right\">录入时间：</Col>-->\r\n                            <!--                <Col-->\r\n                            <!--                  span=\"7\"-->\r\n                            <!--                  align=\"center\"-->\r\n                            <!--                >{{ this.$FilterData.dateFilter(siteInfo.MODITIME,8) || \"&nbsp;\" }}</Col>-->\r\n                            <!--                <Col span=\"5\" align=\"right\">图像按钮：</Col>-->\r\n                            <!--                <Col span=\"12\" align=\"center\" style=\"border-right: 1px solid rgb(200, 200, 200); \">-->\r\n                            <!--                  <Button type=\"info\" @click=\"$App.developing_tip\" size=\"small\">查看图片</Button>-->\r\n                            <!--                </Col>-->\r\n                            <!--              </Row>-->\r\n                        </div>\r\n                        <!-- 分割线 -->\r\n                        <div class=\"divider\"></div>\r\n                        <Row>\r\n                            <el-col class=\"dt_remark\">\r\n                                <Col span=\"24\">备注：{{ siteInfo.COMMENTS || \"&nbsp;\" }}</Col>\r\n                            </el-col>\r\n                        </Row>\r\n                    </div>\r\n                    <!-- 分割线 -->\r\n                    <div class=\"divider\"></div>\r\n\r\n                    <!-- 分割线 -->\r\n                    <div class=\"divider\"></div>\r\n                    <!-- 关联渠道和闸门 -->\r\n                    <div>\r\n                        <!-- <Row class=\"relationRow\">\r\n                                      <Col span=\"4\">关联要素</Col>\r\n                                      <Col span=\"20\">\r\n                                        <Button\r\n                                          @click=\"$App.developing_tip\"\r\n                                          v-for=\"item in siteInfo.GUANLIAN\"\r\n                                        >{{ item.SLNM }}</Button>\r\n                                        <div v-if=\"siteInfo.GUANLIAN && siteInfo.GUANLIAN.length == 0\">暂无此站点的关联要素</div>\r\n                                      </Col>\r\n                        </Row>-->\r\n                        <el-col\r\n                                style=\"border: 1px #EBEEF5 solid;border-radius: 2px;padding-left: 10px;padding-bottom: 20px\"\r\n                        >\r\n                            <Row class=\"relationRow\">\r\n                                <Col span=\"4\">同时监测：</Col>\r\n                                <Col span=\"20\">\r\n                                    <!-- <Button\r\n                                                        @click=\"$App.developing_tip\"\r\n                                                        v-for=\"item in siteInfo.GUANLIAN\"\r\n                                    >{{ item.SLNM }}</Button>-->\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row class=\"relationRow\">\r\n                                <Col span=\"4\">关联站点：</Col>\r\n                                <Col span=\"20\">\r\n                                    <!-- <Button\r\n                                                        @click=\"$App.developing_tip\"\r\n                                                        v-for=\"item in siteInfo.GUANLIAN\"\r\n                                    >{{ item.SLNM }}</Button>-->\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row class=\"relationRow\">\r\n                                <Col span=\"4\">关联要素：</Col>\r\n                                <Col span=\"20\">\r\n                                    <!-- <Button\r\n                                                        @click=\"$App.developing_tip\"\r\n                                                        v-for=\"item in siteInfo.GUANLIAN\"\r\n                                    >{{ item.SLNM }}</Button>-->\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                        </el-col>\r\n                    </div>\r\n                </div>\r\n            </el-tab-pane>\r\n            <!-- 状态数据 -->\r\n            <el-tab-pane name=\"zhuangtaishuju\">\r\n        <span slot=\"label\">\r\n          <Icon type=\"ios-cog-outline\" style=\"font-size:20px\"/>状态数据\r\n        </span>\r\n                <div class=\"drawer-profile\">\r\n                    <div>\r\n                        <!-- 选项卡 -->\r\n                        <Tabs type=\"card\">\r\n                            <!-- 表格 -->\r\n                            <TabPane label=\"闸阀门开度历史\">\r\n                                <!-- 查询，导出行 -->\r\n                                <Row :gutter=\"16\" type=\"flex\" justify=\"end\" align=\"middle\">\r\n                                    <Col span=\"2\">\r\n                                        <span style=\"letter-spacing:2px\">查询</span>\r\n                                    </Col>\r\n                                    <!-- 开始到结束时间选择 -->\r\n                                    <Col span=\"19\">\r\n                                        <el-date-picker\r\n                                                v-model=\"table.kaidulishi.date\"\r\n                                                range-separator=\"至\"\r\n                                                start-placeholder=\"开始日期\"\r\n                                                end-placeholder=\"结束日期\"\r\n                                                @change=\"handleDatePickerChange_kaidulishi\"\r\n                                                :picker-options=\"table.kaidulishi.datePickerOptions\"\r\n                                                unlink-panels\r\n                                                :type=\"table.kaidulishi.datePickerType\"\r\n                                                size=\"mini\"\r\n                                        ></el-date-picker>\r\n                                    </Col>\r\n                                </Row>\r\n                                <!-- 分割线 -->\r\n                                <div class=\"divider\"></div>\r\n                                <!-- 表格用于展示数据 -->\r\n                                <div>\r\n                                    <Table\r\n                                            :columns=\"table.kaidulishi.activeColumns\"\r\n                                            :data=\"table.kaidulishi.Rows_filter\"\r\n                                            :loading=\"table.kaidulishi.loading\"\r\n                                            border\r\n                                            size=\"small\"\r\n                                            :height=\"table.kaidulishi.height\"\r\n                                            @on-sort-change=\"sort_change_kaidulishi\"\r\n                                    ></Table>\r\n                                    <!-- 分割线 -->\r\n                                    <div class=\"divider\"></div>\r\n                                    <!-- 分页器 -->\r\n                                    <el-pagination\r\n                                            background\r\n                                            :page-size=\"table.kaidulishi.pageSizes\"\r\n                                            layout=\"sizes, total, prev, pager, next, jumper \"\r\n                                            :page-sizes=\"[20, 50, 100, 200]\"\r\n                                            :total=\"table.kaidulishi.total\"\r\n                                            :current-page=\"table.kaidulishi.currentPage\"\r\n                                            :pager-count=\"5\"\r\n                                            @current-change=\"handleCurrentChange_kaidulishi\"\r\n                                            @size-change=\"handleSizeChange_kaidulishi\"\r\n                                            class=\"pageController\"\r\n                                            small\r\n                                    ></el-pagination>\r\n                                    <!-- 分割线 -->\r\n                                    <div class=\"divider\"></div>\r\n                                </div>\r\n                            </TabPane>\r\n<!--                            <TabPane label=\"动态模拟图\">-->\r\n<!--                                &lt;!&ndash; 绘图 &ndash;&gt;-->\r\n<!--                                <div class=\"waterLever\">-->\r\n<!--                                    <Row type=\"flex\" justify=\"center\">-->\r\n<!--                                        <span style=\"line-height:3rem;font-size:20px\">阀门已开高度：{{OD}}m</span>-->\r\n<!--                                    </Row>-->\r\n<!--                                    &lt;!&ndash; 分割线 &ndash;&gt;-->\r\n<!--                                    <div class=\"divider\"></div>-->\r\n<!--                                    <div id=\"echartOD\" width=\"300\" height=\"400\"></div>-->\r\n<!--                                </div>-->\r\n<!--                            </TabPane>-->\r\n                            <TabPane label=\"图形\">\r\n                                <!-- 绘图 -->\r\n                                <div\r\n                                        v-show=\"table.kaidulishi.Rows_filter.length > 0\"\r\n                                        id=\"ztChart\"\r\n                                        :style=\"{width: '500px', height: '350px',margin: 'auto'}\"\r\n                                ></div>\r\n                                <div\r\n                                        v-show=\"table.kaidulishi.Rows_filter.length == 0\"\r\n                                        :style=\"{width: '500px', height: '350px',margin: 'auto', display:'flex', alignItems:'center', justifyContent: 'center'}\"\r\n                                >暂无数据\r\n                                </div>\r\n                            </TabPane>\r\n                        </Tabs>\r\n\r\n                        <!-- 分割线 -->\r\n                        <!-- <div class=\"divider\"></div> -->\r\n                    </div>\r\n                </div>\r\n            </el-tab-pane>\r\n        </el-tabs>\r\n\r\n        <!-- 导出提示对话框 -->\r\n        <Modal\r\n                v-model=\"outPutModal\"\r\n                v-loading=\"loading\"\r\n                title=\"关于导出\"\r\n                @on-ok=\"outPutSure\"\r\n                @on-cancel=\"cancel\"\r\n        >\r\n            <p>您确认导出该站点的信息表吗？</p>\r\n        </Modal>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    const oEcarts = document.getElementById(\"echartOD\");\r\n    import FilterMethods from \"../../assets/commonJS/FilterMethods\"; // 过滤方法\r\n    export default {\r\n        props: {\r\n            info: {}\r\n        },\r\n        data() {\r\n            return {\r\n                OD: '',\r\n                // 激活标签栏\r\n                activeName: \"zhuangtaishuju\",\r\n                // 站点\r\n                siteInfo: {},\r\n                //   多选框对象\r\n                checkBox: {},\r\n                //   选择框对象\r\n                select: {},\r\n                // 表格\r\n                table: {\r\n                    // 状态数据\r\n                    kaidulishi: {\r\n                        // 表头设置\r\n                        columns: {},\r\n                        // 正在激活的表头\r\n                        activeColumns: [\r\n                            {\r\n                                type: \"index\",\r\n                                title: \" \",\r\n                                width: 60,\r\n                                align: \"center\",\r\n                                // 自定义序号\r\n                                indexMethod(item) {\r\n                                    var index =\r\n                                        item._index + 1 + (item.currentPage - 1) * item.pageSizes;\r\n                                    return index;\r\n                                },\r\n                                ellipsis: true\r\n                            },\r\n                            {\r\n                                title: \"时间\",\r\n                                key: \"tm\",\r\n                                width: 150,\r\n                                align: \"center\",\r\n                                sortable: \"custom\"\r\n                            },\r\n                            {\r\n                                title: \"闸门开度(m)\",\r\n                                width: 125,\r\n                                key: \"OD\",\r\n                                align: \"center\",\r\n                                sortable: \"custom\"\r\n                            },\r\n                            {\r\n                                width: 135,\r\n                                title: \"闸前水位(m)\",\r\n                                key: \"UPZ\",\r\n                                align: \"center\",\r\n                                sortable: \"custom\"\r\n                            },\r\n                            {\r\n                                width: 135,\r\n                                title: \"闸后水位(m)\",\r\n                                key: \"DWZ\",\r\n                                align: \"center\",\r\n                                sortable: \"custom\"\r\n                            },\r\n                            {\r\n                                width: 150,\r\n                                title: \"流量(m³/s)\",\r\n                                key: \"Q\",\r\n                                align: \"center\",\r\n                                sortable: \"custom\"\r\n                            }\r\n                        ],\r\n                        // 表体内容\r\n                        Rows: [],\r\n                        // 过滤后的表体内容\r\n                        Rows_filter: [],\r\n                        // 表格是否加载中\r\n                        loading: false,\r\n                        // 日期时间选择器的选项配置\r\n                        datePickerOptions: {\r\n                            shortcuts: [\r\n                                {\r\n                                    text: \"最近6小时\",\r\n                                    onClick(picker) {\r\n                                        const end = new Date();\r\n                                        const start = new Date();\r\n                                        start.setTime(start.getTime() - 3600 * 1000 * 6);\r\n                                        picker.$emit(\"pick\", [start, end]);\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: \"最近12小时\",\r\n                                    onClick(picker) {\r\n                                        const end = new Date();\r\n                                        const start = new Date();\r\n                                        start.setTime(start.getTime() - 3600 * 1000 * 12);\r\n                                        picker.$emit(\"pick\", [start, end]);\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: \"最近24小时\",\r\n                                    onClick(picker) {\r\n                                        const end = new Date();\r\n                                        const start = new Date();\r\n                                        start.setTime(start.getTime() - 3600 * 1000 * 24);\r\n                                        picker.$emit(\"pick\", [start, end]);\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: \"最近36小时\",\r\n                                    onClick(picker) {\r\n                                        const end = new Date();\r\n                                        const start = new Date();\r\n                                        start.setTime(start.getTime() - 3600 * 1000 * 36);\r\n                                        picker.$emit(\"pick\", [start, end]);\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: \"最近72小时\",\r\n                                    onClick(picker) {\r\n                                        const end = new Date();\r\n                                        const start = new Date();\r\n                                        start.setTime(start.getTime() - 3600 * 1000 * 72);\r\n                                        picker.$emit(\"pick\", [start, end]);\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        // 日期时间选择器类型\r\n                        datePickerType: \"datetimerange\",\r\n                        // 日期时间选择器值\r\n                        date: null,\r\n                        // 表格高度\r\n                        height: 430,\r\n                        // 表格是否加载中\r\n                        loading: false,\r\n                        // 总条数\r\n                        total: 0,\r\n                        // 当前页\r\n                        currentPage: 1,\r\n                        // 每页显示数量\r\n                        pageSizes: 20\r\n                    }\r\n                },\r\n                // 图形\r\n                chart: {\r\n                    zhuangtai: null\r\n                },\r\n                //   日期数据\r\n                date: {\r\n                    shuiqing: \"\"\r\n                },\r\n                // 输入框对象\r\n                input: {\r\n                    // 关系曲线换算的\r\n                    huansuan: {\r\n                        waterLever: \"\",\r\n                        flowLever: \"\"\r\n                    }\r\n                },\r\n                //   导出按钮加载控制\r\n                outPutLoading: false,\r\n                //   导出确认对话框控制\r\n                outPutModal: false,\r\n                // 整块区域的加载控制\r\n                boxLoading: false\r\n            };\r\n        },\r\n        mixins: [FilterMethods],\r\n        methods: {\r\n            // 绘制开度动态模拟图\r\n            // createEchartsOD(el) {\r\n            //     console.log('-------------', el)\r\n            //     let myChart = this.$echarts.init(el)\r\n            //     app.title = '柱状图框选';\r\n            //\r\n            //     var xAxisData = [];\r\n            //     var data1 = [];\r\n            //\r\n            //     xAxisData.push('已开度');\r\n            //     data1.push((Math.random() * 2).toFixed(2));\r\n            //     var itemStyle = {\r\n            //         normal: {},\r\n            //         emphasis: {\r\n            //             barBorderWidth: 1,\r\n            //             shadowBlur: 10,\r\n            //             shadowOffsetX: 0,\r\n            //             shadowOffsetY: 0,\r\n            //             shadowColor: 'rgba(0,0,0,0.5)'\r\n            //         }\r\n            //     };\r\n            //\r\n            //     let option = {\r\n            //         backgroundColor: '#eee',\r\n            //         legend: {\r\n            //             data: ['bar'],\r\n            //             align: 'left',\r\n            //             left: 10\r\n            //         },\r\n            //         brush: {\r\n            //             toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n            //             xAxisIndex: 0\r\n            //         },\r\n            //         toolbox: {\r\n            //             feature: {\r\n            //                 magicType: {\r\n            //                     type: ['stack', 'tiled']\r\n            //                 },\r\n            //                 dataView: {}\r\n            //             }\r\n            //         },\r\n            //         tooltip: {},\r\n            //         xAxis: {\r\n            //             show: false,\r\n            //             data: xAxisData,\r\n            //             name: 'X Axis',\r\n            //             silent: false,\r\n            //             axisLine: {onZero: true},\r\n            //             splitLine: {show: false},\r\n            //             splitArea: {show: false}\r\n            //         },\r\n            //         yAxis: [\r\n            //             {\r\n            //                 show: false,\r\n            //                 inverse: true,\r\n            //                 splitArea: {show: false}\r\n            //             },\r\n            //             {\r\n            //                 inverse: true,\r\n            //                 splitArea: {show: false}\r\n            //             },\r\n            //         ],\r\n            //         grid: {\r\n            //             left: 100\r\n            //         },\r\n            //\r\n            //         series: [\r\n            //             {\r\n            //                 name: 'bar',\r\n            //                 type: 'bar',\r\n            //                 stack: 'one',\r\n            //                 itemStyle: itemStyle,\r\n            //                 data: data1\r\n            //             }\r\n            //         ]\r\n            //     };\r\n            //\r\n            //     myChart.setOption(option);\r\n            // },\r\n\r\n\r\n            //   导出站点信息\r\n            outPutSiteInfo() {\r\n                //   关闭导出确认对话框\r\n                this.outPutModal = false;\r\n                //   按钮加载\r\n                this.outPutLoading = true;\r\n                setTimeout(() => {\r\n                    this.outPutLoading = false;\r\n                    this.$Modal.success({\r\n                        title: \"关于导出\",\r\n                        content: \"站点信息表导出成功\"\r\n                    });\r\n                }, 500);\r\n            },\r\n            //   确认导出\r\n            outPutSure() {\r\n                this.outPutSiteInfo();\r\n            },\r\n            // 搜索\r\n            search_kaidulishi() {\r\n                // 表格加载中\r\n                this.table.kaidulishi.loading = true;\r\n\r\n                // 传递参数\r\n                var body = {\r\n                    STCD: this.siteInfo.STCD,\r\n                    _page: this.table.kaidulishi.currentPage || 1,\r\n                    _page_size: this.table.kaidulishi.pageSizes || 20\r\n                };\r\n\r\n                // 如果有选择排序，则传递排序参数\r\n                if (this.table.kaidulishi.sort) {\r\n                    var _sort = this.$FilterData.sort_Filter(this.table.kaidulishi.sort);\r\n                    if (_sort) {\r\n                        body._orderby = _sort;\r\n                    }\r\n                } else {\r\n                    body._orderby = `TM desc`;\r\n                }\r\n\r\n                // 如果有选择日期进行查询，根据表格类型传递参数\r\n                if (this.table.kaidulishi.date) {\r\n                    var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.kaidulishi.date)\r\n                        .split(\",\");\r\n                    body.Time_min = DTT[1];\r\n                    body.Time_max = DTT[2];\r\n                }\r\n                this.$GetData.Survey_History_ZFZT(\r\n                    \"historyTable\",\r\n                    body,\r\n                    {\r\n                        default: true,\r\n                        myFilter: data => {\r\n                            data.map(val => {\r\n                                val.currentPage = body._page;\r\n                                val.pageSizes = body._page_size;\r\n                                return val;\r\n                            });\r\n                            return data;\r\n                        }\r\n                    },\r\n                    data => {\r\n                        this.setTableTotal(\"kaidulishi\", data.total);\r\n                        this.setTableData(\"kaidulishi\", data.data);\r\n                        this.table.kaidulishi.loading = false;\r\n                        // this.createChart_historyTable(\"ztChart\", \"historyTable\", data.data)\r\n                        body._page_size = 999999999;\r\n                        body._page = 1;\r\n                        this.$GetData.Survey_History_ZFZT(\r\n                            \"historyTable\",\r\n                            body,\r\n                            {\r\n                                default: true,\r\n                                myFilter: data => {\r\n                                    data.map(val => {\r\n                                        val.currentPage = body._page;\r\n                                        val.pageSizes = body._page_size;\r\n                                        return val;\r\n                                    });\r\n                                    return data;\r\n                                }\r\n                            },\r\n                            chartData => {\r\n                                this.createChart_historyTable(\r\n                                    \"ztChart\",\r\n                                    \"historyTable\",\r\n                                    chartData.data\r\n                                ); // 水情表格\r\n                            }\r\n                        );\r\n                    }\r\n                );\r\n\r\n                // this.getTableData_kaidulishi(body, (data) => {\r\n\r\n                // })\r\n            },\r\n            // 设置水情数据表格的总页数\r\n            setTableTotal(tableName, total) {\r\n                this.table[tableName].total = total;\r\n            },\r\n            // 绘图\r\n            createChart_historyTable(id, tableType, data) {\r\n                var ele = document.getElementById(id);\r\n\r\n                if (data.length > 0) {\r\n                    var echartData = this.$App.transform_ZFZT_data_into_ehart_data(\r\n                        data,\r\n                        tableType\r\n                    ); // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n\r\n                    if (!this.chart.zhuangtai) {\r\n                        this.chart.zhuangtai = this.$echarts.init(ele);\r\n                    }\r\n                    this.chart.zhuangtai.setOption({\r\n                        title: {\r\n                            text: echartData.chartName\r\n                        },\r\n                        tooltip: {\r\n                            trigger: \"axis\"\r\n                        },\r\n                        legend: {\r\n                            data: [echartData.y1.name, echartData.y2.name, echartData.y3.name],\r\n                            y: \"bottom\"\r\n                        },\r\n                        toolbox: {\r\n                            show: true,\r\n                            feature: {\r\n                                mark: {show: true},\r\n                                magicType: {show: true, type: [\"line\", \"bar\"]},\r\n                                restore: {show: true},\r\n                                saveAsImage: {show: true}\r\n                            }\r\n                        },\r\n                        calculable: true,\r\n                        animation: true,\r\n                        xAxis: [\r\n                            {\r\n                                type: \"category\",\r\n                                // boundaryGap: false,\r\n                                data: echartData.x.list\r\n                            }\r\n                        ],\r\n                        yAxis: [\r\n                            {\r\n                                name: `${echartData.y1.name} m³/s`,\r\n                                type: \"value\",\r\n                                axisLabel: {\r\n                                    formatter: \"{value} \"\r\n                                },\r\n                                scale: true\r\n                            },\r\n                            {\r\n                                name: `闸阀上/下水位m`,\r\n                                type: \"value\",\r\n                                axisLabel: {\r\n                                    formatter: \"{value} \"\r\n                                },\r\n                                scale: true\r\n                            },\r\n                            // {\r\n                            //     name: ` `,\r\n                            //     type: \"value\",\r\n                            //     axisLabel: {\r\n                            //         formatter: \"{value} \"\r\n                            //     },\r\n                            //     scale: true\r\n                            // }\r\n                        ],\r\n                        series: [\r\n                            {\r\n                                name: echartData.y1.name,\r\n                                type: \"line\",\r\n                                data: echartData.y1.list\r\n                            },\r\n                            {\r\n                                name: echartData.y2.name,\r\n                                type: \"line\",\r\n                                data: echartData.y2.list,\r\n                                yAxisIndex: 1\r\n                            },\r\n                            {\r\n                                name: echartData.y3.name,\r\n                                type: \"line\",\r\n                                data: echartData.y3.list,\r\n                                yAxisIndex: 1\r\n                            }\r\n                        ]\r\n                    });\r\n                }\r\n            },\r\n            // 加载站点数据\r\n            loadSiteData(data) {\r\n                this.siteInfo = data;\r\n            },\r\n            // 组件加载中\r\n            componentLoading() {\r\n                this.boxLoading = true;\r\n            },\r\n            // 取消组件加载\r\n            cancelComponentLoading() {\r\n                this.boxLoading = false;\r\n            },\r\n            // 处理页码切换\r\n            handleCurrentChange_kaidulishi(index) {\r\n                this.table[\"kaidulishi\"].currentPage = index;\r\n                this.search_kaidulishi();\r\n            },\r\n            // 处理每页显示条数切换\r\n            handleSizeChange_kaidulishi(pageSizes) {\r\n                this.table[\"kaidulishi\"].pageSizes = pageSizes;\r\n                this.table[\"kaidulishi\"].currentPage = 1;\r\n                this.search_kaidulishi();\r\n            },\r\n\r\n            // 设置开度历史表默认查询日期\r\n            setTableDefaultDate_kaidulishi() {\r\n                const end = new Date();\r\n                const start = zeroPointOfTheDay();\r\n\r\n                var timeSlot = [start, end];\r\n\r\n                this.setTableDate(\"kaidulishi\", timeSlot);\r\n\r\n                function zeroPointOfTheDay() {\r\n                    var date = new Date();\r\n                    date.setHours(0);\r\n                    date.setMinutes(0);\r\n                    date.setSeconds(0);\r\n                    date.setMilliseconds(0);\r\n                    return date;\r\n                }\r\n            },\r\n            // 获取对应水情历史数据表的数据\r\n            getTableData_kaidulishi(body, callback) {\r\n                console.log(\"getTableData_kaidulishi\")\r\n                this.axios\r\n                    .get(`/guanqu/zhafakongzhi/kaidulishi`, {\r\n                        // params: {\r\n                        //   STCD: this.info.STCD\r\n                        // }\r\n                        params: body\r\n                    })\r\n                    .then(res => {\r\n                        var data = res.data.list;\r\n                        console.log(\"========================\")\r\n                        console.log(data);\r\n                        var total = res.data.total;\r\n                        this.OD = data[0].OD;\r\n                        data = data.map(val => {\r\n                            val.currentPage = this.table.kaidulishi.currentPage;\r\n                            val.pageSizes = this.table.kaidulishi.pageSizes;\r\n                            val.TM = this.dateFilter(val.TM);\r\n                            val.OD = this.Z_Filter(val.OD);\r\n                            val.UPZ = this.Z_Filter(val.UPZ);\r\n                            val.DWZ = this.Z_Filter(val.DWZ);\r\n                            val.Q = this.Z_Filter(val.Q, 3);\r\n                            return val;\r\n                        });\r\n\r\n                        if (typeof callback == \"function\") {\r\n                            callback({\r\n                                data: data,\r\n                                total: total\r\n                            });\r\n                        }\r\n                    });\r\n            },\r\n            // 更新 XX 表格的数据\r\n            setTableData(tableName, data) {\r\n                this.table[tableName].Rows_filter = data;\r\n            },\r\n\r\n            // 根据行政区划编码获取行政区划\r\n            getCompartmentByADDVCD(callback) {\r\n                var ADDVCD = this.info.rowinfo.ADDVCD;\r\n                if (ADDVCD && ADDVCD != \"\") {\r\n                    this.axios\r\n                        .get(`/guanqu/admin/WRP_AD_B`, {\r\n                            params: {\r\n                                AD_CD: ADDVCD\r\n                            }\r\n                        })\r\n                        .then(res => {\r\n                            var data = res.data.rows;\r\n                            if (typeof callback == \"function\") {\r\n                                callback(data);\r\n                            }\r\n                        });\r\n                }\r\n            },\r\n            // 处理日期时间选择器确定事件_开度历史\r\n            handleDatePickerChange_kaidulishi(item) {\r\n                this.table.kaidulishi.currentPage = 1;\r\n                this.search_kaidulishi();\r\n            },\r\n            // 设置 xx表格 时间选择器值\r\n            setTableDate(tableName, val) {\r\n                this.table[tableName].date = val;\r\n            },\r\n            // 排序\r\n            sort_change_kaidulishi(item) {\r\n                this.table.kaidulishi.sort = item;\r\n\r\n                this.search_kaidulishi();\r\n            }\r\n        }\r\n        ,\r\n        mounted() {\r\n            // this.createEchartsOD(document.getElementById('echartOD'))\r\n            // 组件加载中\r\n            this.componentLoading();\r\n            // 获取详情数据\r\n            this.axios\r\n                .get(`/guanqu/table/details?ID=${this.info.rowinfo.STCD}&pk=STCD`)\r\n                .then(res => {\r\n                    this.getCompartmentByADDVCD(data => {\r\n                        this.siteInfo.AD_NM = data[0].AD_NM;\r\n                    });\r\n                    // 根据河流编码获取河流名\r\n                    this.$GetData.Base_R_I(\r\n                        {\r\n                            RVCD: this.info.rowinfo.RVCD\r\n                        },\r\n                        true,\r\n                        data => {\r\n                            this.siteInfo.RVCD = data.data[0].RVNM;\r\n                        }\r\n                    );\r\n\r\n                    // 根据流域编码获取流域名\r\n                    this.$GetData.Base_B_I(\r\n                        {\r\n                            CTCD: this.info.rowinfo.CTCD\r\n                        },\r\n                        true,\r\n                        data => {\r\n                            this.siteInfo.CTCD = data.data[0].CTNM;\r\n                        }\r\n                    );\r\n                    // 加载站点数据\r\n                    this.loadSiteData(res.data);\r\n                    // 组件加载取消\r\n                    this.cancelComponentLoading();\r\n                    // 设置开度历史数据表默认查询日期\r\n                    this.setTableDefaultDate_kaidulishi();\r\n                    // 查询开度历史数据表的数据\r\n                    this.search_kaidulishi();\r\n                });\r\n            this.getTableData_kaidulishi();\r\n        }\r\n    }\r\n    ;\r\n</script>\r\n\r\n\r\n<style lang=\"less\" scope>\r\n    @import \"./common/common.less\";\r\n\r\n    .drawer-profile {\r\n        font-size: @siteInfoFontSize;\r\n\r\n        .row_header {\r\n            text-align: center;\r\n            font-size: 1.5625rem;\r\n            font-weight: 700;\r\n        }\r\n\r\n        .relationRow {\r\n            margin-top: 1.25rem;\r\n\r\n            button {\r\n                margin-right: 1.25rem;\r\n            }\r\n        }\r\n\r\n        .checkBoxItem {\r\n            margin: 0 0.9375rem;\r\n        }\r\n\r\n        // 闸阀状态动态模拟图\r\n        .waterLever {\r\n            text-align: center;\r\n\r\n            .box {\r\n                width: 14.375rem;\r\n                margin: 0 auto;\r\n                border-left: rgb(139, 139, 139) 0.9375rem solid;\r\n                border-right: rgb(139, 139, 139) 0.9375rem solid;\r\n                background-color: rgb(191, 191, 191);\r\n                height: 14.375rem;\r\n                display: flex;\r\n                flex-direction: column-reverse;\r\n            }\r\n\r\n            .water {\r\n                width: 100%;\r\n                background: white;\r\n                padding: 0.625rem 0;\r\n            }\r\n\r\n            .waterImg {\r\n                width: 6.25rem;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/Details"}]}