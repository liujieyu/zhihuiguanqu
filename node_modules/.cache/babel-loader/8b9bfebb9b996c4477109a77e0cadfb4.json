{"remainingRequest":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\thread-loader\\dist\\cjs.js!D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\huangcaiplace\\zhihuiguanqu\\src\\assets\\commonJS\\FilterMethods.js","dependencies":[{"path":"D:\\huangcaiplace\\zhihuiguanqu\\src\\assets\\commonJS\\FilterMethods.js","mtime":1577669403924},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _JSON$stringify from \"D:\\\\huangcaiplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"D:\\\\huangcaiplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"D:\\\\huangcaiplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.regexp.split\";\nvar FilterMethods = {\n  methods: {\n    // 日期过滤器\n    dateFilter: function dateFilter(tm, number, type, number2) {\n      if (tm) {\n        var dateArray = tm.split(' ');\n        var date1 = dateArray[0];\n\n        if (!number2 && number2 !== 0) {\n          date1 = dateArray[0].substring(2);\n        } else {\n          date1 = dateArray[0].substring(number2);\n        }\n\n        var date2 = dateArray[1]; // console.log(date1,date2)\n        // console.log(date1);\n\n        if (date2) {\n          date2 = date2.substring(0, number || 5);\n        } else {\n          date2 = '';\n        }\n\n        if (type) {\n          switch (type) {\n            case \"onlyDate\":\n              return \"\".concat(date1);\n\n            case \"onlyTime\":\n              return \"\".concat(date2).concat(number == 2 ? ':00' : '');\n          }\n        } // return date;\n\n\n        return \"\".concat(date1, \"  \").concat(date2);\n      } else {\n        return '';\n      }\n    },\n    // 水位过滤器\n    Z_Filter: function Z_Filter(Z, figure) {\n      if (Z) {\n        var Z = _parseFloat(Z);\n\n        if (Z !== 0) {\n          return Z.toFixed(figure || 2);\n        }\n\n        return '';\n      } else {\n        return '';\n      }\n    },\n    // 流量过滤器\n    Z_Filter2: function Z_Filter2(agmt) {\n      // debugger;\n      var oFl = agmt.split('.');\n      var result = null;\n\n      if (oFl[1] === undefined) {\n        result = \"\".concat(agmt, \".00\");\n      } else if (oFl[1].length === 1) {\n        result = \"\".concat(agmt, \"0\");\n      } else if (oFl[1].length === 2) {\n        result = \"\".concat(agmt);\n      } else if (oFl[1].length >= 3) {\n        result = \"\".concat(agmt.substring(0, agmt.length - 1));\n      } else {\n        result = agmt;\n      }\n\n      return result;\n    },\n    // 浮点型数值过滤器\n    Float_Filter: function Float_Filter(Z, figure) {\n      if (Z) {\n        var Z = _parseFloat(Z);\n\n        if (Z !== 0) {\n          return Z.toFixed(figure || 2);\n        }\n\n        return '';\n      } else {\n        return '';\n      }\n    },\n    // 浮点型数值过滤器\n    Float_Filter2: function Float_Filter2(Z, figure) {\n      if (Z) {\n        var Z = _parseFloat(Z);\n\n        if (Z !== 0) {\n          return Z.toFixed(1);\n        }\n\n        return '';\n      } else {\n        return '';\n      }\n    },\n    // 水势过滤器\n    WPTN_Filter: function WPTN_Filter(WPTN) {\n      if (WPTN) {\n        var WPTN = _parseInt(WPTN);\n\n        var newWPTN;\n\n        switch (WPTN) {\n          case 6:\n            newWPTN = {\n              status: WPTN,\n              symbol: \"一\"\n            };\n            break;\n\n          case 5:\n            newWPTN = {\n              status: WPTN,\n              symbol: \"↑\"\n            };\n            break;\n\n          case 4:\n            newWPTN = {\n              status: WPTN,\n              symbol: \"↓\"\n            };\n            break;\n\n          case 0:\n            newWPTN = {\n              status: 6,\n              symbol: \"一\"\n            };\n            break;\n\n          default:\n            newWPTN = {\n              status: 6,\n              symbol: \"一\"\n            };\n            break;\n        }\n\n        return newWPTN;\n      } else {\n        return {\n          status: 6,\n          symbol: \"一\"\n        };\n      }\n    },\n    // 通讯状态过滤器\n    CS_Filter: function CS_Filter(CS) {\n      if (CS && CS == 1) {\n        return \"正常\";\n      } else {\n        return \"异常\";\n      }\n    },\n    //\n    STGR_Filter: function STGR_Filter(STGR) {\n      var STGR = _parseInt(STGR);\n\n      if (isNaN(STGR)) {\n        return \"\";\n      } else {\n        var val;\n\n        switch (STGR) {\n          case 1:\n            val = \"国家重要站\";\n            break;\n\n          case 2:\n            val = \"省级重要站\";\n            break;\n\n          case 3:\n            val = \"一般站\";\n            break;\n\n          case 4:\n            val = \"实验或专用站\";\n            break;\n\n          case 5:\n            val = \"山洪站\";\n            break;\n\n          case 6:\n            val = \"临时站\";\n            break;\n\n          case 7:\n            val = \"其他站\";\n            break;\n\n          case 8:\n            val = \"灌区站\";\n            break;\n        }\n\n        return val;\n      }\n    },\n    // 站点大类归属过滤器\n    STTP_Filter: function STTP_Filter(STTP) {\n      switch (STTP) {\n        case \"MM\":\n          STTP = \"气象站\";\n          break;\n\n        case \"PP\":\n          STTP = \"雨量站\";\n          break;\n\n        case \"BB\":\n          STTP = \"蒸发站\";\n          break;\n\n        case \"ZQ\":\n          STTP = \"流量站\";\n          break;\n\n        case \"DD\":\n          STTP = \"堰（闸）水位站\";\n          break;\n\n        case \"ZZ\":\n          STTP = \"河道水位站\";\n          break;\n\n        case \"TT\":\n          STTP = \"潮位站\";\n          break;\n\n        case \"RR\":\n          STTP = \"水库站\";\n          break;\n\n        case \"DP\":\n          STTP = \"泵站\";\n          break;\n\n        case \"ZG\":\n          STTP = \"地下水位站\";\n          break;\n\n        case \"SS\":\n          STTP = \"墒情站\";\n          break;\n\n        case \"WQ\":\n          STTP = \"水质站\";\n          break;\n\n        case \"SD\":\n          STTP = \"泥沙\";\n          break;\n\n        case \"PH\":\n          STTP = \"图像站\";\n          break;\n\n        case \"TV\":\n          STTP = \"视频站\";\n          break;\n\n        case \"GC\":\n          STTP = \"闸控站\";\n          break;\n\n        case \"CQ\":\n          STTP = \"渠道水位站\";\n          break;\n      }\n\n      return STTP;\n    },\n    //动态统计图Y轴最大值\n    get_echart_max: function get_echart_max(data) {\n      var data = JSON.parse(_JSON$stringify(data));\n      data.forEach(function (val, index, array) {\n        if (val == '') {\n          array.splice(index, 1);\n        }\n      });\n      var max = data[0];\n\n      for (var i = 1; i < data.length; i++) {\n        if (_parseFloat(data[i]) > _parseFloat(max)) {\n          max = data[i];\n        }\n      }\n\n      return _parseFloat(max);\n    },\n    //动态统计图Y轴最小值\n    get_echart_min: function get_echart_min(data) {\n      var data = JSON.parse(_JSON$stringify(data));\n      data.forEach(function (val, index, array) {\n        if (val == '') {\n          array.splice(index, 1);\n        }\n      });\n      var min = data[0];\n\n      for (var i = 1; i < data.length; i++) {\n        if (_parseFloat(data[i]) < _parseFloat(min)) {\n          min = data[i];\n        }\n      }\n\n      return _parseFloat(min);\n    },\n    // 按层级截取行政区划码长度\n    ADDVCD_Array_Filter: function ADDVCD_Array_Filter(ADDVCD_Array) {\n      var length = ADDVCD_Array.length;\n      var lastADDVCD = ADDVCD_Array[length - 1];\n      var likeADDVCD;\n\n      switch (length) {\n        case 1:\n          likeADDVCD = lastADDVCD.substring(0, 6);\n          break;\n\n        case 2:\n          likeADDVCD = lastADDVCD.substring(0, 9);\n          break;\n\n        case 3:\n          likeADDVCD = lastADDVCD.substring(0, 12);\n          break;\n      }\n\n      return likeADDVCD;\n    },\n    // 按层级截取渠道编码长度\n    Canal_Code_Array_Filter: function Canal_Code_Array_Filter(Canal_Code_Array) {\n      var length = Canal_Code_Array.length;\n      var lastCanal_Code = Canal_Code_Array[length - 1]; // var likeCanal_Code;\n      // switch (length) {\n      //     case 1:\n      //         likeCanal_Code = lastCanal_Code.substring(0, 5);\n      //         break;\n      //     case 2:\n      //         likeCanal_Code = lastCanal_Code.substring(0, 9);\n      //         break;\n      // }\n\n      return lastCanal_Code;\n    },\n    // 渠道树\n    QuDao_Tree_Filter: function QuDao_Tree_Filter(data) {\n      // var totalLength = 0;\n      data = addTitle(data, \"canal_name\"); // 增加标题\n\n      var ganQuList = getGanQuList(data); // totalLength += ganQuList.length;\n\n      ganQuList = ganQuList.map(function (val) {\n        // 支渠\n        var this_ZhiquList = getZhiquList(data, val.canal_code);\n        this_ZhiquList.map(function (zhuquVal) {\n          // 支渠站加其他渠道\n          var this_ZhiQuSite_otherQuDao_List = get_ZhiQuSite_otherQuDao_List(data, zhuquVal.canal_code);\n          zhuquVal.children = this_ZhiQuSite_otherQuDao_List; // if (zhuquVal.children.length > 0) {\n          //     totalLength += zhuquVal.children.length;\n          //     console.log(zhuquVal.canal_name,zhuquVal.children);\n          // }\n\n          return zhuquVal;\n        }); // 干渠站\n\n        var this_GanQuSiteList = getGanQuSiteList(data, val.canal_code);\n        val.children = this_ZhiquList.concat(this_GanQuSiteList); // totalLength += val.children.length\n\n        return val;\n      });\n      var other = {\n        label: \"其他\",\n        children: getOtherSiteList(data)\n      };\n      ganQuList.push(other); // totalLength += other.children.length\n      // console.log(\"dataLength\", data.length)\n      // console.log(\"totalLength\", totalLength)\n\n      var guanqutree = new Object();\n      var siteinfo = new Object();\n      data.some(function (val, index) {\n        if (val.bj == 0) {\n          siteinfo.canal_name = val.canal_name;\n          siteinfo.canal_code = val.canal_code;\n          return true;\n        }\n      });\n      guanqutree.siteinfo = siteinfo;\n      guanqutree.data = ganQuList;\n      return guanqutree; // 函数\n\n      function getGanQuList(data) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.upper_Canal_code == -1 && val.bj == 1) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function getOtherSiteList(data) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.upper_Canal_code == -1 && val.bj == 0) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function getZhiquList(data, upper_Canal_code) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.upper_Canal_code == upper_Canal_code && val.bj == \"1\") {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function getGanQuSiteList(data, upper_Canal_code) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.upper_Canal_code == upper_Canal_code && val.bj == \"0\") {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function get_ZhiQuSite_otherQuDao_List(data, upper_Canal_code) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.upper_Canal_code == upper_Canal_code) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function addTitle(array, fieldName) {\n        var newList;\n        newList = array.map(function (val) {\n          val.label = val[fieldName];\n\n          if (val.bj == 0) {\n            val.label = \"\".concat(val[fieldName], \"\\u3010\\u7AD9\\u70B9\\u3011\");\n          }\n\n          return val;\n        });\n        return newList;\n      }\n    },\n    // 行政区划树\n    XingZheng_Tree_Filter: function XingZheng_Tree_Filter(up_adcd, data) {\n      data = addTitle(data, \"ad_nm\"); // 增加标题\n\n      var Mogami = getMogami(up_adcd, data);\n      var res = new Object();\n      getstcd(data);\n      res.data = Mogami; // var total = Mogami.length;\n\n      Mogami.map(function (val) {\n        val.children = getChildrenList(val.ad_cd, data); // total += val.children.length;\n\n        recursion(val.children, val.title);\n        return val;\n      }); // console.warn(\"data\",data.length)\n      // console.warn(\"total\",total)\n      // console.warn(\"site\",getSiteList(data))\n\n      return res;\n\n      function getstcd(array) {\n        array.some(function (val, index) {\n          if (val.bj == 0) {\n            res.stcd = val.ad_cd;\n            res.stnm = val.label;\n            return true;\n          }\n        });\n      } // var obj = new Object()\n      // obj.stcd =\n      // 函数\n\n\n      function getMogami(up_adcd, data) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.up_adcd == up_adcd) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function getChildrenList(ad_cd, data) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.up_adcd == ad_cd) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function getSiteList(data) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.bj == 0) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function recursion(children, title) {\n        if (children.length > 0) {\n          children.map(function (val) {\n            val.children = getChildrenList(val.ad_cd, data); // total += val.children.length;\n\n            recursion(val.children, val.title);\n            return val;\n          });\n        }\n      }\n\n      function addTitle(array, fieldName) {\n        var newList;\n        newList = array.map(function (val) {\n          val.label = val[fieldName];\n\n          if (val.bj == 0) {\n            val.label = \"\".concat(val[fieldName], \"\\u3010\\u7AD9\\u70B9\\u3011\");\n          }\n\n          return val;\n        });\n        return newList;\n      }\n    },\n    // 饿了么日期选择器值过滤\n    elDatePicker_Filter: function elDatePicker_Filter(date, type) {\n      if (date.constructor === Array) {\n        var start, start_Year, start_Month, start_Day, start_Hours, start_Minutes, start_Seconds;\n        start = date[0];\n        start_Year = start.getFullYear();\n        start_Month = addZero(start.getMonth() + 1);\n        start_Day = addZero(start.getDate());\n        start_Hours = addZero(start.getHours());\n        start_Minutes = addZero(start.getMinutes());\n        start_Seconds = addZero(start.getSeconds());\n        start = \"\".concat(start_Year, \"-\").concat(start_Month, \"-\").concat(start_Day, \" \").concat(start_Hours, \":\").concat(start_Minutes);\n        var end, end_Year, end_Month, end_Day, end_Hours, end_Minutes, end_Seconds;\n        end = date[1];\n        end_Year = end.getFullYear();\n        end_Month = addZero(end.getMonth() + 1);\n        end_Day = addZero(end.getDate());\n        end_Hours = addZero(end.getHours());\n        end_Minutes = addZero(end.getMinutes());\n        end_Seconds = addZero(end.getSeconds());\n        end = \"\".concat(end_Year, \"-\").concat(end_Month, \"-\").concat(end_Day, \" \").concat(end_Hours, \":\").concat(end_Minutes);\n\n        if (type) {\n          switch (type) {\n            case \"monthTable\":\n              // return `btt,${start_Year}-${start_Month}-1,${end_Year}-${end_Month}-30`\n              return \"btt,\".concat(start_Year, \"-\").concat(start_Month, \",\").concat(end_Year, \"-\").concat(end_Month);\n            // return {\n            //     YE: `bt,${start_Year},${end_Year}`,\n            //     MON: `bt,${start_Month},${end_Month}`\n            // }\n\n            case \"hourTable\":\n              return \"btt,\".concat(start_Year, \"-\").concat(start_Month, \"-\").concat(start_Day, \" \").concat(start_Hours, \",\").concat(end_Year, \"-\").concat(end_Month, \"-\").concat(end_Day, \" \").concat(end_Hours);\n\n            case \"tenDayTable\":\n              return \"btt,\".concat(start_Year, \"-\").concat(start_Month, \"-1,\").concat(end_Year, \"-\").concat(end_Month, \"-30\");\n\n            case \"dayTable\":\n              return \"btt,\".concat(start_Year, \"-\").concat(start_Month, \"-\").concat(start_Day, \",\").concat(end_Year, \"-\").concat(end_Month, \"-\").concat(end_Day);\n\n            case \"maxQTable\":\n              return \"bt,\".concat(start_Year, \",\").concat(end_Year);\n\n            case \"include_seconds\":\n              return \"btt,\".concat(start, \":\").concat(start_Seconds, \",\").concat(end, \":\").concat(end_Seconds);\n          }\n        }\n\n        return \"btt,\".concat(start, \",\").concat(end);\n      } else if (date.constructor === Date) {\n        var Year, Month, Day, Hours, Minutes;\n        Year = date.getFullYear();\n        Month = addZero(date.getMonth() + 1);\n        Day = addZero(date.getDate());\n        Hours = addZero(date.getHours());\n        Minutes = addZero(date.getMinutes());\n\n        switch (type) {\n          case \"onlyYear\":\n            return Year;\n\n          case \"onlyMonth\":\n            if (Month < 10) Month = \"0\".concat(Month);\n            return \"\".concat(Year, \"-\").concat(Month);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      function addZero(item) {\n        item = String(item);\n\n        if (item.length == 1) {\n          return \"0\".concat(item);\n        }\n\n        return item;\n      }\n    },\n    // 排序过滤\n    sort_Filter: function sort_Filter(item) {\n      var order = item.order,\n          key = item.key;\n\n      switch (order) {\n        case \"normal\":\n          return null;\n\n        case \"asc\":\n          // 升序\n          return \"\".concat(key);\n\n        case \"desc\":\n          // 降序\n          return \"\".concat(key, \" desc\");\n      }\n    },\n    // 闸阀状态历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_KDLS_data_into_ehart_data: function transform_KDLS_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      console.log(_data);\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object(),\n        y3: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"水位过程线\"; // y1轴\n\n          echartData.y1.name = \"库水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n          //\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var tm = val.tm.split(\"  \"); // var time = tm[1];\n\n            var time = \"\".concat(tm[0], \" \").concat(tm[1]);\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n          //\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // // y3轴\n\n          echartData.y3.name = \"月累计水量\"; // Y3轴名字\n          //\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = \"\".concat(val.DT.substring(2), \" \").concat(val.tm); //FilterMethods.methods.dateFilter(val.DT, 3);\n\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n          //\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // // y3轴\n\n          echartData.y3.name = \"月累计水量\"; // Y3轴名字\n          //\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.tm; //FilterMethods.methods.dateFilter(val.DT, 3);\n\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n          // y2轴\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n          //\n          // // y3轴\n\n          echartData.y3.name = \"月累计水量\"; // Y3轴名字\n          //\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = \"\".concat(val.YR, \"-\").concat(val.MON);\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_SWKR_data_into_ehart_data: function transform_SWKR_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      console.log('871', _data);\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"水位库容\"; // y1轴\n\n          echartData.y1.name = \"水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // y2轴\n\n          echartData.y2.name = \"库容\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"STCP\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // y3轴\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.TM.substring(2, val.TM.length - 3);\n            console.log(time);\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            // if(val.TM < 10){\n            //     val.TM = `0${val.TM}`\n            // }\n            var time = \"\".concat(val.dt);\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"日均闸下水位\"; // Y3轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_DWZ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n          //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          // echartData.y3.max = y3max; // y2最大值\n          // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"月均闸下水位\"; // Y3轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_DWZ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n          //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          // echartData.y3.max = y3max; // y2最大值\n          // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = \"\".concat(val.dt);\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_SKSQ_data_into_ehart_data: function transform_SKSQ_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object(),\n        y3: new Object(),\n        y4: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"历史表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // y3轴\n\n          echartData.y3.name = \"出库流量\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"OTQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // y3轴\n\n          echartData.y4.name = \"库容\"; // Y3轴名字\n\n          echartData.y4.list = FilterMethods.methods.newArrayByObjArray(_data, \"W\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            console.log(time);\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            // if(val.TM < 10){\n            //     val.TM = `0${val.TM}`\n            // }\n            var time = \"\".concat(val.dt);\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"日均闸下水位\"; // Y3轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_DWZ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n          //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          // echartData.y3.max = y3max; // y2最大值\n          // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"月均闸下水位\"; // Y3轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_DWZ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n          //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          // echartData.y3.max = y3max; // y2最大值\n          // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = \"\".concat(val.dt);\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 河道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_HDSQ_data_into_ehart_data: function transform_HDSQ_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"水位过程线\"; // y1轴\n\n          echartData.y1.name = \"水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Z\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          echartData.y2.name = \"流量\"; // Y1轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"平均水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"平均流量\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"INQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // // y3轴\n          // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            if (val.tm < 10) {\n              val.tm = \"0\".concat(val.tm);\n            }\n\n            var time = \"\".concat(val.DT); //FilterMethods.methods.dateFilter(val.DT, 3);\n\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"日平均水位\"; // Y1轴名字\n          // y2轴\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"INQ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n\n          echartData.y2.name = \"日平均流量\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"日累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.TM;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"月平均水位\"; // Y1轴名字\n          // y2轴\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"INQ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n\n          echartData.y2.name = \"月平均流量\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"月累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = \"\".concat(val.dt);\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 雨情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_YQ_data_into_ehart_data: function transform_YQ_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      console.log(_data);\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"雨量柱状图\"; // y1轴\n\n          echartData.y1.name = \"降水量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DRP\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"降雨量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n          // echartData.y2.name = \"平均水位\"; // Y2轴名字\n          //\n          // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_Z\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n          // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.DT; //FilterMethods.methods.dateFilter(val.DT, 3);\n\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"p\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"日降雨量\"; // Y1轴名字\n          // y2轴\n          // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", val => {\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // echartData.y2.name = \"日平均水位\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"日累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.TM;\n            return time;\n          });\n          break;\n\n        case \"tenDaysTable\":\n          echartData.chartName = \"旬表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"旬降雨量\"; // Y1轴名字\n          // y2轴\n          // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", val => {\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // echartData.y2.name = \"日平均水位\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"日累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.DT;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"月降雨量\"; // Y1轴名字\n          // y2轴\n          // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Z\", val => {\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // echartData.y2.name = \"月平均水位\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"月累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = \"\".concat(val.DT);\n            return time;\n          });\n          break;\n\n        case \"yearTable\":\n          echartData.chartName = \"年表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"年降雨量\"; // Y1轴名字\n          // y2轴\n          // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Z\", val => {\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // echartData.y2.name = \"月平均水位\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"月累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.YR;\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_QDSQ_data_into_ehart_data: function transform_QDSQ_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object(),\n        y3: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"历史表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"Z\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"平均流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_Q\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"平均水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_Z\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n\n          echartData.y3.name = \"小时累计水量\"; // Y2轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.dt; //FilterMethods.methods.dateFilter(val.DT, 3);\n\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_Q\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"日平均流量\"; // Y1轴名字\n          // y2轴\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_Z\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n\n          echartData.y2.name = \"日平均水深\"; // Y2轴名字\n          // y3轴\n\n          echartData.y3.name = \"日累计水量\"; // Y2轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Q\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"月平均流量\"; // Y1轴名字\n          // y2轴\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Z\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n\n          echartData.y2.name = \"月平均水深\"; // Y2轴名字\n          // y3轴\n\n          echartData.y3.name = \"月累计水量\"; // Y2轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.dt;\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 闸阀水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_ZFSQ_data_into_ehart_data: function transform_ZFSQ_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object(),\n        y3: new Object(),\n        y: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"历史表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"闸上水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"UPZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n\n          echartData.y3.name = \"闸下水深\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n              y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          echartData.y3.max = y3max; // y2最大值\n\n          echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            console.log('1895', val.TM);\n            var time = val.TM;\n            return time;\n          }); // y轴\n\n          var ymax_list = [y1max, y2max, y3max];\n          var ymax = FilterMethods.methods.get_echart_max(ymax_list);\n          var ymin_list = [y1max, y2max, y3max];\n          var ymin = FilterMethods.methods.get_echart_max(ymin_list);\n          echartData.y.max = ymax;\n          echartData.y.min = ymin;\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"闸上水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_UPZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n\n          echartData.y3.name = \"闸下水深\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_DWZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n              y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          echartData.y3.max = y3max; // y2最大值\n\n          echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.dt;\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"日均闸上水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_UPZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n\n          echartData.y3.name = \"日均闸下水深\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_DWZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n              y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          echartData.y3.max = y3max; // y2最大值\n\n          echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"月均闸上水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_UPZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n\n          echartData.y3.name = \"月均闸下水深\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_DWZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n              y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          echartData.y3.max = y3max; // y2最大值\n\n          echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.dt;\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 闸阀状态历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_ZFZT_data_into_ehart_data: function transform_ZFZT_data_into_ehart_data(data, tableType) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      _data = _data.reverse(); // 数组倒序\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object(),\n        y3: new Object(),\n        y4: new Object(),\n        y: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"历史表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"闸上水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"UPZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(3),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(3);\n          echartData.y2.max = y2max; // y1最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y1最小值\n          // y3轴\n\n          echartData.y3.name = \"闸下水位\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(3),\n              y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(3);\n          echartData.y3.max = y3max; // y3最大值\n\n          echartData.y3.min = y3min < 0 ? 0 : y3min; // y3最小值\n          // y4轴\n\n          echartData.y4.name = \"闸门开度\"; // Y3轴名字\n\n          echartData.y4.list = FilterMethods.methods.newArrayByObjArray(_data, \"OD\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y4max = (FilterMethods.methods.get_echart_max(echartData.y4.list) + 0.5).toFixed(3),\n              y4min = (FilterMethods.methods.get_echart_min(echartData.y4.list) - 0.5).toFixed(3);\n          echartData.y4.max = y4max; // y4最大值\n\n          echartData.y4.min = y4min < 0 ? 0 : y4min; // y4最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.TM;\n            return time;\n          }); // y轴\n\n          var ymax_list = [y1max, y2max, y3max, y4max];\n          var ymax = FilterMethods.methods.get_echart_max(ymax_list);\n          var ymin_list = [y1min, y2min, y3min, y4min];\n          var ymin = FilterMethods.methods.get_echart_min(ymin_list);\n\n          if (ymin < 0) {\n            ymin = 0;\n          }\n\n          echartData.y.max = ymax;\n          echartData.y.min = ymin;\n          break;\n      }\n\n      return echartData;\n    },\n    // 运行工况历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_YXGK_data_into_ehart_data: function transform_YXGK_data_into_ehart_data(data, tableType) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n      // _data = _data.reverse(); // 数组倒序\n\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object()\n      };\n      echartData.chartName = \"\";\n\n      switch (tableType) {\n        case \"zhuangtaishuju\":\n          // y1轴\n          echartData.y1.name = \"电压\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"VOL\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.tm;\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 抽离对象数组中每一项对象中某字段组合成新的数组\n    newArrayByObjArray: function newArrayByObjArray(array, attr, callback) {\n      var newArray = array.map(function (val) {\n        var newVal = val[attr];\n\n        if (typeof callback == \"function\") {\n          newVal = callback(newVal);\n        }\n\n        return newVal;\n      });\n      return newArray;\n    }\n  }\n};\nexport default FilterMethods;",null]}