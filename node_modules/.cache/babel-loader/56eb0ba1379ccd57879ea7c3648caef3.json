{"remainingRequest":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\thread-loader\\dist\\cjs.js!D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\huangcaiplace\\zhihuiguanqu\\src\\components\\Details\\Details-qudaoshuiqing.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\huangcaiplace\\zhihuiguanqu\\src\\components\\Details\\Details-qudaoshuiqing.vue","mtime":1577669404024},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\huangcaiplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FilterMethods from \"../../assets/commonJS/FilterMethods\"; // 过滤方法\n\nimport GetDataMethods from \"../../assets/commonJS/GetDataMethods\"; // 获取数据方法\n\nimport { timingSafeEqual } from \"crypto\";\nimport { type } from \"os\";\nimport { types } from \"util\";\nimport { stat } from \"fs\";\nimport { filter } from \"minimatch\";\nexport default {\n  props: {\n    info: {}\n  },\n  data: function data() {\n    return {\n      // 激活标签栏\n      activeName: \"shuiqingshuju\",\n      // 站点\n      siteInfo: {},\n      //   多选框对象\n      checkBox: {},\n      //   选择框对象\n      select: {\n        // 当前激活的水情数据快速查询选项\n        activeQuickSearchList: [],\n        // 查询绑定值\n        select: \"rec6\",\n        // 日期选择器绑定值\n        shuiqing_datePicker: null,\n        // 水情数据历史表\n        shuiqingList: [{\n          value: \"historyTable\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          label: \"历史表\"\n        }, {\n          value: \"hourTable\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          label: \"小时表\"\n        }, {\n          value: \"dayTable\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          label: \"日表\"\n        }, {\n          value: \"monthTable\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          label: \"月表\"\n        }],\n        // 水情数据历史表绑定值\n        shuiqing_select: \"historyTable\" // // 水情数据快速查询\n        // quickSearch: {\n        //   historyTable: [\n        //     {\n        //       value: 0,\n        //       label: \"全部\"\n        //     },\n        //     {\n        //       value: 6,\n        //       label: \"最近6小时\"\n        //     },\n        //     {\n        //       value: 12,\n        //       label: \"最近12小时\"\n        //     },\n        //     {\n        //       value: 24,\n        //       label: \"最近24小时\"\n        //     },\n        //     {\n        //       value: 36,\n        //       label: \"最近36小时\"\n        //     },\n        //     {\n        //       value: 72,\n        //       label: \"最近72小时\"\n        //     }\n        //   ],\n        //   hourTable: [\n        //     {\n        //       value: 0,\n        //       label: \"全部\"\n        //     },\n        //     {\n        //       value: 6,\n        //       label: \"最近6小时\"\n        //     },\n        //     {\n        //       value: 12,\n        //       label: \"最近12小时\"\n        //     },\n        //     {\n        //       value: 24,\n        //       label: \"最近24小时\"\n        //     },\n        //     {\n        //       value: 36,\n        //       label: \"最近36小时\"\n        //     },\n        //     {\n        //       value: 72,\n        //       label: \"最近72小时\"\n        //     }\n        //   ],\n        //   dayTable: [\n        //     {\n        //       value: 0,\n        //       label: \"全部\"\n        //     },\n        //     {\n        //       value: 10,\n        //       label: \"最近10天\"\n        //     },\n        //     {\n        //       value: 15,\n        //       label: \"最近15天\"\n        //     },\n        //     {\n        //       value: 30,\n        //       label: \"最近30天\"\n        //     },\n        //     {\n        //       value: 60,\n        //       label: \"最近60天\"\n        //     },\n        //     {\n        //       value: 90,\n        //       label: \"最近90天\"\n        //     }\n        //   ],\n        //   monthTable: []\n        // },\n\n      },\n      // 表格\n      table: {\n        // 水情\n        shuiqing: {\n          // 表头设置\n          columns: {\n            // 历史表\n            historyTable: [{\n              type: \"index\",\n              title: \" \",\n              width: 65,\n              align: \"center\",\n              // 自定义序号\n              indexMethod: function indexMethod(item) {\n                var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n                return index;\n              },\n              tooltip: true\n            }, {\n              title: \"时间\",\n              key: \"tm\",\n              width: 150,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"水深(m)\",\n              // width: 130,\n              key: \"Z\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              // width: 130,\n              title: \"流量(m³/s)\",\n              key: \"Q\",\n              align: \"center\",\n              sortable: \"custom\"\n            }],\n            // 小时表\n            hourTable: [{\n              title: \" \",\n              type: \"index\",\n              width: 65,\n              align: \"center\",\n              // 自定义序号\n              indexMethod: function indexMethod(item) {\n                var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n                return index;\n              },\n              tooltip: true\n            }, {\n              title: \"时间\",\n              key: \"dt\",\n              width: 150,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"平均水深(m)\",\n              width: 130,\n              key: \"A_Z\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 140,\n              title: \"平均流量(m³/s)\",\n              key: \"A_Q\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 150,\n              title: \"小时累计水量(m³)\",\n              key: \"WQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }],\n            // 日表\n            dayTable: [{\n              title: \" \",\n              type: \"index\",\n              width: 65,\n              align: \"center\",\n              // 自定义序号\n              indexMethod: function indexMethod(item) {\n                var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n                return index;\n              },\n              tooltip: true\n            }, {\n              title: \"日期\",\n              key: \"tm\",\n              width: 150,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"日平均水深(m)\",\n              width: 140,\n              key: \"DA_Z\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 155,\n              title: \"日平均流量(m³/s)\",\n              key: \"DA_Q\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 140,\n              title: \"日累计水量(m³)\",\n              key: \"DWQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }],\n            // 月表\n            monthTable: [{\n              title: \" \",\n              type: \"index\",\n              width: 65,\n              align: \"center\",\n              // 自定义序号\n              indexMethod: function indexMethod(item) {\n                var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n                return index;\n              },\n              tooltip: true\n            }, {\n              title: \"时间\",\n              key: \"dt\",\n              width: 110,\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              title: \"月平均水深(m)\",\n              width: 135,\n              key: \"MA_Z\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 150,\n              title: \"月平均流量(m³/s)\",\n              key: \"MA_Q\",\n              align: \"center\",\n              sortable: \"custom\"\n            }, {\n              width: 145,\n              title: \"月累计水量(m³)\",\n              key: \"MWQ\",\n              align: \"center\",\n              sortable: \"custom\"\n            }]\n          },\n          // 正在激活的表头\n          activeColumns: [],\n          // 表体内容\n          Rows: [],\n          // 过滤后的表体内容\n          Rows_filter: [],\n          // 日期时间选择器的选项配置\n          datePickerOptions: {\n            historyTable: {\n              shortcuts: [{\n                text: \"最近6小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 6);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近12小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 12);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近24小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近36小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 36);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近72小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 72);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }]\n            },\n            hourTable: {\n              shortcuts: [{\n                text: \"最近6小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 6);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近12小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 12);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近24小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近36小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 36);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近72小时\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 72);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }]\n            },\n            dayTable: {\n              shortcuts: [{\n                text: \"最近10天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 10);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近15天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 15);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近30天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近60天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 60);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }, {\n                text: \"最近90天\",\n                onClick: function onClick(picker) {\n                  var end = new Date();\n                  var start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                  picker.$emit(\"pick\", [start, end]);\n                }\n              }]\n            },\n            monthTable: {\n              shortcuts: []\n            }\n          },\n          // 日期时间选择器类型\n          datePickerType: \"date\",\n          // 日期时间选择器值\n          date: null,\n          // 排序\n          sort: null,\n          // 表格是否加载中\n          loading: false,\n          // 总条数\n          total: 0,\n          // 当前页\n          currentPage: 1,\n          // 每页显示数量\n          pageSizes: 20,\n          // 表格高度\n          height: 400\n        },\n        // 关系曲线\n        guanxiquxian: {\n          // 表头设置\n          columns: [{\n            title: \" \",\n            type: \"index\",\n            width: 50,\n            align: \"center\",\n            // 自定义序号\n            indexMethod: function indexMethod(item) {\n              var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n              return index;\n            },\n            ellipsis: true\n          }, {\n            title: \"水深(m)\",\n            width: 110,\n            key: \"Z\",\n            align: \"center\"\n          }, {\n            title: \"流量(m³/s)\",\n            key: \"Q\",\n            width: 110,\n            align: \"center\"\n          }, {\n            // width: 100,\n            title: \"备注\",\n            key: \"Memo\",\n            align: \"center\"\n          }],\n          // 表体内容\n          Rows: [],\n          // 过滤后的表体内容\n          Rows_filter: [],\n          // 表格是否加载中\n          loading: false,\n          // 日期时间选择器值\n          date: null,\n          // 总条数\n          total: 0,\n          // 表格高度\n          height: 440,\n          // 当前页\n          currentPage: 1,\n          // 每页显示数量\n          pageSizes: 20\n        },\n        // 特征水深\n        tezhengshuiqing: {\n          // 表头设置\n          columns: [{\n            title: \" \",\n            type: \"index\",\n            width: 50,\n            align: \"center\",\n            // 自定义序号\n            indexMethod: function indexMethod(item) {\n              var index = item._index + 1 + (item.currentPage - 1) * item.pageSizes;\n              return index;\n            },\n            ellipsis: true\n          }, {\n            title: \"最大流量时间\",\n            // width: 130,\n            key: \"TMMXQ\",\n            align: \"center\",\n            sortable: true\n          }, {\n            title: \"年最大流量(m³/s)\",\n            key: \"TMXQ\",\n            width: 150,\n            align: \"center\",\n            sortable: true\n          }, {\n            // width: 100,\n            title: \"对应水深(m)\",\n            key: \"YMXQZ\",\n            align: \"center\",\n            sortable: true\n          }],\n          // 表体内容\n          Rows: [],\n          // 过滤后的表体内容\n          Rows_filter: [],\n          // 总条数\n          total: 0,\n          // 表格是否加载中\n          loading: false,\n          // 当前页\n          currentPage: 1,\n          // 日期时间选择器值\n          date: null,\n          // 日期时间选择器的选项配置\n          datePickerOptions: {\n            shortcuts: [{\n              text: \"最近5年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 5);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近3年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 3);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近2年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 2);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: \"最近1年\",\n              onClick: function onClick(picker) {\n                var end = new Date();\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 1);\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }]\n          },\n          // 表格高度\n          height: 410,\n          // 每页显示数量\n          pageSizes: 20,\n          alarmData: {\n            Q: \"\",\n            // 预警水深\n            Z: \"\",\n            // 预警流量\n            JYZ: \"\",\n            // 经验预警水深\n            JYQ: \"\" // 经验预警流量\n\n          }\n        }\n      },\n      // 图形\n      chart: {\n        shuiqing: null\n      },\n      //   日期数据\n      date: {\n        shuiqing: \"\"\n      },\n      // 输入框对象\n      input: {\n        // 关系曲线换算的\n        huansuan: {\n          waterLever: \"\",\n          flowLever: \"\"\n        }\n      },\n      //   导出按钮加载控制\n      outPutLoading: false,\n      //   导出确认对话框控制\n      outPutModal: false,\n      // 整块区域的加载控制\n      boxLoading: false\n    };\n  },\n  mixins: [FilterMethods, GetDataMethods],\n  methods: {\n    //   导出站点信息\n    outPutSiteInfo: function outPutSiteInfo() {\n      var _this = this;\n\n      //   关闭导出确认对话框\n      this.outPutModal = false; //   按钮加载\n\n      this.outPutLoading = true;\n      setTimeout(function () {\n        _this.outPutLoading = false;\n\n        _this.$Modal.success({\n          title: \"关于导出\",\n          content: \"站点信息表导出成功\"\n        });\n      }, 500);\n    },\n    //   确认导出\n    outPutSure: function outPutSure() {\n      this.outPutSiteInfo();\n    },\n    // 日期时间选择器变化触发事件\n    // handleDatePickerChange(val, valType) {\n    //   var timeInterval = `${val[0].replace(/\\//g, \"-\")},${val[1].replace(\n    //     /\\//g,\n    //     \"-\"\n    //   )}`;\n    //   this.select.shuiqing_datePicker = timeInterval;\n    // },\n    datePicke_on_ok: function datePicke_on_ok(tableType) {\n      var _this2 = this;\n\n      this.table[\"shuiqing\"].currentPage = 1; // 重置当前页\n\n      this.table.shuiqing.loading = true; // 表格加载中\n\n      var body = {\n        STCD: this.siteInfo.STCD,\n        TM: \"bt,\".concat(this.select.shuiqing_datePicker)\n      };\n      var pageSizes = this.table.shuiqing.pageSizes;\n      var currentPage = 1;\n      this.getTableData_shuiqing(tableType, pageSizes, currentPage, body, function (data) {\n        _this2.setTableTotal(\"shuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\n\n\n        _this2.setTableData(\"shuiqing\", data.data); // 更新水情历史数据表的数据\n\n\n        _this2.table.shuiqing.loading = false; // 取消表格加载\n      });\n    },\n    // 查询\n    search_shuiqing: function search_shuiqing(tableType) {\n      var _this3 = this;\n\n      var tableType = tableType || this.select.shuiqing_select;\n      this.letTableLoading(\"shuiqing\"); // 表格加载中\n      // 传递参数\n\n      var body = {\n        STCD: this.siteInfo.STCD,\n        _page: this.table.shuiqing.currentPage || 1,\n        _page_size: this.table.shuiqing.pageSizes || 20\n      }; // 如果有选择排序，则传递排序参数\n\n      if (this.table.shuiqing.sort) {\n        var _sort = this.$FilterData.sort_Filter(this.table.shuiqing.sort);\n\n        if (_sort) {\n          body._orderby = _sort;\n        }\n      } else {\n        switch (tableType) {\n          case 'historyTable':\n            body._orderby = \"TM desc\";\n            break;\n\n          case 'hourTable':\n            body._orderby = \"DT desc\";\n            break;\n\n          case 'dayTable':\n            body._orderby = \"TM desc\";\n            break;\n\n          case 'monthTable':\n            body._orderby = \"DT desc\";\n            break;\n        }\n      } // 如果有选择日期进行查询，根据表格类型传递参数\n\n\n      if (this.table.shuiqing.date) {\n        switch (tableType) {\n          case \"historyTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2];\n            break;\n\n          case \"dayTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date, \"dayTable\").split(\",\");\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2];\n            break;\n\n          case \"hourTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date).split(\",\");\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2];\n            break;\n\n          case \"monthTable\":\n            var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date, \"monthTable\").split(\",\");\n            body.Time_min = DTT[1];\n            body.Time_max = DTT[2]; // body.YE = this.$FilterData.elDatePicker_Filter(\n            //   this.table.shuiqing.date,\n            //   \"monthTable\"\n            // ).YE;\n            // body.MON = this.$FilterData.elDatePicker_Filter(\n            //   this.table.shuiqing.date,\n            //   \"monthTable\"\n            // ).MON;\n\n            break;\n        }\n      } // 获取渠道水情历史数据\n\n\n      this.$GetData.Survey_History_QDSQ(tableType, body, {\n        default: true,\n        myFilter: function myFilter(data) {\n          data.map(function (val) {\n            val.currentPage = body._page;\n            val.pageSizes = body._page_size;\n            return val;\n          });\n          return data;\n        }\n      }, function (data) {\n        _this3.setTableTotal(\"shuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\n\n\n        _this3.setTableData(\"shuiqing\", data.data); // 更新水情历史数据表的数据\n\n\n        body._page_size = 999999999;\n        body._page = 1;\n\n        _this3.$GetData.Survey_History_QDSQ(tableType, body, {\n          default: true,\n          myFilter: function myFilter(data) {\n            data.map(function (val) {\n              val.currentPage = body._page;\n              val.pageSizes = body._page_size;\n              return val;\n            });\n            return data;\n          }\n        }, function (chartData) {\n          _this3.createChart_shuiqingshuju(\"shuiqingChart\", tableType, chartData.data); // 水情表格\n\n        });\n\n        _this3.cancelTableLoading(\"shuiqing\"); // 取消表格加载\n\n      });\n    },\n    // 查询关系曲线表格\n    search_guanxiquxian: function search_guanxiquxian() {\n      var _this4 = this;\n\n      this.letTableLoading(\"guanxiquxian\"); // 传递参数\n\n      var body = {\n        STCD: this.siteInfo.STCD,\n        _page: this.table[\"guanxiquxian\"].currentPage || 1,\n        _page_size: this.table[\"guanxiquxian\"].pageSizes || 20\n      }; // 如果有选择日期进行查询，根据表格类型传递参数\n\n      if (this.table.guanxiquxian.date) {\n        body.YR = this.$FilterData.elDatePicker_Filter(this.table.guanxiquxian.date, \"onlyYear\");\n      }\n\n      this.$GetData.Base_MonitoringSites(\"Z_Q_relation\", body, {\n        default: true,\n        myFilter: function myFilter(data) {\n          data.map(function (val) {\n            val.currentPage = body._page;\n            val.pageSizes = body._page_size;\n            return val;\n          });\n          return data;\n        }\n      }, function (data) {\n        _this4.setTableTotal(\"guanxiquxian\", data.total);\n\n        _this4.setTableData(\"guanxiquxian\", data.data);\n\n        _this4.cancelTableLoading(\"guanxiquxian\");\n      });\n    },\n    // 设置表格总条数\n    setTableTotal: function setTableTotal(tableName, total) {\n      this.table[tableName].total = total;\n    },\n    // 表格加载中\n    letTableLoading: function letTableLoading(tableName) {\n      this.table[tableName].loading = true;\n    },\n    // 取消表格加载\n    cancelTableLoading: function cancelTableLoading(tableName) {\n      this.table[tableName].loading = false;\n    },\n    // 绘图\n    createChart_guanxiquxian: function createChart_guanxiquxian(idName) {\n      var myChart = this.$echarts.init(document.getElementById(idName));\n      myChart.setOption({\n        title: {// text: this.info.STNM\n          // subtext: \"纯属虚构\"\n        },\n        tooltip: {\n          trigger: \"axis\"\n        },\n        legend: {\n          data: [\"流量\", \"水深\"]\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {\n              show: true\n            },\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: [\"line\", \"bar\"]\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        calculable: true,\n        xAxis: [{\n          type: \"category\",\n          boundaryGap: false,\n          data: [\"00:00-02:00\", \"02:00-04:00\", \"04:00-06:00\", \"06:00-08:00\", \"08:00-10:00\"]\n        }],\n        yAxis: [{\n          name: \"流量 m³/s\",\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value}\"\n          }\n        }, {\n          name: \"水深 m\",\n          type: \"value\",\n          axisLabel: {\n            formatter: \"{value} \"\n          }\n        }],\n        series: [{\n          name: \"流量\",\n          type: \"line\",\n          data: [11, 11, 15, 13, 12, 13, 10],\n          markLine: {\n            data: [{\n              type: \"average\",\n              name: \"平均值\"\n            }]\n          }\n        }, {\n          name: \"水深\",\n          type: \"line\",\n          data: [1, 4, 2, 5, 3, 2, 0],\n          yAxisIndex: 1,\n          markLine: {\n            data: [{\n              type: \"average\",\n              name: \"平均值\"\n            }],\n            effect: {\n              show: false,\n              loop: true,\n              period: 15,\n              scaleSize: 10,\n              color: null,\n              shadowColor: null,\n              shadowBlur: null\n            }\n          }\n        }]\n      });\n    },\n    // 制图\n    createChart_shuiqingshuju: function createChart_shuiqingshuju(id, tableType, data) {\n      var ele = document.getElementById(id);\n\n      if (data.length > 0) {\n        var echartData = this.$App.transform_QDSQ_data_into_ehart_data(data, tableType, true); // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n\n        if (!this.chart.shuiqing) {\n          this.chart.shuiqing = this.$echarts.init(ele);\n        }\n\n        this.chart.shuiqing.setOption({\n          title: {\n            text: echartData.chartName\n          },\n          tooltip: {\n            trigger: \"axis\"\n          },\n          legend: {\n            data: [echartData.y1.name, echartData.y2.name],\n            y: \"bottom\"\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              mark: {\n                show: true\n              },\n              magicType: {\n                show: true,\n                type: [\"line\", \"bar\"]\n              },\n              restore: {\n                show: true\n              },\n              saveAsImage: {\n                show: true\n              }\n            }\n          },\n          calculable: true,\n          animation: true,\n          xAxis: [{\n            type: \"category\",\n            // boundaryGap: false,\n            data: echartData.x.list,\n            axisTick: {\n              interval: function interval(index, val) {\n                var listLength = echartData.x.list.length;\n\n                if (listLength >= 4) {\n                  var tick = Math.round(listLength / 4);\n\n                  if ((index + 1) % tick === 0) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                } else {\n                  return true;\n                }\n              },\n              length: 10\n            },\n            axisLabel: {\n              interval: function interval(index, val) {\n                var listLength = echartData.x.list.length;\n\n                if (listLength >= 4) {\n                  var tick = Math.round(listLength / 4);\n                  var a = (index + 1) % tick;\n\n                  if ((index + 1) % tick === 0) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                } else {\n                  return true;\n                }\n              },\n              rotate: 10,\n              margin: 16\n            }\n          }],\n          yAxis: [{\n            name: \"\".concat(echartData.y1.name, \" m\\xB3/s\"),\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value} \"\n            },\n            scale: true // max: echartData.y1.max,\n            // min: echartData.y1.min\n\n          }, {\n            name: \"\".concat(echartData.y2.name, \"m\"),\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value} \"\n            },\n            scale: true // max: echartData.y2.max,\n            // min: echartData.y2.min\n\n          }],\n          series: [{\n            name: echartData.y1.name,\n            type: \"line\",\n            data: echartData.y1.list\n          }, {\n            name: echartData.y2.name,\n            type: \"line\",\n            data: echartData.y2.list,\n            yAxisIndex: 1\n          }, {\n            name: echartData.y3.name,\n            type: \"bar\",\n            data: echartData.y3.list,\n            yAxisIndex: 1,\n            barMaxWidth: 10\n          }]\n        });\n      }\n    },\n    // 加载站点数据\n    loadSiteData: function loadSiteData(data) {\n      this.siteInfo = data;\n    },\n    // 组件加载中\n    componentLoading: function componentLoading() {\n      this.boxLoading = true;\n    },\n    // 取消组件加载\n    cancelComponentLoading: function cancelComponentLoading() {\n      this.boxLoading = false;\n    },\n    // 处理页码切换_水情数据\n    handleCurrentChange_shuiqing: function handleCurrentChange_shuiqing(index) {\n      this.table[\"shuiqing\"].currentPage = index;\n      this.search_shuiqing();\n    },\n    // 处理页码切换_关系曲线\n    handleCurrentChange_guanxiquxian: function handleCurrentChange_guanxiquxian(index) {\n      this.table[\"guanxiquxian\"].currentPage = index;\n      this.search_guanxiquxian();\n    },\n    // 处理页码切换_特征水深\n    handleCurrentChange_tezhengshuiqing: function handleCurrentChange_tezhengshuiqing(index) {\n      this.table[\"tezhengshuiqing\"].currentPage = index;\n      this.search_tezhengshuiqing();\n    },\n    // 处理每页显示条数切换_水情数据\n    handleSizeChange_shuiqing: function handleSizeChange_shuiqing(pageSizes) {\n      this.table[\"shuiqing\"].pageSizes = pageSizes;\n      this.table[\"shuiqing\"].currentPage = 1;\n      this.search_shuiqing();\n    },\n    // 处理每页显示条数切换_关系曲线\n    handleSizeChange_guanxiquxian: function handleSizeChange_guanxiquxian(pageSizes) {\n      this.table[\"guanxiquxian\"].pageSizes = pageSizes;\n      this.table[\"guanxiquxian\"].currentPage = 1;\n      this.search_guanxiquxian();\n    },\n    // 处理每页显示条数切换_特征水深\n    handleSizeChange_tezhengshuiqing: function handleSizeChange_tezhengshuiqing(pageSizes) {\n      this.table[\"tezhengshuiqing\"].pageSizes = pageSizes;\n      this.table[\"tezhengshuiqing\"].currentPage = 1;\n      this.search_tezhengshuiqing();\n    },\n    // 分页过滤\n    pageFilter: function pageFilter(currentPage, pageSizes, tableName) {\n      var _currentPage = currentPage || this.table.currentPage;\n\n      var _pageSizes = pageSizes || this.table.pageSizes;\n\n      if (this.table.Rows_filter.length != 0) {\n        // 截取数组\n        var newList = this.table.Rows_filter.slice((_currentPage - 1) * _pageSizes, _currentPage * _pageSizes);\n        return newList;\n      } else {\n        return [];\n      }\n    },\n    // 水情历史数据表 当前正在激活的表头\n    setActiveColumns_shuiqing: function setActiveColumns_shuiqing(tableType) {\n      this.table.shuiqing.activeColumns = this.table.shuiqing.columns[tableType];\n    },\n    // 切换 水情历史数据表类型\n    tableTypeOnChange_shuiqing: function tableTypeOnChange_shuiqing(tableType) {\n      this.table[\"shuiqing\"].currentPage = 1;\n      this.table[\"shuiqing\"].date = null;\n      this.table[\"shuiqing\"].sort = null;\n      console.log(this.table);\n      this.setDatePickerType_shuiqing(tableType); // 设置日期时间选择器的类型\n\n      this.select[\"shuiqing_select\"] = tableType; // 设置选中的表\n      // this.setSelectOption_quickSearch(tableType); // 设置数据表快速查询选择框内容\n\n      this.setActiveColumns_shuiqing(tableType); // 设置水情历史数据表 当前激活的表头\n\n      this.table.shuiqing.loading = true; // 表格加载中\n\n      if (this[\"setTableDefaultDate_shuiqing_\".concat(tableType)]) {\n        this[\"setTableDefaultDate_shuiqing_\".concat(tableType)]();\n      } // 获取对应水情历史数据表的数据\n\n\n      this.search_shuiqing();\n    },\n    // 设置水情数据历史表默认查询日期\n    setTableDefaultDate_shuiqing_historyTable: function setTableDefaultDate_shuiqing_historyTable() {\n      var end = new Date();\n      var start = zeroPointOfTheDay();\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置水情数据小时表默认查询日期\n    setTableDefaultDate_shuiqing_hourTable: function setTableDefaultDate_shuiqing_hourTable() {\n      var end = new Date();\n      var start = zeroPointOfTheDay();\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置水情数据日表默认查询日期\n    setTableDefaultDate_shuiqing_dayTable: function setTableDefaultDate_shuiqing_dayTable() {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置水情数据月表默认查询日期\n    setTableDefaultDate_shuiqing_monthTable: function setTableDefaultDate_shuiqing_monthTable() {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 160);\n      var timeSlot = [start, end];\n      this.setTableDate(\"shuiqing\", timeSlot);\n\n      function zeroPointOfTheDay() {\n        var date = new Date();\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n      }\n    },\n    // 设置日期时间选择器的类型\n    setDatePickerType_shuiqing: function setDatePickerType_shuiqing(tableType) {\n      var datePickerType;\n\n      switch (tableType) {\n        case \"historyTable\":\n          datePickerType = \"datetimerange\";\n          break;\n\n        case \"hourTable\":\n          datePickerType = \"datetimerange\";\n          break;\n\n        case \"dayTable\":\n          datePickerType = \"daterange\";\n          break;\n\n        case \"monthTable\":\n          datePickerType = \"monthrange\";\n          break;\n      }\n\n      this.table[\"shuiqing\"].datePickerType = datePickerType;\n    },\n    // 设置数据表快速查询选择框内容\n    setSelectOption_quickSearch: function setSelectOption_quickSearch(tableType) {\n      this.select.activeQuickSearchList = this.select.quickSearch[tableType];\n      this.select.select = this.select.activeQuickSearchList[0] ? this.select.activeQuickSearchList[0].value : null; // 设置默认值为第一项\n    },\n    // 获取特征水深表格的数据\n    getTableData_tezhengshuiqing: function getTableData_tezhengshuiqing(pageSizes, currentPage, body, callback, callback_beforeFilter) {\n      var _this5 = this;\n\n      this.axios.get(\"/guanqu/admin/ST_G_CQORD?_page_size=\".concat(pageSizes || 20, \"&_page=\").concat(currentPage || 1), {\n        params: body\n      }).then(function (res) {\n        if (typeof callback_beforeFilter == \"function\") {\n          callback_beforeFilter({\n            data: res.data.rows || [],\n            total: res.data.total || 0\n          });\n        } // 水情数据过滤\n\n\n        var data = res.data.rows.map(function (val) {\n          val.currentPage = _this5.table.shuiqing.currentPage; // 添加数据当前页码\n\n          val.pageSizes = _this5.table.shuiqing.pageSizes; // 添加当前每页条数到数据\n          // val.TMMXQ = this.dateFilter(val.TMMXQ); // 日期过滤\n\n          val.TMXQ = _this5.Z_Filter(val.TMXQ, 3); // 平均流量过滤\n\n          val.YMXQZ = _this5.Z_Filter(val.YMXQZ); // 平均水深过滤\n\n          val.WQ = _this5.Z_Filter(val.WQ, 3); // 小时累计水量过滤\n\n          return val;\n        });\n\n        if (typeof callback == \"function\") {\n          callback({\n            data: data,\n            total: res.data.total\n          });\n        }\n      });\n    },\n    // 获取特征水深预警信息表的数据\n    getTableData_tezhengshuiqing_Alarm: function getTableData_tezhengshuiqing_Alarm(body, callback, callback_beforeFilter) {\n      var _this6 = this;\n\n      this.axios.get(\"/guanqu/admin/ST_Canal_Alarm\", {\n        params: body\n      }).then(function (res) {\n        if (typeof callback_beforeFilter == \"function\") {\n          callback_beforeFilter(res);\n        } // 水情数据过滤\n\n\n        console.log('&&&&&&&&&&&&&&', res);\n        var data = res.data.list.map(function (val) {\n          val.Q = _this6.Z_Filter(val.Q, 3); // 流量过滤\n\n          val.Z = _this6.Z_Filter(val.Z); // 水深过滤\n\n          val.JYQ = _this6.Z_Filter(val.JYQ, 3); // 预警流量过滤\n\n          val.JYZ = _this6.Z_Filter(val.JYZ); // 预警水深过滤\n\n          return val;\n        });\n\n        if (typeof callback == \"function\") {\n          callback(data);\n        }\n      });\n    },\n    // 更新 XX 表格的数据\n    setTableData: function setTableData(tableName, data) {\n      this.table[tableName].Rows_filter = data;\n    },\n    // 获取对应关系曲线数据表的数据\n    getTableData_guanxiquxian: function getTableData_guanxiquxian(callback) {\n      this.axios.get(\"/guanqu/admin/ST_ZQRL_B\", {\n        params: {\n          STCD: this.info.STCD\n        }\n      }).then(function (res) {\n        var data = res.data.rows;\n\n        if (typeof callback == \"function\") {\n          callback(data);\n        }\n      });\n    },\n    // 更新水情历史数据表的数据\n    setTableData_guanxiquxian: function setTableData_guanxiquxian(data) {\n      this.table.guanxiquxian.Rows_filter = data;\n    },\n    // 根据关联编号获取关联站点\n    getRelateSiteByRelateCode: function getRelateSiteByRelateCode(callback) {\n      var RELATECODE = this.info.RELATECODE;\n\n      if (RELATECODE && RELATECODE != 0) {\n        this.axios.get(\"/guanqu/admin/ST_STBPRP_B\", {\n          params: {\n            RELATECODE: RELATECODE\n          }\n        }).then(function (res) {\n          var data = res.data.rows;\n\n          if (typeof callback == \"function\") {\n            callback(data);\n          }\n        });\n      }\n    },\n    // 根据行政区划编码获取行政区划\n    getCompartmentByADDVCD: function getCompartmentByADDVCD(callback) {\n      var ADDVCD = this.info.rowinfo.ADDVCD;\n\n      if (ADDVCD && ADDVCD != \"\") {\n        this.axios.get(\"/guanqu/admin/WRP_AD_B\", {\n          params: {\n            AD_CD: ADDVCD\n          }\n        }).then(function (res) {\n          var data = res.data.rows;\n\n          if (typeof callback == \"function\") {\n            callback(data);\n          }\n        });\n      }\n    },\n    // 特征水深表格查询\n    search_tezhengshuiqing: function search_tezhengshuiqing() {\n      var _this7 = this;\n\n      this.letTableLoading(\"tezhengshuiqing\"); // 表格加载中\n      // 传递站码参数\n\n      var body = {\n        STCD: this.siteInfo.STCD,\n        _page: this.table.tezhengshuiqing.currentPage,\n        _page_size: this.table.tezhengshuiqing.pageSizes\n      };\n\n      if (this.table.tezhengshuiqing.date) {\n        body.YR = this.$FilterData.elDatePicker_Filter(this.table.tezhengshuiqing.date, \"maxQTable\");\n      }\n\n      this.$GetData.Survey_History_QDSQ(\"maxQTable\", body, {\n        default: true,\n        myFilter: function myFilter(data) {\n          data.map(function (val) {\n            val.currentPage = body._page;\n            val.pageSizes = body._page_size;\n            return val;\n          });\n          return data;\n        }\n      }, function (data) {\n        _this7.setTableTotal(\"tezhengshuiqing\", data.total); // 根据返回的total数量, 设置表格总条数\n\n\n        _this7.setTableData(\"tezhengshuiqing\", data.data); // 更新特征水深数据表的数据\n\n\n        _this7.cancelTableLoading(\"tezhengshuiqing\"); // 取消表格加载\n\n      }); // // 获取特征水深表格数据\n      // this.getTableData_tezhengshuiqing(pageSizes, currentPage, body, data => {\n      // });\n    },\n    // 设置特征水深预警信息数据\n    setAlarmData_tezhengshuiqing: function setAlarmData_tezhengshuiqing(data) {\n      console.log('%%%%%%%%%%', data);\n      this.table.tezhengshuiqing.alarmData = data;\n      this.info.rowinfo.YUJING_Q = data.JYQ;\n      this.info.rowinfo.YUJING_Z = data.JYZ;\n    },\n    // 处理日期时间选择器确定事件_水情数据\n    handleDatePickerChange: function handleDatePickerChange(item) {\n      this.table.shuiqing.currentPage = 1;\n      this.search_shuiqing();\n    },\n    handleDatePickerChange_tezhengshuiqing: function handleDatePickerChange_tezhengshuiqing() {\n      this.table.tezhengshuiqing.currentPage = 1;\n      this.search_tezhengshuiqing();\n    },\n    handleDatePickerChange_guanxiquxian: function handleDatePickerChange_guanxiquxian(item) {\n      this.search_guanxiquxian();\n    },\n    // 设置 xx表格 时间选择器值\n    setTableDate: function setTableDate(tableName, val) {\n      this.table[tableName].date = val;\n    },\n    // 特征水情表默认查询时间\n    setTableDefaultDate_tezhengshuiqing: function setTableDefaultDate_tezhengshuiqing() {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 5);\n      var timeSlot = [start, end];\n      this.setTableDate(\"tezhengshuiqing\", timeSlot);\n    },\n    // 排序（后端排序）\n    sort_change_shuiqing: function sort_change_shuiqing(item) {\n      this.table.shuiqing.sort = item;\n      this.search_shuiqing();\n    }\n  },\n  mounted: function mounted() {\n    var _this8 = this;\n\n    // 组件加载中\n    this.componentLoading(); // 获取详情数据\n\n    this.axios.get(\"/guanqu/table/details?ID=\".concat(this.info.rowinfo.STCD, \"&pk=STCD\")).then(function (res) {\n      // 站点信息\n      // 根据关联编号获取关联站点\n      _this8.getRelateSiteByRelateCode(function (data) {}); // 根据行政区划码获取行政区划名\n\n\n      _this8.getCompartmentByADDVCD(function (data) {\n        _this8.siteInfo.AD_NM = data[0].AD_NM;\n      }); // 根据河流编码获取河流名\n\n\n      _this8.$GetData.Base_R_I({\n        RVCD: _this8.info.rowinfo.RVCD\n      }, true, function (data) {\n        _this8.siteInfo.RVCD = data.data[0].RVNM;\n      }); // 根据流域编码获取流域名\n\n\n      _this8.$GetData.Base_B_I({\n        CTCD: _this8.info.rowinfo.CTCD\n      }, true, function (data) {\n        _this8.siteInfo.CTCD = data.data[0].CTNM;\n      }); // 加载站点数据\n\n\n      _this8.loadSiteData(res.data); // 加载取消\n\n\n      _this8.cancelComponentLoading(); // 水情数据\n\n\n      _this8.tableTypeOnChange_shuiqing(_this8.info.rowinfo.tableType.qdsq); // 设置 默认的水情历史数据表\n      // 关系曲线\n\n\n      _this8.search_guanxiquxian(); // 特征水深最大流量表数据\n\n\n      if (_this8.setTableDefaultDate_tezhengshuiqing) {\n        _this8.setTableDefaultDate_tezhengshuiqing(); // 默认查询日期\n\n      }\n\n      _this8.search_tezhengshuiqing(); // 特征水深预警信息表数据\n\n\n      _this8.getTableData_tezhengshuiqing_Alarm({\n        STCD: _this8.siteInfo.STCD\n      }, function (data) {\n        _this8.setAlarmData_tezhengshuiqing(data[0]);\n      });\n    });\n  }\n};",null]}