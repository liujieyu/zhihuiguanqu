{"remainingRequest":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\gvisualplace\\zhihuiguanqu\\src\\warm\\warm-ldresult\\result-manage\\warmresult.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\src\\warm\\warm-ldresult\\result-manage\\warmresult.vue","mtime":1645514326432},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\";\r\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\r\nimport App from \"@/App.vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      show1:true,\r\n      span1:'19',\r\n      span2:'5',\r\n      theight:window.innerHeight-290,\r\n      searchmsg:'',\r\n      href:'',\r\n      Treedata: [],\r\n      defaultProps: {\r\n          children: 'children',\r\n          label: 'label'\r\n        },\r\n      keys:[],\r\n      data1: [],\r\n      date:'',\r\n      STinfo:{},\r\n      form:{\r\n        year:'',\r\n      },\r\n      yearlist:[],\r\n      tree_filter_node:[],\r\n      data2:[],\r\n      Menu: { show_Controller: false },\r\n    };\r\n  },\r\n  // 引入过滤方法到此组件\r\n  mixins: [FilterMethods, GetDataMethods],\r\n  mounted() {\r\n    var date = new Date();\r\n    var year=date.getFullYear();\r\n    this.form.year=year;\r\n    for(let i=0;i<10;i++){\r\n        let y_obj=new Object();\r\n        y_obj.value=year;\r\n        y_obj.label=year+'年';\r\n        this.yearlist.push(y_obj);\r\n        year--;\r\n    }\r\n    this.href='/ldresult/upload';\r\n    this.axios.get('/ldresult/typesite').then(res => {\r\n      var root=new Object();\r\n      root[\"label\"]=\"类型\";root[\"ZD_SIGN\"]=0;root[\"STCD\"]=\"0\";\r\n      var typelist=new Array();\r\n      var type1=new Object();\r\n      type1[\"label\"]=\"标准断面\";type1[\"ME_TYPE\"]=1;type1[\"ZD_SIGN\"]=0;type1[\"STCD\"]=\"1\";typelist.push(type1);\r\n      var type2=new Object();\r\n      type2[\"label\"]=\"巴歇尔槽\";type2[\"ME_TYPE\"]=2;type2[\"ZD_SIGN\"]=0;type2[\"STCD\"]=\"2\";typelist.push(type2);\r\n      var type3=new Object();\r\n      type3[\"label\"]=\"水闸\";type3[\"ME_TYPE\"]=3;type3[\"ZD_SIGN\"]=0;type3[\"STCD\"]=\"3\";typelist.push(type3);\r\n      var type4=new Object();\r\n      type4[\"label\"]=\"管道\";type4[\"ME_TYPE\"]=4;type4[\"ZD_SIGN\"]=0;type4[\"STCD\"]=\"4\";typelist.push(type4);\r\n      root.children=typelist;\r\n      var keyarry=[\"0\",\"1\"];\r\n      var datalist=res.data;\r\n      for(var h=0;h<datalist.length;h++){\r\n        datalist[h].label=datalist[h].STNM;\r\n      }\r\n      typelist.map(val => {\r\n                val.children = getChildrenList(val.ME_TYPE, datalist);\r\n                return val;\r\n            });\r\n      function getChildrenList(me_type, data) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.ME_TYPE == me_type) {\r\n                        return true;\r\n                    }\r\n                })\r\n                return newList;\r\n            }\r\n      keyarry.push(typelist[0].children[0].STCD);\r\n      this.Treedata.push(root);\r\n      this.keys=keyarry;\r\n      this.STinfo=typelist[0].children[0];\r\n      this.axios.get('/ldresult/maxinfo',{params: {metype:this.STinfo.ME_TYPE,stcd:this.STinfo.STCD}}).then(res => {\r\n            var maxobj=res.data;\r\n            this.STinfo.MAX_Z=maxobj.MAX_Z;\r\n            this.STinfo.MAX_Q=maxobj.MAX_Q;\r\n            if(this.STinfo.MAX_Z==undefined || this.STinfo.MAX_Z==''){\r\n              this.STinfo.MAX_Z=0;\r\n            }\r\n            if(this.STinfo.MAX_Q==undefined || this.STinfo.MAX_Q==''){\r\n              this.STinfo.MAX_Q=0;\r\n            }\r\n            this.Reload();\r\n          });\r\n      });\r\n  },\r\n  methods: {\r\n    Menu_toggle() {\r\n      this.Menu.show_Controller = !this.Menu.show_Controller;\r\n      this.show1 = !this.show1;\r\n      if (this.show1 == true ) {\r\n        this.span1 = '19';\r\n        this.span2 = '5';\r\n        this.data2 = {};\r\n      }else{\r\n        this.span1 = '24';\r\n        this.span2 = '0';\r\n        this.data2 = {}\r\n      }\r\n      this.Reload();\r\n    },\r\n    type_tree(data){\r\n      if (data.ZD_SIGN == 1) {\r\n        this.STinfo = data;\r\n        if(data.ME_TYPE==1 || data.ME_TYPE==2){\r\n          this.axios.get('/ldresult/maxinfo',{params: {metype:data.ME_TYPE,stcd:data.STCD}}).then(res => {\r\n            var maxobj=res.data;\r\n            this.STinfo.MAX_Z=maxobj.MAX_Z;\r\n            this.STinfo.MAX_Q=maxobj.MAX_Q;\r\n            if(this.STinfo.MAX_Z==undefined || this.STinfo.MAX_Z==''){\r\n              this.STinfo.MAX_Z=0;\r\n            }\r\n            if(this.STinfo.MAX_Q==undefined || this.STinfo.MAX_Q==''){\r\n              this.STinfo.MAX_Q=0;\r\n            }\r\n            this.Reload();\r\n          });\r\n        }else{\r\n          this.STinfo.MAX_Z=0;\r\n          this.STinfo.MAX_Q=0;\r\n          this.Reload();\r\n        }\r\n        \r\n      }\r\n    },\r\n    drawchart() {\r\n      var achart = this.$echarts.init(this.$refs.achart);\r\n      console.log(achart);\r\n      achart.resize();\r\n      achart.setOption({\r\n        title: { text: \"流量曲线图\" },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n          type: 'cross',\r\n          animation: false,\r\n          },\r\n          formatter: function (params) {\r\n            var tip=\"\";\r\n            if(params !=null && params.length>0){\r\n              for(var i=0;i<params.length;i++){\r\n                tip+=params[i].seriesName+'<br/>'+params[i].marker+'水深：'+params[i].name+'&nbsp;&nbsp;流量：'+params[i].value+'<br/>';\r\n              }\r\n            }\r\n            return tip;\r\n          },\r\n        },\r\n        toolbox: {\r\n          show: true,\r\n          feature: {\r\n              saveAsImage: {}\r\n          }\r\n        },\r\n        legend: {\r\n          data: this.data2.legend\r\n        },\r\n        calculable: true,\r\n        xAxis: [\r\n          {\r\n            type: \"category\",      \r\n            name:'水深',\r\n            axisLine: {\r\n                onZero: false,\r\n                lineStyle: {\r\n                    color: \"#2f4554\"\r\n                }\r\n            },\r\n            data:this.data2.x1.list,\r\n            axisLabel:{\r\n              interval:parseInt(this.data2.x1.list.length/10),\r\n              showMinLabel: true,\r\n              showMaxLabel: true,\r\n              },\r\n          },\r\n          {\r\n            type: 'category',\r\n            name:'水深',\r\n            axisTick: {\r\n                alignWithLabel: true\r\n            },\r\n            axisLine: {\r\n                onZero: false,\r\n                lineStyle: {\r\n                    color: \"#c23531\"\r\n                }\r\n            },\r\n            data: this.data2.x2.list,\r\n            axisLabel:{\r\n              interval:parseInt(this.data2.x2.list.length/10),\r\n              showMinLabel: true,\r\n              showMaxLabel: true,\r\n              },\r\n        }\r\n        ],\r\n        grid: { // 控制图的大小，调整下面这些值就可以，\r\n          x: 70,\r\n          x2: 40,\r\n          y2: 100// y2可以控制 X轴跟Zoom控件之间的间隔，避免以为倾斜后造成 label重叠到zoom上\r\n        },\r\n        yAxis: [\r\n          {\r\n            name: \"流量\",\r\n            type: \"value\",\r\n            min:parseFloat(this.data2.y1.min),\r\n            max:parseFloat(this.data2.y1.max)\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: this.data2.legend[1],\r\n            type: \"line\",\r\n            data:this.data2.y1.list,\r\n            smooth:true,\r\n            xAxisIndex: 0,\r\n            itemStyle: {\r\n                        normal: {\r\n                            color: \"#2f4554\",//折线点的颜色\r\n                            lineStyle: {\r\n                                color: \"#2f4554\"//折线的颜色\r\n                            }\r\n                        }\r\n                    },\r\n          },\r\n          {\r\n            name: this.data2.legend[0],\r\n            type: \"line\",\r\n            data: this.data2.y2.list,\r\n            smooth:true,\r\n            xAxisIndex: 1,\r\n            itemStyle: {\r\n                        normal: {\r\n                            color: \"#c23531\",//折线点的颜色\r\n                            lineStyle: {\r\n                                color: \"#c23531\"//折线的颜色\r\n                            }\r\n                        }\r\n                    },\r\n          }\r\n        ]\r\n      });\r\n    },\r\n    Yearsearch(){\r\n      this.Reload();\r\n    },\r\n    Reload() {\r\n      let obj = {\r\n          stcd:this.STinfo.STCD,\r\n          year:this.form.year\r\n      };\r\n      let lastyear=parseInt(this.form.year)-1;\r\n      this.loading = true;\r\n      this.axios.get('/ldresult/eqrllist',{params: obj}).then(res => {\r\n          var newdatalist = res.data.curlist.map(val => {\r\n                var newobj=new Object();\r\n                newobj[\"Z\"]=parseFloat(val[\"Z\"]).toFixed(2);\r\n                newobj[\"Q\"]=parseFloat(val[\"Q\"]).toFixed(3);\r\n                newobj[\"ID\"]=val[\"ID\"];\r\n                return newobj;\r\n            });\r\n          this.data1 = newdatalist;\r\n          this.loading = false;\r\n          setTimeout(()=> {\r\n                            this.$refs.refTable.doLayout();\r\n          },100);\r\n          var curlist=res.data.curlist;\r\n          var lastlist=res.data.lastlist;\r\n          var echartData = {\r\n                        chartName: \"曲线图\",\r\n                        legend:[lastyear+\"年\",this.form.year+\"年\"],\r\n                        x1: new Object(),\r\n                        x2: new Object(),\r\n                        y1: new Object(),\r\n                        y2: new Object()\r\n                    }\r\n          var curx=FilterMethods.methods.newArrayByObjArray(curlist, \"Z\", val => { // 过滤\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n          var lastx=FilterMethods.methods.newArrayByObjArray(lastlist, \"Z\", val => { // 过滤\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n            echartData.x2.list= lastx;       \r\n            echartData.y2.list=this.getY(lastlist);\r\n            echartData.x1.list=curx;\r\n            echartData.y1.list=this.getY(curlist);\r\n            echartData.y1.min=0;\r\n          var maxq=this.getMaxQ(lastlist);\r\n          if(this.STinfo.MAX_Q<maxq){\r\n            this.STinfo.MAX_Q=maxq;\r\n          }\r\n          maxq=this.getMaxQ(curlist);\r\n          if(this.STinfo.MAX_Q<maxq){\r\n            this.STinfo.MAX_Q=maxq;\r\n          }\r\n          echartData.y1.max=(parseFloat(this.STinfo.MAX_Q)+0.1).toFixed(2);\r\n\r\n          this.data2=echartData;\r\n           this.drawchart();\r\n        });\r\n    },\r\n    indexMethod(index){\r\n      return index + 1;\r\n    },\r\n    //新增\r\n    addresult(){\r\n      var formobj=new Object();\r\n      formobj.stcd=this.STinfo.STCD;\r\n      formobj.stnm=this.STinfo.STNM;\r\n      formobj.year=this.form.year;\r\n      formobj.sign=\"add\";\r\n      formobj.itype=\"resultform\";\r\n      formobj.title=\"新增率定结果信息\";\r\n      this.$emit('showdailog', formobj);\r\n    },\r\n    //修改\r\n    updateClick(row){\r\n      var formobj=new Object();\r\n      formobj.stcd=this.STinfo.STCD;\r\n      formobj.stnm=this.STinfo.STNM;\r\n      formobj.year=this.form.year;\r\n      formobj.z=row.Z;\r\n      formobj.q=row.Q;\r\n      formobj.id=row.ID;\r\n      formobj.sign=\"update\";\r\n      formobj.itype=\"resultform\";\r\n      formobj.title=\"修改率定结果信息\";\r\n      this.$emit('showdailog', formobj);\r\n    },\r\n    //删除\r\n    deleteClick(row){\r\n      this.$confirm('是否删除该记录?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.axios.get('/ldresult/deleteeqrl',{params: {id:row.ID}}).then(res => {\r\n          if(res.data==\"ok\"){\r\n           this.$message({message:'删除率定结果成功！',type:'success'});\r\n           this.Reload();\r\n         }      \r\n        });\r\n        });\r\n    },\r\n    //获取y轴信息\r\n    getY(array){\r\n      var newArray = array.map(val => {\r\n                var newVal = val[\"Q\"];\r\n                return newVal;\r\n            });\r\n            return newArray;\r\n    },\r\n    //获取数据中的最大值\r\n    getMaxQ(array){\r\n        var maxq=0;\r\n        array.map(val => {\r\n                if(val[\"Q\"]>maxq){\r\n                  maxq=val[\"Q\"];\r\n                }\r\n            });\r\n        return maxq;\r\n    },\r\n    exportExcel(){\r\n      var params=\"year=\"+this.form.year+\"&stcd=\"+this.STinfo.STCD+\"&stnm=\"+this.STinfo.STNM+\"&metypename=\"+this.STinfo.TYPE_NM+\"&canalname=\"+this.STinfo.CANAL_NAME+\"&maxz=\"+this.STinfo.MAX_Z;\r\n       window.location.href='/excel/exportldresult?'+params;\r\n    },\r\n    excelMuban(){\r\n      window.location.href='audio/率定结果数据录入模板.xls';\r\n    },\r\n    exportSite(){\r\n      window.location.href='/excel/exportlvsite';\r\n    },\r\n    upLoadSuccess(response, file, fileList) {\r\n                var objres=response;\r\n                if(objres.sign==1){\r\n                  this.$message({ type: 'success', message: '上传文件成功！' });\r\n                }else{\r\n                   var info=objres.info;\r\n                   this.$message({ type: 'error',message: info });\r\n                }\r\n                this.$refs.upload.clearFiles();\r\n            },\r\n    //站点查询\r\n    search(){\r\n          this.Treedata=new Array();\r\n            var tt=this.STinfo;\r\n            this.axios.get('/ldresult/typesite',{params:{stnm:this.searchmsg}}).then(res => {\r\n      var root=new Object();\r\n      root[\"label\"]=\"类型\";root[\"ZD_SIGN\"]=0;root[\"STCD\"]=\"0\";\r\n      var typelist=new Array();\r\n      var type1=new Object();\r\n      type1[\"label\"]=\"标准断面\";type1[\"ME_TYPE\"]=1;type1[\"ZD_SIGN\"]=0;type1[\"STCD\"]=\"1\";typelist.push(type1);\r\n      var type2=new Object();\r\n      type2[\"label\"]=\"巴歇尔槽\";type2[\"ME_TYPE\"]=2;type2[\"ZD_SIGN\"]=0;type2[\"STCD\"]=\"2\";typelist.push(type2);\r\n      var type3=new Object();\r\n      type3[\"label\"]=\"水闸\";type3[\"ME_TYPE\"]=3;type3[\"ZD_SIGN\"]=0;type3[\"STCD\"]=\"3\";typelist.push(type3);\r\n      var type4=new Object();\r\n      type4[\"label\"]=\"管道\";type4[\"ME_TYPE\"]=4;type4[\"ZD_SIGN\"]=0;type4[\"STCD\"]=\"4\";typelist.push(type4);\r\n      var keyarry=[\"0\"];\r\n      var datalist=res.data;\r\n      datalist.map(val=>{\r\n        val.label=val.STNM;\r\n      });\r\n      typelist.map(val => {\r\n                val.children = getChildrenList(val.ME_TYPE, datalist);\r\n                return val;\r\n            });\r\n      function getChildrenList(me_type, data) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.ME_TYPE == me_type) {\r\n                        return true;\r\n                    }\r\n                })\r\n                return newList;\r\n            }\r\n      for(var i=typelist.length-1;i>=0;i--){\r\n          var typeobj=typelist[i];\r\n          if(typeobj.children==null || typeobj.children.length==0){\r\n              typelist.splice(i,1);\r\n          }\r\n      }\r\n      keyarry.push(typelist[0].ME_TYPE);\r\n      keyarry.push(typelist[0].children[0].STCD);\r\n      root.children=typelist;\r\n      this.Treedata.push(root);\r\n      this.keys=keyarry;\r\n      this.STinfo=typelist[0].children[0];\r\n      this.axios.get('/ldresult/maxinfo',{params: {metype:this.STinfo.ME_TYPE,stcd:this.STinfo.STCD}}).then(res => {\r\n            var maxobj=res.data;\r\n            this.STinfo.MAX_Z=maxobj.MAX_Z;\r\n            this.STinfo.MAX_Q=maxobj.MAX_Q;\r\n            if(this.STinfo.MAX_Z==undefined || this.STinfo.MAX_Z==''){\r\n              this.STinfo.MAX_Z=0;\r\n            }\r\n            if(this.STinfo.MAX_Q==undefined || this.STinfo.MAX_Q==''){\r\n              this.STinfo.MAX_Q=0;\r\n            }\r\n            this.Reload();\r\n          });\r\n      });\r\n     },\r\n  },\r\n  created() {\r\n  },\r\n  watch:{\r\n    'this.$store.state.anniu': function(){\r\n      console.log(this.$store.state.anniu);\r\n    }\r\n  }\r\n\r\n};\r\n",{"version":3,"sources":["warmresult.vue"],"names":[],"mappingsfile":"warmresult.vue","sourceRoot":"src/warm/warm-ldresult/result-manage","sourcesContent":["<template>\r\n  <div>\r\n    <Content :style=\"{padding: '20px', background: '#fff'}\">\r\n      <Row :gutter=\"16\">\r\n        <Col :span=\"span1\">\r\n          <Row :gutter=\"16\" type=\"flex\" justify=\"start\" z style=\"margin-top: 10px;line-height: 32px;\">\r\n            <Col>\r\n              年份:\r\n                <Select v-model=\"form.year\" :clearable=\"false\" @on-change=\"Yearsearch\" style=\"width:100px;margin-left: 5px;margin-right: 20px;\">\r\n                    <Option\r\n                    v-for=\"obj in yearlist\"\r\n                    :key=\"obj.value\"\r\n                    :label=\"obj.label\"\r\n                    :value=\"obj.value\">\r\n                    </Option>\r\n                </Select>\r\n            </Col>\r\n            <Col>\r\n            </Col>\r\n            <Col>\r\n            </Col>\r\n            <Col>\r\n              <Button type=\"primary\" style=\"width: auto;margin-right: 5px;\" @click=\"exportExcel\">导出</Button>\r\n            </Col>\r\n            <Col>\r\n              <Button type=\"primary\" style=\"width: auto;margin-right: 5px;\" @click=\"addresult\">新增</Button>\r\n            </Col>\r\n            <Col>\r\n              <Button type=\"primary\" style=\"width: auto;margin-right: 5px;\" @click=\"exportSite\">导出站点编码</Button>\r\n            </Col>\r\n            <Col>\r\n            <Button type=\"primary\" style=\"width: auto;margin-right: 5px;\" @click=\"excelMuban\">模板下载</Button>\r\n            </Col>\r\n            <Col>\r\n            <el-upload\r\n            ref='upload'\r\n            class=\"upload-demo\"\r\n            :action=\"href\"\r\n            limit=\"1\"\r\n            :on-success='upLoadSuccess'\r\n            accept=\".xls,.xlsx\">\r\n            <Button type=\"primary\">批量上传</Button>\r\n            </el-upload>\r\n            </Col>\r\n          </Row>\r\n          <div class=\"switch\" @click=\"Menu_toggle\">\r\n            <i class=\"el-icon-d-arrow-left\" v-if=\"Menu.show_Controller\"></i>\r\n            <i class=\"el-icon-d-arrow-right\" v-if=\"!Menu.show_Controller\"></i>\r\n          </div>\r\n          <Divider/>\r\n          <Row>\r\n                <Col style='font-size: 14px;' class=\"borsLine\">站点名称：{{STinfo.STNM}}&nbsp;&nbsp;测量类型：{{STinfo.TYPE_NM}}&nbsp;&nbsp;所属渠道：{{STinfo.CANAL_NAME}}&nbsp;&nbsp;最大水深：{{STinfo.MAX_Z}}m&nbsp;</Col>\r\n           </Row>\r\n          <Row :gutter=\"24\" style=\"display: flex;\">\r\n            <Col style=\"width: 500px;\">\r\n              <el-table\r\n                            :data=\"data1\"\r\n                            border\r\n                            :height=\"theight\"\r\n                            v-loading=\"loading\"\r\n                            @cell-click=\"cellclick\"\r\n                            style=\"width: 400px\">\r\n                            <el-table-column\r\n                              label=\" \"\r\n                              type=\"index\"\r\n                              align=\"center\"\r\n                              width=\"55\"\r\n                              :index=\"indexMethod\" :key=\"Math.random()\">\r\n                            </el-table-column>\r\n                            <el-table-column\r\n                              prop=\"Z\"\r\n                              label=\"水深\"\r\n                              align=\"center\"\r\n                              min-width=\"70\"\r\n                              :key=\"Math.random()\"\r\n                              >\r\n                            </el-table-column>\r\n                            <el-table-column\r\n                              prop=\"Q\"\r\n                              label=\"流量\"\r\n                              align=\"center\"\r\n                              min-width=\"70\"\r\n                              :key=\"Math.random()\"\r\n                              >\r\n                            </el-table-column>\r\n                            <el-table-column label=\"操作\" align=\"center\" min-width=\"120\" :key=\"Math.random()\">\r\n                              <template slot-scope=\"scope\">\r\n                                <el-button @click=\"updateClick(scope.row)\" type=\"primary\" size=\"small\">修改</el-button>\r\n                                <el-button @click=\"deleteClick(scope.row)\" type=\"primary\" size=\"small\">删除</el-button>\r\n                              </template>\r\n                            </el-table-column>\r\n                          </el-table> \r\n            </Col>\r\n            <Col span=\"13\">\r\n              <div ref=\"achart\" style=\"width: 100%;min-height: 400px;margin-top: 1%;\"></div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <transition name=\"el-fade-in-linear\">\r\n        <Col :span=\"span2\" v-show=\"show1\">\r\n        <Row>\r\n          <Input search enter-button suffix=\"ios-search\" placeholder=\"请输入站名\" style=\"width: auto;margin-left: 20px;\" @on-search=\"search\" v-model=\"searchmsg\" />    \r\n          </Row>\r\n          <Row style=\"margin-top: 10px;margin-left: 20px;\">\r\n            <Col :style=\"{'height': (theight+83)+'px','overflow-y': 'auto'}\">\r\n              <el-tree\r\n                class=\"filter-tree\"\r\n                :data=\"Treedata\"\r\n                :props=\"defaultProps\"\r\n                highlight-current=\"true\"\r\n                @node-click=\"type_tree\"\r\n                node-key=\"STCD\"\r\n               :default-expanded-keys=\"keys\"\r\n                ref=\"tree\">\r\n              </el-tree>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </transition>\r\n      </Row>\r\n    </Content>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/javascript\">\r\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\";\r\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\r\nimport App from \"@/App.vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      show1:true,\r\n      span1:'19',\r\n      span2:'5',\r\n      theight:window.innerHeight-290,\r\n      searchmsg:'',\r\n      href:'',\r\n      Treedata: [],\r\n      defaultProps: {\r\n          children: 'children',\r\n          label: 'label'\r\n        },\r\n      keys:[],\r\n      data1: [],\r\n      date:'',\r\n      STinfo:{},\r\n      form:{\r\n        year:'',\r\n      },\r\n      yearlist:[],\r\n      tree_filter_node:[],\r\n      data2:[],\r\n      Menu: { show_Controller: false },\r\n    };\r\n  },\r\n  // 引入过滤方法到此组件\r\n  mixins: [FilterMethods, GetDataMethods],\r\n  mounted() {\r\n    var date = new Date();\r\n    var year=date.getFullYear();\r\n    this.form.year=year;\r\n    for(let i=0;i<10;i++){\r\n        let y_obj=new Object();\r\n        y_obj.value=year;\r\n        y_obj.label=year+'年';\r\n        this.yearlist.push(y_obj);\r\n        year--;\r\n    }\r\n    this.href='/ldresult/upload';\r\n    this.axios.get('/ldresult/typesite').then(res => {\r\n      var root=new Object();\r\n      root[\"label\"]=\"类型\";root[\"ZD_SIGN\"]=0;root[\"STCD\"]=\"0\";\r\n      var typelist=new Array();\r\n      var type1=new Object();\r\n      type1[\"label\"]=\"标准断面\";type1[\"ME_TYPE\"]=1;type1[\"ZD_SIGN\"]=0;type1[\"STCD\"]=\"1\";typelist.push(type1);\r\n      var type2=new Object();\r\n      type2[\"label\"]=\"巴歇尔槽\";type2[\"ME_TYPE\"]=2;type2[\"ZD_SIGN\"]=0;type2[\"STCD\"]=\"2\";typelist.push(type2);\r\n      var type3=new Object();\r\n      type3[\"label\"]=\"水闸\";type3[\"ME_TYPE\"]=3;type3[\"ZD_SIGN\"]=0;type3[\"STCD\"]=\"3\";typelist.push(type3);\r\n      var type4=new Object();\r\n      type4[\"label\"]=\"管道\";type4[\"ME_TYPE\"]=4;type4[\"ZD_SIGN\"]=0;type4[\"STCD\"]=\"4\";typelist.push(type4);\r\n      root.children=typelist;\r\n      var keyarry=[\"0\",\"1\"];\r\n      var datalist=res.data;\r\n      for(var h=0;h<datalist.length;h++){\r\n        datalist[h].label=datalist[h].STNM;\r\n      }\r\n      typelist.map(val => {\r\n                val.children = getChildrenList(val.ME_TYPE, datalist);\r\n                return val;\r\n            });\r\n      function getChildrenList(me_type, data) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.ME_TYPE == me_type) {\r\n                        return true;\r\n                    }\r\n                })\r\n                return newList;\r\n            }\r\n      keyarry.push(typelist[0].children[0].STCD);\r\n      this.Treedata.push(root);\r\n      this.keys=keyarry;\r\n      this.STinfo=typelist[0].children[0];\r\n      this.axios.get('/ldresult/maxinfo',{params: {metype:this.STinfo.ME_TYPE,stcd:this.STinfo.STCD}}).then(res => {\r\n            var maxobj=res.data;\r\n            this.STinfo.MAX_Z=maxobj.MAX_Z;\r\n            this.STinfo.MAX_Q=maxobj.MAX_Q;\r\n            if(this.STinfo.MAX_Z==undefined || this.STinfo.MAX_Z==''){\r\n              this.STinfo.MAX_Z=0;\r\n            }\r\n            if(this.STinfo.MAX_Q==undefined || this.STinfo.MAX_Q==''){\r\n              this.STinfo.MAX_Q=0;\r\n            }\r\n            this.Reload();\r\n          });\r\n      });\r\n  },\r\n  methods: {\r\n    Menu_toggle() {\r\n      this.Menu.show_Controller = !this.Menu.show_Controller;\r\n      this.show1 = !this.show1;\r\n      if (this.show1 == true ) {\r\n        this.span1 = '19';\r\n        this.span2 = '5';\r\n        this.data2 = {};\r\n      }else{\r\n        this.span1 = '24';\r\n        this.span2 = '0';\r\n        this.data2 = {}\r\n      }\r\n      this.Reload();\r\n    },\r\n    type_tree(data){\r\n      if (data.ZD_SIGN == 1) {\r\n        this.STinfo = data;\r\n        if(data.ME_TYPE==1 || data.ME_TYPE==2){\r\n          this.axios.get('/ldresult/maxinfo',{params: {metype:data.ME_TYPE,stcd:data.STCD}}).then(res => {\r\n            var maxobj=res.data;\r\n            this.STinfo.MAX_Z=maxobj.MAX_Z;\r\n            this.STinfo.MAX_Q=maxobj.MAX_Q;\r\n            if(this.STinfo.MAX_Z==undefined || this.STinfo.MAX_Z==''){\r\n              this.STinfo.MAX_Z=0;\r\n            }\r\n            if(this.STinfo.MAX_Q==undefined || this.STinfo.MAX_Q==''){\r\n              this.STinfo.MAX_Q=0;\r\n            }\r\n            this.Reload();\r\n          });\r\n        }else{\r\n          this.STinfo.MAX_Z=0;\r\n          this.STinfo.MAX_Q=0;\r\n          this.Reload();\r\n        }\r\n        \r\n      }\r\n    },\r\n    drawchart() {\r\n      var achart = this.$echarts.init(this.$refs.achart);\r\n      console.log(achart);\r\n      achart.resize();\r\n      achart.setOption({\r\n        title: { text: \"流量曲线图\" },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n          type: 'cross',\r\n          animation: false,\r\n          },\r\n          formatter: function (params) {\r\n            var tip=\"\";\r\n            if(params !=null && params.length>0){\r\n              for(var i=0;i<params.length;i++){\r\n                tip+=params[i].seriesName+'<br/>'+params[i].marker+'水深：'+params[i].name+'&nbsp;&nbsp;流量：'+params[i].value+'<br/>';\r\n              }\r\n            }\r\n            return tip;\r\n          },\r\n        },\r\n        toolbox: {\r\n          show: true,\r\n          feature: {\r\n              saveAsImage: {}\r\n          }\r\n        },\r\n        legend: {\r\n          data: this.data2.legend\r\n        },\r\n        calculable: true,\r\n        xAxis: [\r\n          {\r\n            type: \"category\",      \r\n            name:'水深',\r\n            axisLine: {\r\n                onZero: false,\r\n                lineStyle: {\r\n                    color: \"#2f4554\"\r\n                }\r\n            },\r\n            data:this.data2.x1.list,\r\n            axisLabel:{\r\n              interval:parseInt(this.data2.x1.list.length/10),\r\n              showMinLabel: true,\r\n              showMaxLabel: true,\r\n              },\r\n          },\r\n          {\r\n            type: 'category',\r\n            name:'水深',\r\n            axisTick: {\r\n                alignWithLabel: true\r\n            },\r\n            axisLine: {\r\n                onZero: false,\r\n                lineStyle: {\r\n                    color: \"#c23531\"\r\n                }\r\n            },\r\n            data: this.data2.x2.list,\r\n            axisLabel:{\r\n              interval:parseInt(this.data2.x2.list.length/10),\r\n              showMinLabel: true,\r\n              showMaxLabel: true,\r\n              },\r\n        }\r\n        ],\r\n        grid: { // 控制图的大小，调整下面这些值就可以，\r\n          x: 70,\r\n          x2: 40,\r\n          y2: 100// y2可以控制 X轴跟Zoom控件之间的间隔，避免以为倾斜后造成 label重叠到zoom上\r\n        },\r\n        yAxis: [\r\n          {\r\n            name: \"流量\",\r\n            type: \"value\",\r\n            min:parseFloat(this.data2.y1.min),\r\n            max:parseFloat(this.data2.y1.max)\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: this.data2.legend[1],\r\n            type: \"line\",\r\n            data:this.data2.y1.list,\r\n            smooth:true,\r\n            xAxisIndex: 0,\r\n            itemStyle: {\r\n                        normal: {\r\n                            color: \"#2f4554\",//折线点的颜色\r\n                            lineStyle: {\r\n                                color: \"#2f4554\"//折线的颜色\r\n                            }\r\n                        }\r\n                    },\r\n          },\r\n          {\r\n            name: this.data2.legend[0],\r\n            type: \"line\",\r\n            data: this.data2.y2.list,\r\n            smooth:true,\r\n            xAxisIndex: 1,\r\n            itemStyle: {\r\n                        normal: {\r\n                            color: \"#c23531\",//折线点的颜色\r\n                            lineStyle: {\r\n                                color: \"#c23531\"//折线的颜色\r\n                            }\r\n                        }\r\n                    },\r\n          }\r\n        ]\r\n      });\r\n    },\r\n    Yearsearch(){\r\n      this.Reload();\r\n    },\r\n    Reload() {\r\n      let obj = {\r\n          stcd:this.STinfo.STCD,\r\n          year:this.form.year\r\n      };\r\n      let lastyear=parseInt(this.form.year)-1;\r\n      this.loading = true;\r\n      this.axios.get('/ldresult/eqrllist',{params: obj}).then(res => {\r\n          var newdatalist = res.data.curlist.map(val => {\r\n                var newobj=new Object();\r\n                newobj[\"Z\"]=parseFloat(val[\"Z\"]).toFixed(2);\r\n                newobj[\"Q\"]=parseFloat(val[\"Q\"]).toFixed(3);\r\n                newobj[\"ID\"]=val[\"ID\"];\r\n                return newobj;\r\n            });\r\n          this.data1 = newdatalist;\r\n          this.loading = false;\r\n          setTimeout(()=> {\r\n                            this.$refs.refTable.doLayout();\r\n          },100);\r\n          var curlist=res.data.curlist;\r\n          var lastlist=res.data.lastlist;\r\n          var echartData = {\r\n                        chartName: \"曲线图\",\r\n                        legend:[lastyear+\"年\",this.form.year+\"年\"],\r\n                        x1: new Object(),\r\n                        x2: new Object(),\r\n                        y1: new Object(),\r\n                        y2: new Object()\r\n                    }\r\n          var curx=FilterMethods.methods.newArrayByObjArray(curlist, \"Z\", val => { // 过滤\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n          var lastx=FilterMethods.methods.newArrayByObjArray(lastlist, \"Z\", val => { // 过滤\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n            echartData.x2.list= lastx;       \r\n            echartData.y2.list=this.getY(lastlist);\r\n            echartData.x1.list=curx;\r\n            echartData.y1.list=this.getY(curlist);\r\n            echartData.y1.min=0;\r\n          var maxq=this.getMaxQ(lastlist);\r\n          if(this.STinfo.MAX_Q<maxq){\r\n            this.STinfo.MAX_Q=maxq;\r\n          }\r\n          maxq=this.getMaxQ(curlist);\r\n          if(this.STinfo.MAX_Q<maxq){\r\n            this.STinfo.MAX_Q=maxq;\r\n          }\r\n          echartData.y1.max=(parseFloat(this.STinfo.MAX_Q)+0.1).toFixed(2);\r\n\r\n          this.data2=echartData;\r\n           this.drawchart();\r\n        });\r\n    },\r\n    indexMethod(index){\r\n      return index + 1;\r\n    },\r\n    //新增\r\n    addresult(){\r\n      var formobj=new Object();\r\n      formobj.stcd=this.STinfo.STCD;\r\n      formobj.stnm=this.STinfo.STNM;\r\n      formobj.year=this.form.year;\r\n      formobj.sign=\"add\";\r\n      formobj.itype=\"resultform\";\r\n      formobj.title=\"新增率定结果信息\";\r\n      this.$emit('showdailog', formobj);\r\n    },\r\n    //修改\r\n    updateClick(row){\r\n      var formobj=new Object();\r\n      formobj.stcd=this.STinfo.STCD;\r\n      formobj.stnm=this.STinfo.STNM;\r\n      formobj.year=this.form.year;\r\n      formobj.z=row.Z;\r\n      formobj.q=row.Q;\r\n      formobj.id=row.ID;\r\n      formobj.sign=\"update\";\r\n      formobj.itype=\"resultform\";\r\n      formobj.title=\"修改率定结果信息\";\r\n      this.$emit('showdailog', formobj);\r\n    },\r\n    //删除\r\n    deleteClick(row){\r\n      this.$confirm('是否删除该记录?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.axios.get('/ldresult/deleteeqrl',{params: {id:row.ID}}).then(res => {\r\n          if(res.data==\"ok\"){\r\n           this.$message({message:'删除率定结果成功！',type:'success'});\r\n           this.Reload();\r\n         }      \r\n        });\r\n        });\r\n    },\r\n    //获取y轴信息\r\n    getY(array){\r\n      var newArray = array.map(val => {\r\n                var newVal = val[\"Q\"];\r\n                return newVal;\r\n            });\r\n            return newArray;\r\n    },\r\n    //获取数据中的最大值\r\n    getMaxQ(array){\r\n        var maxq=0;\r\n        array.map(val => {\r\n                if(val[\"Q\"]>maxq){\r\n                  maxq=val[\"Q\"];\r\n                }\r\n            });\r\n        return maxq;\r\n    },\r\n    exportExcel(){\r\n      var params=\"year=\"+this.form.year+\"&stcd=\"+this.STinfo.STCD+\"&stnm=\"+this.STinfo.STNM+\"&metypename=\"+this.STinfo.TYPE_NM+\"&canalname=\"+this.STinfo.CANAL_NAME+\"&maxz=\"+this.STinfo.MAX_Z;\r\n       window.location.href='/excel/exportldresult?'+params;\r\n    },\r\n    excelMuban(){\r\n      window.location.href='audio/率定结果数据录入模板.xls';\r\n    },\r\n    exportSite(){\r\n      window.location.href='/excel/exportlvsite';\r\n    },\r\n    upLoadSuccess(response, file, fileList) {\r\n                var objres=response;\r\n                if(objres.sign==1){\r\n                  this.$message({ type: 'success', message: '上传文件成功！' });\r\n                }else{\r\n                   var info=objres.info;\r\n                   this.$message({ type: 'error',message: info });\r\n                }\r\n                this.$refs.upload.clearFiles();\r\n            },\r\n    //站点查询\r\n    search(){\r\n          this.Treedata=new Array();\r\n            var tt=this.STinfo;\r\n            this.axios.get('/ldresult/typesite',{params:{stnm:this.searchmsg}}).then(res => {\r\n      var root=new Object();\r\n      root[\"label\"]=\"类型\";root[\"ZD_SIGN\"]=0;root[\"STCD\"]=\"0\";\r\n      var typelist=new Array();\r\n      var type1=new Object();\r\n      type1[\"label\"]=\"标准断面\";type1[\"ME_TYPE\"]=1;type1[\"ZD_SIGN\"]=0;type1[\"STCD\"]=\"1\";typelist.push(type1);\r\n      var type2=new Object();\r\n      type2[\"label\"]=\"巴歇尔槽\";type2[\"ME_TYPE\"]=2;type2[\"ZD_SIGN\"]=0;type2[\"STCD\"]=\"2\";typelist.push(type2);\r\n      var type3=new Object();\r\n      type3[\"label\"]=\"水闸\";type3[\"ME_TYPE\"]=3;type3[\"ZD_SIGN\"]=0;type3[\"STCD\"]=\"3\";typelist.push(type3);\r\n      var type4=new Object();\r\n      type4[\"label\"]=\"管道\";type4[\"ME_TYPE\"]=4;type4[\"ZD_SIGN\"]=0;type4[\"STCD\"]=\"4\";typelist.push(type4);\r\n      var keyarry=[\"0\"];\r\n      var datalist=res.data;\r\n      datalist.map(val=>{\r\n        val.label=val.STNM;\r\n      });\r\n      typelist.map(val => {\r\n                val.children = getChildrenList(val.ME_TYPE, datalist);\r\n                return val;\r\n            });\r\n      function getChildrenList(me_type, data) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.ME_TYPE == me_type) {\r\n                        return true;\r\n                    }\r\n                })\r\n                return newList;\r\n            }\r\n      for(var i=typelist.length-1;i>=0;i--){\r\n          var typeobj=typelist[i];\r\n          if(typeobj.children==null || typeobj.children.length==0){\r\n              typelist.splice(i,1);\r\n          }\r\n      }\r\n      keyarry.push(typelist[0].ME_TYPE);\r\n      keyarry.push(typelist[0].children[0].STCD);\r\n      root.children=typelist;\r\n      this.Treedata.push(root);\r\n      this.keys=keyarry;\r\n      this.STinfo=typelist[0].children[0];\r\n      this.axios.get('/ldresult/maxinfo',{params: {metype:this.STinfo.ME_TYPE,stcd:this.STinfo.STCD}}).then(res => {\r\n            var maxobj=res.data;\r\n            this.STinfo.MAX_Z=maxobj.MAX_Z;\r\n            this.STinfo.MAX_Q=maxobj.MAX_Q;\r\n            if(this.STinfo.MAX_Z==undefined || this.STinfo.MAX_Z==''){\r\n              this.STinfo.MAX_Z=0;\r\n            }\r\n            if(this.STinfo.MAX_Q==undefined || this.STinfo.MAX_Q==''){\r\n              this.STinfo.MAX_Q=0;\r\n            }\r\n            this.Reload();\r\n          });\r\n      });\r\n     },\r\n  },\r\n  created() {\r\n  },\r\n  watch:{\r\n    'this.$store.state.anniu': function(){\r\n      console.log(this.$store.state.anniu);\r\n    }\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n<style type=\"text/css\" lang=\"less\">\r\n.switch{\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  height: 55px;\r\n  display: flex;\r\n  align-items: center;\r\n  background: white;\r\n  border-top-left-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  border: #7eb7f0 2px solid;\r\n  border-right: 0;\r\n}\r\n</style>\r\n"]}]}