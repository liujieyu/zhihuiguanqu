{"remainingRequest":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\visualplace\\zhihuiguanqu\\src\\components\\BaseBox\\BaseBox-shuikushuiqing.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\src\\components\\BaseBox\\BaseBox-shuikushuiqing.vue","mtime":1647091568662},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\babel.config.js","mtime":1577669403468},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _parseFloat from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _JSON$stringify from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TipsQUDAO from \"@/components/BaseBox/Tips/Tips-qudaoshuiqing.vue\";\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\";\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\nimport { truncateSync } from \"fs\";\nimport { setTimeout } from \"timers\";\nimport test_data from \"./test_data\";\nexport default {\n  props: {\n    featrue: {\n      type: Object\n    },\n    search_FeatrueLayer: {\n      type: Function\n    }\n  },\n  components: {\n    TipsQUDAO: TipsQUDAO\n  },\n  data: function data() {\n    return {\n      // 折叠面板对象\n      collapse: {\n        activeName: \"\",\n        list: []\n      },\n      // 地图对象\n      map: null,\n      // 该图层对象\n      JsonFlayer: null,\n      // 文字标注图层\n      TextGraphicsLayers: [],\n      // 提示 展示\n      tip: {\n        info_tip: null,\n        show_tip: false\n      },\n      // 表单数据\n      form: {\n        YCJXZ: \"0.5\",\n        search_str: \"\",\n        adressList: [],\n        qudaoList: [],\n        dengjiList: [],\n        guishuList: [{\n          value: \"danwei1\",\n          label: \"单位一\"\n        }, {\n          value: \"danwei2\",\n          label: \"单位二\"\n        }],\n        social: [\"site\"],\n        checkBoxList: [{\n          value: \"site\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          title: \"站点\"\n        }, {\n          value: \"STNM\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          title: \"站名\"\n        }, {\n          value: \"RZ\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          title: \"水位\"\n        }],\n        model_adress: null,\n        model_qudao: null,\n        model_guishu: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"],\n        model_dengji: [\"1\", \"2\", \"3\", \"4\", \"5\"]\n      },\n      // 表格数据\n      table: {\n        // 表头设置\n        columns: [{\n          title: \" \",\n          key: \"index\",\n          width: 45,\n          align: \"center\",\n          fixed: \"left\"\n        }, {\n          title: \"站名\",\n          key: \"STNM\",\n          width: 120,\n          align: \"center\",\n          fixed: \"left\",\n          sortable: \"custom\"\n        }, {\n          title: \"时间\",\n          key: \"tm\",\n          width: 120,\n          align: \"center\",\n          sortable: \"custom\"\n        }],\n        // 表体内容\n        Rows: [],\n        // 过滤后的表体内容\n        Rows_filter: [],\n        // 表格是否加载中\n        loading: false,\n        // 当前页\n        currentPage: 1,\n        // 每页显示数量\n        pageSizes: 20,\n        // 表体高度\n        height: 300\n      }\n    };\n  },\n  // 引入过滤方法到此组件\n  mixins: [FilterMethods, GetDataMethods],\n  methods: {\n    // 表格每一行点击事件\n    cellClick: function cellClick(item) {\n      var evt = new Object();\n      evt.graphic = new Object();\n      evt.graphic.attributes = item;\n      evt.graphic.attributes.rowinfo = JSON.parse(_JSON$stringify(item));\n      evt.graphic.attributes.rowinfo.tableType = {\n        sksq: \"historyTable\"\n      };\n      var v = new Object();\n      v.itype = \"shuikushuiqing\"; // 设置中心缩放\n\n      this.setMapCenterandZoom(item.LGTD, item.LTTD); // 取消所有站点的闪烁\n\n      this.$App.GraphicsLayer_Selection_clear(); // 对应站点闪烁\n\n      this.$App.add_Graphic_To_GraphicsLayer_Selection(item); // 展示抽屉详情框\n\n      this.$App.showDrawer(evt, v);\n    },\n    // 提示展示\n    showTips: function showTips(item) {\n      var _this = this;\n\n      // 隐藏之前提示框\n      this.hideTips();\n      console.log('悬浮框');\n      console.log(item);\n      var mon = item.rowinfo.tm.substr(6, 1);\n      console.log(mon);\n      var div = \"<div>\\n        <div class=\\\"tip_row\\\">\\n                <span class=\\\"tip_col_5\\\">\\u65F6\\u95F4\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\">\".concat(this.$FilterData.dateFilter(item.rowinfo.tm, null, null, 0), \"</span>\\n                <span class=\\\"tip_col_5\\\">\\u5E93\\u5BB9\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\">\\n                \").concat(item.rowinfo.w, \"\\u4E07m\\xB3\\n                </span>\\n                <span class=\\\"tip_col_5\\\">\\u6C34\\u4F4D\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\">\").concat(this.$FilterData.Float_Filter(item.rowinfo.RZ, 2) == \"\" ? \"\" : this.$FilterData.Float_Filter(item.rowinfo.RZ, 2) + \" m\", \"</span>\\n              </div>\\n              <div class=\\\"divider\\\"></div>\\n              <div class=\\\"tip_row\\\">                \\n                <span class=\\\"tip_col_5\\\" >\\u6C5B\\u9650\\u6C34\\u4F4D\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\" id=\\\"\").concat(item.STCD, \"_XXSW\\\">\\n\\n                </span>\\n                <span class=\\\"tip_col_5\\\" >\\u8DDD\\u6C5B\\u9650\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\" id=\\\"\").concat(item.STCD, \"_JXX\\\"></span>\\n                <span class=\\\"tip_col_5\\\">\\u6C34\\u52BF\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\" id=\\\"\").concat(item.STCD, \"_shuishi\\\">\").concat(this.$FilterData.WPTN_Filter(item.rowinfo.RWPTN).symbol, \"</span>\\n              </div>\\n              <div class=\\\"divider\\\"></div>\\n        <div id=\\\"\").concat(item.STCD, \"\\\" style=\\\"width: 500px;height:320px;margin:auto\\\"></div>\\n      </div>\"); // var content = `<div id=\"myChart\" :style=\"{width: '340px', height: '250px', margin: 'auto'}\"></div>`; // 获取内容\n\n      this.map.infoWindow.resize(570, 650); // 提示框大小\n\n      this.map.infoWindow.setTitle(item.STNM); // 提示题目\n\n      this.map.infoWindow.setContent(div); // 提示内容\n      //获取坐标\n\n      var x = Number(item.LGTD);\n      var y = Number(item.LTTD); //如果basemap使用ArcGIS的就需要\n      //转换坐标系\n\n      x = x / 180.0 * 20037508.34;\n      if (y > 85.05112) y = 85.05112;\n      if (y < -85.05112) y = -85.05112;\n      y = Math.PI / 180.0 * y;\n      var tmp = Math.PI / 4.0 + y / 2.0;\n      y = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI; //位置点对象\n\n      var zoompoint = {\n        //spatialReference: {wkid: 4326},\n        spatialReference: this.map.spatialReference,\n        x: x,\n        y: y\n      };\n      this.map.infoWindow.show(zoompoint); // 提示位置\n      // 如果事件类型不是鼠标经过，则\n\n      if (item.eventType != \"mouse-over\") {\n        // 设置中心和缩放 (接受经纬度，和缩放比例)\n        this.setMapCenterandZoom(Number(item.LGTD) + 0.1, item.LTTD);\n      }\n\n      var body = {\n        STCD: item.STCD,\n        // TM: this.$FilterData.elDatePicker_Filter(\n        //   this.$App.zeroPointToNowOfTheDay()\n        // ),\n        _page_size: 999999\n      }; // 时间参数\n\n      var DTT = this.$FilterData.elDatePicker_Filter(this.$App.zeroPointToNowOfTheDay()).split(\",\");\n      body.Time_min = DTT[1];\n      body.Time_max = DTT[2];\n      this.$GetData.Survey_History_SKSQ(\"historyTable\", body, // body,\n      {\n        default: true\n      }, function (data) {\n        _this.setWPTN_HTML(\"\".concat(item.STCD, \"_shuishi\"), item.rowinfo.RWPTN);\n\n        _this.createChart(item.STCD, data.data);\n      });\n      this.$GetData.Survey_History_SKSQ(\"alarmTable\", {\n        STCD: item.STCD\n      }, // body,\n      true, function (data) {\n        console.log(data); // let mon = data.data[0].TM.substr(6,1)\n\n        var sw = item.rowinfo.RZ; // ${mon <= 6? this.$FilterData.Float_Filter(item.rowinfo.FWL, 3) : this.$FilterData.Float_Filter(item.rowinfo.FWL79, 3)}\n\n        var div_XXSW = document.getElementById(\"\".concat(item.STCD, \"_XXSW\"));\n        var div_JXX = document.getElementById(\"\".concat(item.STCD, \"_JXX\"));\n        var xxsw = \"\".concat(mon <= 6 ? data.data[0].FWL : data.data[0].FWL79);\n        div_XXSW.innerHTML = \"\".concat(_this.$FilterData.Float_Filter(xxsw, 2), \" m\");\n\n        var jxx = _parseFloat(xxsw) - _parseFloat(sw);\n\n        div_JXX.innerHTML = \"\".concat(_this.$FilterData.Float_Filter(-jxx, 2), \" m\");\n        console.log(xxsw, sw);\n        console.log(jxx, div_JXX);\n      }); // this.$GetData.Survey_History_SKSQ(\n      //   \"alarmTable\",\n      //   {\n      //     STCD: item.STCD\n      //   },\n      //   {\n      //     default: true\n      //   },\n      //   data => {\n      //     var data = data.data[0];\n      //     if (data) {\n      //       var JYZ_div = document.getElementById(`${item.STCD}_YJZ`),\n      //         JYQ_div = document.getElementById(`${item.STCD}_YJQ`);\n      //\n      //       JYZ_div.innerHTML = `<span>${this.$FilterData.Float_Filter(\n      //         data.Z\n      //       )}m</span>`;\n      //       JYQ_div.innerHTML = `<span>${this.$FilterData.Float_Filter(\n      //         data.Q,\n      //         3\n      //       )}m³/s</span>`;\n      //     }\n      //   }\n      // );\n      // 延时200毫秒\n      // setTimeout(() => {\n      // }, 200);\n      // 延时200毫秒\n      // setTimeout(() => {\n      // }, 200);\n    },\n    setWPTN_HTML: function setWPTN_HTML(id, WPTN) {\n      var div = document.getElementById(id);\n      var html;\n\n      switch (WPTN) {\n        case \"4\":\n          html = \"<span style=\\\"color:blue\\\">\\u2193</span>\";\n          break;\n\n        case \"5\":\n          html = \"<span style=\\\"color:red\\\">\\u2191</span>\";\n          break;\n\n        case \"6\":\n          html = \"<span style=\\\"color:black\\\">\\u4E00</span>\";\n          break;\n\n        default:\n          html = \"<span style=\\\"color:black\\\">\\u4E00</span>\";\n          break;\n      }\n\n      if (div) {\n        div.innerHTML = html;\n      }\n    },\n    // 设置中心和缩放 (接受经纬度，和缩放比例)\n    setMapCenterandZoom: function setMapCenterandZoom(LGTD, LTTD, Zoom) {//koen 20190929\n      //暂时不允许点击，防止缩到全球地图的bug\n      //this.map.centerAndZoom([Number(LGTD), Number(LTTD)], Zoom || 1);\n    },\n    // 隐藏提示\n    hideTips: function hideTips() {\n      this.map.infoWindow.hide(); // this.tip.show_tip = false; // 关闭提示框组件\n    },\n    // 制图\n    createChart: function createChart(id, data) {\n      if (data.length > 0) {\n        // data = data.slice(0, 3);\n        console.log(data.TM);\n        var echartData = this.$App.transform_SKSQ_data_into_ehart_data(data, \"historyTable\", true); // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n\n        var x_List = echartData.x.list.map(function (val, index, array) {\n          // 时间过滤\n          var time = val.split(\" \");\n          return time[1];\n        });\n        myChart = this.$echarts.init(document.getElementById(id));\n        myChart.setOption({\n          title: {\n            text: \"今日水情图\"\n          },\n          tooltip: {\n            trigger: \"axis\"\n          },\n          legend: {\n            data: [echartData.y1.name, echartData.y2.name],\n            y: \"bottom\"\n          },\n          // calculable: true,\n          animation: false,\n          xAxis: [{\n            type: \"category\",\n            boundaryGap: false,\n            data: x_List,\n            axisTick: {\n              interval: function interval(index, val) {\n                var listLength = echartData.x.list.length;\n\n                if (listLength >= 4) {\n                  var tick = Math.round(listLength / 4); // console.log((index + 1) % tick === 0);\n                  // console.log('1575listLength',listLength);\n                  // console.log('1576tick',tick);\n\n                  if ((index + 1) % tick === 0) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                } else {\n                  return true;\n                }\n              },\n              length: 10\n            },\n            axisLabel: {\n              interval: function interval(index, val) {\n                var listLength = echartData.x.list.length;\n\n                if (listLength >= 4) {\n                  var tick = Math.round(listLength / 4); // console.log('1575listLength',listLength);\n                  // console.log('1576tick',tick);\n\n                  var a = (index + 1) % tick;\n\n                  if ((index + 1) % tick === 0) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                } else {\n                  return true;\n                }\n              },\n              rotate: 10,\n              margin: 16\n            }\n          }],\n          yAxis: [{\n            name: \"\".concat(echartData.y1.name, \" m\"),\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value} \"\n            },\n            scale: true // max: echartData.y1.max,\n            // min: echartData.y1.min\n\n          }, {\n            name: \"\".concat(echartData.y2.name, \"m\"),\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value} \"\n            },\n            scale: true // max: echartData.y2.max,\n            // min: echartData.y2.min\n\n          }],\n          series: [{\n            name: echartData.y1.name,\n            type: \"line\",\n            data: echartData.y1.list\n          }, {\n            name: echartData.y2.name,\n            type: \"line\",\n            data: echartData.y2.list,\n            yAxisIndex: 1\n          }]\n        });\n      } else {\n        var myChart = document.getElementById(id);\n        myChart.style.display = \"flex\";\n        myChart.style.alignItems = \"center\";\n        myChart.style.justifyContent = \"center\";\n        myChart.innerHTML = \"暂无今天数据\";\n      }\n    },\n    // 表格加载\n    tableLoading: function tableLoading() {\n      this.table.loading = true;\n    },\n    // 表格加载取消\n    cancelTableLoading: function cancelTableLoading() {\n      this.table.loading = false;\n    },\n    // 加载表格数据\n    loadTableData: function loadTableData(data) {\n      // 加载站点数据\n      this.table.Rows = data;\n    },\n    getDataFromEnd: function getDataFromEnd(url, callback) {\n      // 获取表格数据 `/guanqu/gis/details?ID=${this.info.ID}`\n      this.axios.get(url).then(function (res) {\n        if (typeof callback == \"function\") {\n          callback(res);\n        }\n      });\n    },\n    // 查询\n    search: function search() {\n      var _this2 = this;\n\n      // console.log(value);\n      var body = new Object(); // 如果输入框有内容，添加站名过滤字段\n\n      if (this.form.search_str) {\n        body[\"STNM\"] = \"\".concat(this.form.search_str);\n      } // 如果地址选择框有内容，添加行政区划过滤字段\n\n\n      if (this.form.model_adress && this.form.model_adress.length != 0) {\n        body[\"ADDVCD\"] = \"\".concat(this.$App.ADDVCD_Array_Filter(this.form.model_adress));\n      } // 如果渠道选择框有内容，添加渠道过滤字段\n\n\n      if (this.form.model_qudao && this.form.model_qudao.length != 0) {\n        body[\"Canal_Code\"] = \"\".concat(this.$App.Canal_Code_Array_Filter(this.form.model_qudao));\n      } // 如果归属单位选择框有内容，添加归属单位过滤字段\n\n\n      if (this.form.model_guishu && this.form.model_guishu.length != 0) {\n        body[\"STGR\"] = this.form.model_guishu.join(\",\");\n      } // 如果水库等级选择框有内容，添加水库等级过滤字段\n\n\n      if (this.form.model_dengji && this.form.model_dengji.length != 0) {\n        body[\"LEVEL\"] = this.form.model_dengji.join(\",\");\n      } //异常界限值\n\n\n      if (this.form.YCJXZ != \"\") {\n        body[\"max_yichang\"] = this.form.YCJXZ;\n      }\n\n      this.tableLoading(); // 表格加载中\n\n      this.search_FeatrueLayer(\"shuikushuiqing\", body, this.featrue, function (newFeatureLayerOBJ) {\n        _this2.table.currentPage = 1;\n\n        _this2.baseBox_init();\n\n        _this2.cancelTableLoading(); //取消表格加载\n\n\n        _this2.hideTips();\n      }); // setTimeout(() => {\n      //   this.cancelTableLoading(); //取消表格加载\n      // }, 800);\n    },\n    // 获取 子组件传过来 的绘图方法\n    // chart(item) {\n    //   this.getChart = item.chart;\n    // },\n    // 给图层对象添加事件\n    addEventToJsonFlayer: function addEventToJsonFlayer(JsonFlayer) {\n      var _this3 = this;\n\n      //当鼠标悬停在元素上\n      JsonFlayer.on(\"mouse-over\", function (evt) {\n        setTimeout(function () {\n          var attributes = evt.graphic.attributes;\n          attributes.eventType = \"mouse-over\";\n\n          _this3.showTips(attributes); // 展示悬浮框\n\n        }, 100); // 给地图对象添加方法\n        // this.addEventToMap();\n      }); // 当鼠标离开元素\n\n      JsonFlayer.on(\"mouse-out\", function (evt) {\n        setTimeout(function () {\n          _this3.hideTips(); // 隐藏悬浮框\n\n        }, 100);\n      });\n    },\n    // 给地图对象添加方法\n    addEventToMap: function addEventToMap() {\n      var _this4 = this;\n\n      this.map.on(\"click\", function () {\n        // 隐藏提示\n        _this4.hideTips();\n      });\n    },\n    // 处理页码切换\n    handleCurrentChange: function handleCurrentChange(index) {\n      this.table.currentPage = index;\n    },\n    // 处理每页显示条数切换\n    handleSizeChange: function handleSizeChange(pageSizes) {\n      this.table.pageSizes = pageSizes;\n      this.table.currentPage = 1;\n    },\n    // 分页过滤\n    pageFilter: function pageFilter(currentPage, pageSizes) {\n      var _currentPage = currentPage || this.table.currentPage;\n\n      var _pageSizes = pageSizes || this.table.pageSizes;\n\n      if (this.table.Rows_filter.length != 0) {\n        // 截取数组\n        var newList = this.table.Rows_filter.slice((_currentPage - 1) * _pageSizes, _currentPage * _pageSizes);\n        return newList;\n      } else {\n        return [];\n      }\n    },\n    // 过滤table数据\n    filterTableData: function filterTableData() {\n      var _this5 = this;\n\n      this.table.Rows_filter = this.table.Rows.map(function (val, index) {\n        var val_clone = JSON.parse(_JSON$stringify(val)); // 序号\n\n        val_clone.index = index + 1; // 时间过滤\n\n        val_clone.tm = _this5.$FilterData.dateFilter(val_clone.tm); // 水位过滤\n\n        val_clone.RZ = _this5.$FilterData.Float_Filter(val_clone.RZ);\n        val_clone.jxx = _this5.Z_Filter(val_clone.jxx); // 水势过滤\n\n        val_clone.RWPTN = _this5.WPTN_Filter(val_clone.RWPTN);\n        return val_clone;\n      });\n    },\n    // 选取一部分从父组件传来的数据作为表格的数据\n    getTableDataFormParent: function getTableDataFormParent() {\n      var tableData = this.featrue.Rows.map(function (val) {\n        return val.rowinfo;\n      });\n      return tableData;\n    },\n    // 获取图层对象,从父组件中\n    getJsonFlayerFormParent: function getJsonFlayerFormParent() {\n      this.JsonFlayer = this.featrue.LayerObject;\n    },\n    // 获取地图对象,从父组件中\n    getMapFormParent: function getMapFormParent() {\n      this.map = this.featrue.map;\n    },\n    // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\n    addTextGraphicsLayerControllerToFeatrue: function addTextGraphicsLayerControllerToFeatrue() {\n      this.featrue.TextGraphicsLayerController = new Object();\n      this.featrue.TextGraphicsLayerController.removeAllTextGraphicsLayer = this.removeAllTextGraphicsLayer;\n      this.featrue.TextGraphicsLayerController.addTextGraphicsLayerByCheckGroup = this.addTextGraphicsLayerByCheckGroup;\n    },\n    // 多选框标记勾选触发事件\n    checkboxGroup_onChange: function checkboxGroup_onChange(onCheck_Array) {\n      this.removeAllTextGraphicsLayer(); // 清除所有文本标注图层\n\n      this.addTextGraphicsLayerByCheckGroup(); // 根据多选框添加文字标注图层\n    },\n    // 添加文字标注图层\n    addTextGraphicsLayer: function addTextGraphicsLayer(options) {\n      var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个标注文本图层\n\n      textGraphicsLayer.textType = options.textType;\n      this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\n\n      var Rows = this.featrue.Rows; //创建textsymbol文本标注\n\n      if (Rows.length > 0) {\n        //动态读取json数据源结果集\n        for (var i = 0; i < Rows.length; i++) {\n          var Row = Rows[i];\n          var point = new esri.geometry.Point(Row.geometry.x, Row.geometry.y, this.featrue.map.spatialReference); //定义文本symbol\n\n          var textsymbol = new esri.symbol.TextSymbol(Row.rowinfo[options.textType]) //动态设置文本值\n          .setColor(new dojo.Color(options.color || [55, 55, 55])) //setColor设置文本颜色\n          .setFont(new esri.symbol.Font(options.fontSize || \"10pt\") //setFont设置文本大小\n          .setWeight(esri.symbol.Font.WEIGHT_BOLD)) //setWeight设置文本粗体\n          .setOffset(options.offset_x || 0, options.offset_y || -25); //设置偏移方向\n\n          var graphic = new esri.Graphic(point, textsymbol);\n          textGraphicsLayer.add(graphic);\n        }\n      }\n\n      this.TextGraphicsLayers.push(textGraphicsLayer);\n    },\n    // 根据多选框添加文字标注图层\n    addTextGraphicsLayerByCheckGroup: function addTextGraphicsLayerByCheckGroup() {\n      var _this6 = this;\n\n      var textTypeList;\n      var indexOfSocial = this.form.social.indexOf(\"site\"); // 如果多选框里存在 site站点类型\n\n      if (indexOfSocial !== -1) {\n        this.featrue.LayerObject.show();\n        this.featrue.LayerObject_yujing.show();\n        textTypeList = this.form.social.filter(function (val) {\n          if (val != \"site\") {\n            return true;\n          }\n        });\n      } else {\n        this.featrue.LayerObject.hide();\n        this.featrue.LayerObject_yujing.hide();\n        textTypeList = this.form.social;\n      }\n\n      textTypeList.forEach(function (textType, index) {\n        var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个图形图层\n\n        textGraphicsLayer.textType = textType;\n\n        _this6.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\n\n\n        var Rows = _this6.featrue.Rows; //创建textsymbol文本标注\n\n        if (Rows.length > 0) {\n          //动态读取json数据源结果集\n          for (var i = 0; i < Rows.length; i++) {\n            var Row = Rows[i];\n            var point = new esri.geometry.Point(Row.geometry.x, Row.geometry.y, new esri.SpatialReference({\n              wkid: 4326\n            }));\n            var value = Row.rowinfo[textType]; // 过滤\n\n            switch (textType) {\n              case \"VOL\":\n                var value = \"\".concat(_this6.Z_Filter(Row.rowinfo[textType]));\n\n                if (value == \"\") {\n                  value = \"\";\n                } else {\n                  value += \"V\";\n                }\n\n                break;\n\n              case \"RZ\":\n                var value = \"\".concat(_this6.Z_Filter(Row.rowinfo[textType]));\n\n                if (value == \"\") {\n                  value = \"\";\n                } else {\n                  value += \"m\";\n                }\n\n                break;\n            } //定义文本symbol\n\n\n            var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\n            .setColor(new dojo.Color(value == \"不正常\" ? [255, 0, 0] : [55, 55, 55])) //setColor设置文本颜色\n            .setFont(new esri.symbol.Font(\"10pt\") //setFont设置文本大小\n            .setWeight(esri.symbol.Font.WEIGHT_BOLD)) //setWeight设置文本粗体\n            .setOffset(0, -(25 + index * 15)); //设置偏移方向\n\n            var graphic = new esri.Graphic(point, textsymbol);\n            textGraphicsLayer.add(graphic);\n          }\n        }\n\n        _this6.TextGraphicsLayers.push(textGraphicsLayer);\n      });\n    },\n    // 移除文字标注图层\n    removeTextGraphicsLayer: function removeTextGraphicsLayer(textType) {\n      // 找到对应的文字标注图层\n      for (var i = 0; i < this.TextGraphicsLayers.length; i++) {\n        var val = this.TextGraphicsLayers[i];\n\n        if (val.textType == textType) {\n          this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\n          // val.hide();\n\n          this.TextGraphicsLayers.splice(i, 1); // 从文字标注图层数组里去除对应的文字图层对象\n        }\n      }\n    },\n    // 移除所有文字标注图层\n    removeAllTextGraphicsLayer: function removeAllTextGraphicsLayer() {\n      for (var i = 0; i < this.TextGraphicsLayers.length; i++) {\n        var val = this.TextGraphicsLayers[i];\n        this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\n      }\n\n      this.TextGraphicsLayers = [];\n    },\n    // 初始化baseBox\n    baseBox_init: function baseBox_init() {\n      var _this7 = this;\n\n      // 获取地图对象,从父组件中\n      this.getMapFormParent(); // 获取图层对象,从父组件中\n\n      this.getJsonFlayerFormParent(); // 选取一部分从父组件传来的数据,将其加载为表格数据\n\n      this.loadTableData( // (function() {\n      //   var data = test_data.map(val => {\n      //     return val.rowinfo;\n      //   });\n      //   return data;\n      // })()\n      this.getTableDataFormParent()); // 过滤table数据\n\n      this.filterTableData(); // 给图层对象添加方法\n\n      this.addEventToJsonFlayer(this.JsonFlayer); // 获取行政区划数据,然后设置地址选择框选项\n\n      this.getTableData_WRP_AD_B(function (data) {\n        _this7.form.adressList = data; // data.map(val => {\n        //   var newVal = new Object();\n        //   newVal.value = val.AD_CD;\n        //   newVal.label = val.AD_NM;\n        //   return newVal;\n        // })\n      }); // 获取输排水渠道数据,然后设置渠道选择框选项\n\n      this.getTableData_WRP_IrrBTCanalSystem(function (data) {\n        _this7.form.qudaoList = data; // data.map(val => {\n        //   var newVal = new Object();\n        //   newVal.value = val.Canal_Code;\n        //   newVal.label = val.Canal_Name;\n        //   return newVal;\n        // });\n      }); // 获取归属单位数据,然后设置归属单位选择框选项\n\n      this.getTableData_WPR_FieldInfo({\n        FieldID: \"STGR\"\n      }, function (data) {\n        console.log(data);\n        _this7.form.guishuList = data;\n      }); // 获取水库等级数据,然后设置水库等级选择框选项\n\n      this.getTableData_WPR_FieldInfo_LEVEL({}, function (data) {\n        _this7.form.dengjiList = data;\n      }); // 多选框标记勾选触发事件\n      // 1.清除所有文本标注图层\n      // 2.根据多选框添加文字标注图层\n\n      this.checkboxGroup_onChange(); // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\n\n      this.addTextGraphicsLayerControllerToFeatrue();\n    },\n    // 排序\n    sort_change: function sort_change(item) {\n      var order = item.order,\n          key = item.prop;\n      this.filterTableData();\n      var newList;\n\n      if (order) {\n        switch (order) {\n          case \"descending\":\n            if (key != \"TM\") {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                return Number(b[key]) - Number(a[key]);\n              });\n            } else {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                var aTime = new Date(\"20\".concat(a.TM)).getTime(),\n                    bTime = new Date(\"20\".concat(b.TM)).getTime();\n                aTime = isNaN(aTime) ? 0 : aTime;\n                bTime = isNaN(bTime) ? 0 : bTime;\n                return bTime - aTime;\n              });\n            }\n\n            break;\n\n          case \"ascending\":\n            if (key != \"TM\") {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                return Number(a[key]) - Number(b[key]);\n              });\n            } else {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                var aTime = new Date(\"20\".concat(a.TM)).getTime(),\n                    bTime = new Date(\"20\".concat(b.TM)).getTime();\n                aTime = isNaN(aTime) ? 0 : aTime;\n                bTime = isNaN(bTime) ? 0 : bTime;\n                return aTime - bTime;\n              });\n            }\n\n        }\n\n        this.table.Rows_filter = newList;\n      }\n\n      this.$TableMethods.refreshCurrentChange(this.table, 1);\n    }\n  },\n  created: function created() {\n    var _this8 = this;\n\n    // 初始化baseBox\n    this.baseBox_init();\n    this.search();\n    this.baseBox_Interval = setInterval(function () {\n      _this8.search();\n    }, 1000 * 60 * 5);\n  },\n  destroyed: function destroyed() {\n    clearInterval(this.baseBox_Interval);\n  }\n};",{"version":3,"sources":["BaseBox-shuikushuiqing.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"baseBoxContent\">\r\n    <!-- 折叠面板 -->\r\n    <!-- 表单, 用于搜索查询 -->\r\n    <Collapse active-key=\"1\">\r\n      <Panel key=\"1\">\r\n        查询\r\n        <div slot=\"content\">\r\n          <div class=\"form\">\r\n            <!-- 选择器, 按钮 -->\r\n            <Row class=\"select-group\" :gutter=\"16\">\r\n              <!-- <Col span=\"2\">\r\n                <span style=\"line-height:25px\">市:</span>\r\n              </Col>-->\r\n              <Col span=\"12\">\r\n                <!-- 地址级联选择器 -->\r\n                <el-cascader\r\n                  clearable\r\n                  filterable\r\n                  size=\"mini\"\r\n                  placeholder=\"地址\"\r\n                  :options=\"form.adressList\"\r\n                  v-model=\"form.model_adress\"\r\n                  @change=\"search\"\r\n                  change-on-select\r\n                ></el-cascader>\r\n              </Col>\r\n\r\n              <Col span=\"12\">\r\n                <!-- 渠道级联选择器 -->\r\n                <el-cascader\r\n                  filterable\r\n                  clearable\r\n                  size=\"mini\"\r\n                  placeholder=\"渠道\"\r\n                  :options=\"form.qudaoList\"\r\n                  v-model=\"form.model_qudao\"\r\n                  @change=\"search\"\r\n                  change-on-select\r\n                ></el-cascader>\r\n              </Col>\r\n            </Row>\r\n            <!-- 分割线 -->\r\n            <div class=\"divider\"></div>\r\n            <Row class=\"select-group\" :gutter=\"16\">\r\n              <Col span=\"12\">\r\n                <!-- 归属单位选择器 -->\r\n                <el-select\r\n                  v-model=\"form.model_guishu\"\r\n                  multiple\r\n                  collapse-tags\r\n                  clearable\r\n                  size=\"mini\"\r\n                  @change=\"search\"\r\n                  placeholder=\"归属单位\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in form.guishuList\"\r\n                    :key=\"item.Field\"\r\n                    :label=\"item.FieldName\"\r\n                    :value=\"item.Field\"\r\n                  ></el-option>\r\n                </el-select>\r\n              </Col>\r\n              <Col span=\"12\">\r\n                <!-- 水库等级选择器 -->\r\n                <el-select\r\n                  v-model=\"form.model_dengji\"\r\n                  multiple\r\n                  collapse-tags\r\n                  clearable\r\n                  size=\"mini\"\r\n                  @change=\"search\"\r\n                  placeholder=\"水库等级\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in form.dengjiList\"\r\n                    :key=\"item.Field\"\r\n                    :label=\"item.FieldName\"\r\n                    :value=\"item.Field\"\r\n                  ></el-option>\r\n                </el-select>\r\n              </Col>\r\n            </Row>\r\n            <!-- 分割线 -->\r\n            <div class=\"divider\"></div>\r\n            <Row>\r\n              <Col span=\"4\" style=\"line-height: 24px;\">异常界限值:</Col>\r\n              <Col span=\"7\">\r\n                <Input\r\n                  @on-enter=\"search\"\r\n                  placeholder=\"异常界限值m\"\r\n                  size=\"small\"\r\n                  v-model.trim=\"form.YCJXZ\"\r\n                ></Input>\r\n              </Col>\r\n            </Row>\r\n            <!-- 分割线 -->\r\n            <div class=\"divider\"></div>\r\n            <Row :gutter=\"16\">\r\n              <Col span=\"22\">\r\n                <Input\r\n                  search\r\n                  enter-button\r\n                  @on-search=\"search\"\r\n                  placeholder=\"请输入要搜索的站名\"\r\n                  size=\"small\"\r\n                  v-model.trim=\"form.search_str\"\r\n                >\r\n                  <!-- <Icon type=\"ios-search\" slot=\"suffix\"/> -->\r\n                </Input>\r\n              </Col>\r\n              <!-- <Col span=\"5\">\r\n                查询按钮\r\n                <Button type=\"info\" size=\"small\" @click=\"search\">查询</Button>\r\n              </Col>-->\r\n            </Row>\r\n            <!-- 分割线 -->\r\n            <div class=\"divider\"></div>\r\n            <Row :gutter=\"16\" type=\"flex\" justify=\"center\" align=\"middle\">\r\n              <Col span=\"4\" style=\"text-align:center;\">\r\n                <span style=\"letter-spacing:5px\">标记:</span>\r\n              </Col>\r\n              <Col span=\"20\">\r\n                <CheckboxGroup\r\n                  @on-change=\"checkboxGroup_onChange\"\r\n                  v-model=\"form.social\"\r\n                  class=\"checkBox-group\"\r\n                  style=\"height:22px\"\r\n                >\r\n                  <Checkbox\r\n                    v-for=\"item in form.checkBoxList\"\r\n                    :label=\"item.value\"\r\n                    :size=\"item.size\"\r\n                    class=\"checkBoxItem\"\r\n                  >\r\n                    <span>{{ item.title }}</span>\r\n                  </Checkbox>\r\n                </CheckboxGroup>\r\n              </Col>\r\n            </Row>\r\n            <!-- 多选框 -->\r\n          </div>\r\n        </div>\r\n      </Panel>\r\n    </Collapse>\r\n\r\n    <!-- 表格, 用于展示数据 -->\r\n    <div>\r\n      <el-table\r\n        @cell-click=\"cellClick\"\r\n        :data=\"pageFilter()\"\r\n        border\r\n        style=\"width: 100%\"\r\n        size=\"small\"\r\n        :height=\"table.height\"\r\n        v-loading=\"table.loading\"\r\n        empty-text=\"暂无站点数据\"\r\n        @sort-change=\"sort_change\"\r\n      >\r\n        <el-table-column\r\n          v-for=\"(item,index) in table.columns\"\r\n          :prop=\"item.key\"\r\n          :align=\"item.align\"\r\n          :label=\"item.title\"\r\n          :width=\"item.width\"\r\n          :fixed=\"item.fixed\"\r\n          :sortable=\"item.sortable\"\r\n          :show-overflow-tooltip=\"true\"\r\n        ></el-table-column>\r\n        <el-table-column align=\"center\" label=\"水位(m)\" :width=\"80\">\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <span\r\n                :style=\"{\r\n              color: scope.row.jxx > 0?'red' : 'black',\r\n            }\"\r\n              >{{ scope.row.RZ }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\" label=\"距汛限(m)\" :width=\"80\">\r\n          <template slot-scope=\"scope\">\r\n              {{scope.row.jxx}}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 自定义 -->\r\n        <el-table-column align=\"center\" label=\"水势\" :width=\"80\">\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <strong\r\n                :style=\"{\r\n              color: scope.row.RWPTN.status == 4? 'blue' : scope.row.RWPTN.status == 5?'red' : 'black',\r\n              fontSize: scope.row.RWPTN.status == 6?'12px' : '17px'\r\n            }\"\r\n              >{{ scope.row.RWPTN.symbol }}</strong>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分割线 -->\r\n      <!-- <Divider/> -->\r\n      <div class=\"divider\"></div>\r\n      <!-- 分页器 -->\r\n      <el-pagination\r\n        background\r\n        :page-size=\"table.pageSizes\"\r\n        layout=\"total, prev, pager, next, jumper, sizes\"\r\n        :page-sizes=\"[20, 50, 100, 200]\"\r\n        :total=\"table.Rows.length\"\r\n        :pager-count=\"5\"\r\n        :current-page=\"table.currentPage\"\r\n        @current-change=\"handleCurrentChange\"\r\n        @size-change=\"handleSizeChange\"\r\n        class=\"pageController\"\r\n        small\r\n      ></el-pagination>\r\n    </div>\r\n    <!-- 提示框 -->\r\n    <div ref=\"tip\" style=\"display:none;\">\r\n      <!-- 渠道水情 -->\r\n      <TipsQUDAO @chart=\"chart\" :info=\"tip.info_tip\" v-if=\"tip.show_tip\"></TipsQUDAO>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport TipsQUDAO from \"@/components/BaseBox/Tips/Tips-qudaoshuiqing.vue\";\r\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\";\r\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\r\nimport { truncateSync } from \"fs\";\r\nimport { setTimeout } from \"timers\";\r\n\r\nimport test_data from \"./test_data\";\r\n\r\nexport default {\r\n  props: {\r\n    featrue: {\r\n      type: Object\r\n    },\r\n    search_FeatrueLayer: {\r\n      type: Function\r\n    }\r\n  },\r\n  components: {\r\n    TipsQUDAO\r\n  },\r\n  data() {\r\n    return {\r\n      // 折叠面板对象\r\n      collapse: {\r\n        activeName: \"\",\r\n        list: []\r\n      },\r\n      // 地图对象\r\n      map: null,\r\n      // 该图层对象\r\n      JsonFlayer: null,\r\n      // 文字标注图层\r\n      TextGraphicsLayers: [],\r\n      // 提示 展示\r\n      tip: {\r\n        info_tip: null,\r\n        show_tip: false\r\n      },\r\n      // 表单数据\r\n      form: {\r\n        YCJXZ: \"0.5\",\r\n        search_str: \"\",\r\n        adressList: [],\r\n        qudaoList: [],\r\n        dengjiList: [],\r\n        guishuList: [\r\n          {\r\n            value: \"danwei1\",\r\n            label: \"单位一\"\r\n          },\r\n          {\r\n            value: \"danwei2\",\r\n            label: \"单位二\"\r\n          }\r\n        ],\r\n        social: [\"site\"],\r\n        checkBoxList: [\r\n          {\r\n            value: \"site\",\r\n            size: \"small\",\r\n            // iconType: \"logo-facebook\",\r\n            title: \"站点\"\r\n          },\r\n          {\r\n            value: \"STNM\",\r\n            size: \"small\",\r\n            // iconType: \"logo-facebook\",\r\n            title: \"站名\"\r\n          },\r\n          {\r\n            value: \"RZ\",\r\n            size: \"small\",\r\n            // iconType: \"logo-facebook\",\r\n            title: \"水位\"\r\n          }\r\n        ],\r\n        model_adress: null,\r\n        model_qudao: null,\r\n        model_guishu: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"],\r\n        model_dengji: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n      },\r\n      // 表格数据\r\n      table: {\r\n        // 表头设置\r\n        columns: [\r\n          {\r\n            title: \" \",\r\n            key: \"index\",\r\n            width: 45,\r\n            align: \"center\",\r\n            fixed: \"left\"\r\n          },\r\n          {\r\n            title: \"站名\",\r\n            key: \"STNM\",\r\n            width: 120,\r\n            align: \"center\",\r\n            fixed: \"left\",\r\n            sortable: \"custom\"\r\n          },\r\n          {\r\n            title: \"时间\",\r\n            key: \"tm\",\r\n            width: 120,\r\n            align: \"center\",\r\n            sortable: \"custom\"\r\n          },\r\n        ],\r\n        // 表体内容\r\n        Rows: [],\r\n        // 过滤后的表体内容\r\n        Rows_filter: [],\r\n        // 表格是否加载中\r\n        loading: false,\r\n        // 当前页\r\n        currentPage: 1,\r\n        // 每页显示数量\r\n        pageSizes: 20,\r\n        // 表体高度\r\n        height: 300\r\n      }\r\n    };\r\n  },\r\n  // 引入过滤方法到此组件\r\n  mixins: [FilterMethods, GetDataMethods],\r\n  methods: {\r\n    // 表格每一行点击事件\r\n    cellClick(item) {\r\n      var evt = new Object();\r\n      evt.graphic = new Object();\r\n      evt.graphic.attributes = item;\r\n      evt.graphic.attributes.rowinfo = JSON.parse(JSON.stringify(item));\r\n      evt.graphic.attributes.rowinfo.tableType = {\r\n        sksq: \"historyTable\"\r\n      };\r\n      var v = new Object();\r\n      v.itype = \"shuikushuiqing\";\r\n\r\n      // 设置中心缩放\r\n      this.setMapCenterandZoom(item.LGTD, item.LTTD);\r\n      // 取消所有站点的闪烁\r\n      this.$App.GraphicsLayer_Selection_clear();\r\n      // 对应站点闪烁\r\n      this.$App.add_Graphic_To_GraphicsLayer_Selection(item);\r\n      // 展示抽屉详情框\r\n      this.$App.showDrawer(evt, v);\r\n    },\r\n    // 提示展示\r\n    showTips(item) {\r\n      // 隐藏之前提示框\r\n      this.hideTips();\r\n      \r\n      console.log('悬浮框');\r\n      console.log(item);\r\n      \r\n      let mon = item.rowinfo.tm.substr(6, 1);\r\n      console.log(mon);\r\n      var div = `<div>\r\n        <div class=\"tip_row\">\r\n                <span class=\"tip_col_5\">时间：</span>\r\n                <span class=\"tip_col_7\">${this.$FilterData.dateFilter(\r\n                  item.rowinfo.tm,\r\n                  null,\r\n                  null,\r\n                  0\r\n                )}</span>\r\n                <span class=\"tip_col_5\">库容：</span>\r\n                <span class=\"tip_col_7\">\r\n                ${item.rowinfo.w}万m³\r\n                </span>\r\n                <span class=\"tip_col_5\">水位：</span>\r\n                <span class=\"tip_col_7\">${\r\n                  this.$FilterData.Float_Filter(item.rowinfo.RZ, 2) == \"\"\r\n                    ? \"\"\r\n                    : this.$FilterData.Float_Filter(item.rowinfo.RZ, 2) + \" m\"\r\n                }</span>\r\n              </div>\r\n              <div class=\"divider\"></div>\r\n              <div class=\"tip_row\">                \r\n                <span class=\"tip_col_5\" >汛限水位：</span>\r\n                <span class=\"tip_col_7\" id=\"${item.STCD}_XXSW\">\r\n\r\n                </span>\r\n                <span class=\"tip_col_5\" >距汛限：</span>\r\n                <span class=\"tip_col_7\" id=\"${item.STCD}_JXX\"></span>\r\n                <span class=\"tip_col_5\">水势：</span>\r\n                <span class=\"tip_col_7\" id=\"${item.STCD}_shuishi\">${\r\n                  this.$FilterData.WPTN_Filter(item.rowinfo.RWPTN).symbol\r\n                }</span>\r\n              </div>\r\n              <div class=\"divider\"></div>\r\n        <div id=\"${\r\n          item.STCD\r\n        }\" style=\"width: 500px;height:320px;margin:auto\"></div>\r\n      </div>`;\r\n      // var content = `<div id=\"myChart\" :style=\"{width: '340px', height: '250px', margin: 'auto'}\"></div>`; // 获取内容\r\n      this.map.infoWindow.resize(570, 650); // 提示框大小\r\n      this.map.infoWindow.setTitle(item.STNM); // 提示题目\r\n      this.map.infoWindow.setContent(div); // 提示内容\r\n\r\n\r\n                //获取坐标\r\n                var x=Number(item.LGTD);\r\n                var y=Number(item.LTTD);\r\n\r\n\r\n                //如果basemap使用ArcGIS的就需要\r\n                //转换坐标系\r\n                x = (x / 180.0) * 20037508.34\r\n                if (y > 85.05112) y = 85.05112;\r\n                if (y < -85.05112) y = -85.05112;\r\n                y = (Math.PI / 180.0) * y;\r\n                var tmp = Math.PI / 4.0 + y / 2.0;\r\n                y = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI;\r\n\r\n                //位置点对象\r\n                var zoompoint = {\r\n                    //spatialReference: {wkid: 4326},\r\n                    spatialReference: this.map.spatialReference,\r\n                    x: x,\r\n                    y: y\r\n                };\r\n\r\n\r\n      this.map.infoWindow.show(zoompoint); // 提示位置\r\n      // 如果事件类型不是鼠标经过，则\r\n      if (item.eventType != \"mouse-over\") {\r\n        // 设置中心和缩放 (接受经纬度，和缩放比例)\r\n        this.setMapCenterandZoom(Number(item.LGTD) + 0.1, item.LTTD);\r\n      }\r\n\r\n      var body = {\r\n        STCD: item.STCD,\r\n        // TM: this.$FilterData.elDatePicker_Filter(\r\n        //   this.$App.zeroPointToNowOfTheDay()\r\n        // ),\r\n        _page_size: 999999\r\n      };\r\n\r\n      // 时间参数\r\n      var DTT = this.$FilterData\r\n        .elDatePicker_Filter(this.$App.zeroPointToNowOfTheDay())\r\n        .split(\",\");\r\n      body.Time_min = DTT[1];\r\n      body.Time_max = DTT[2];\r\n\r\n      this.$GetData.Survey_History_SKSQ(\r\n        \"historyTable\",\r\n        body,\r\n        // body,\r\n        {\r\n          default: true\r\n        },\r\n        data => {\r\n          this.setWPTN_HTML(`${item.STCD}_shuishi`, item.rowinfo.RWPTN);\r\n          this.createChart(item.STCD, data.data);\r\n        }\r\n      );\r\n\r\n      this.$GetData.Survey_History_SKSQ(\r\n        \"alarmTable\",\r\n        {\r\n          STCD: item.STCD\r\n        },\r\n        // body,\r\n        true,\r\n        data => {\r\n          console.log(data);\r\n          // let mon = data.data[0].TM.substr(6,1)\r\n          let sw = item.rowinfo.RZ;\r\n          // ${mon <= 6? this.$FilterData.Float_Filter(item.rowinfo.FWL, 3) : this.$FilterData.Float_Filter(item.rowinfo.FWL79, 3)}\r\n          const div_XXSW = document.getElementById(`${item.STCD}_XXSW`);\r\n          const div_JXX = document.getElementById(`${item.STCD}_JXX`);\r\n          let xxsw = `${mon <= 6 ? data.data[0].FWL : data.data[0].FWL79}`;\r\n          div_XXSW.innerHTML = `${this.$FilterData.Float_Filter(xxsw, 2)} m`;\r\n          let jxx = parseFloat(xxsw) - parseFloat(sw);\r\n          div_JXX.innerHTML = `${this.$FilterData.Float_Filter(-jxx, 2)} m`;\r\n          console.log(xxsw, sw);\r\n          console.log(jxx, div_JXX);\r\n        }\r\n      );\r\n\r\n      // this.$GetData.Survey_History_SKSQ(\r\n      //   \"alarmTable\",\r\n      //   {\r\n      //     STCD: item.STCD\r\n      //   },\r\n      //   {\r\n      //     default: true\r\n      //   },\r\n      //   data => {\r\n      //     var data = data.data[0];\r\n      //     if (data) {\r\n      //       var JYZ_div = document.getElementById(`${item.STCD}_YJZ`),\r\n      //         JYQ_div = document.getElementById(`${item.STCD}_YJQ`);\r\n      //\r\n      //       JYZ_div.innerHTML = `<span>${this.$FilterData.Float_Filter(\r\n      //         data.Z\r\n      //       )}m</span>`;\r\n      //       JYQ_div.innerHTML = `<span>${this.$FilterData.Float_Filter(\r\n      //         data.Q,\r\n      //         3\r\n      //       )}m³/s</span>`;\r\n      //     }\r\n      //   }\r\n      // );\r\n\r\n      // 延时200毫秒\r\n      // setTimeout(() => {\r\n\r\n      // }, 200);\r\n\r\n      // 延时200毫秒\r\n      // setTimeout(() => {\r\n\r\n      // }, 200);\r\n    },\r\n    setWPTN_HTML(id, WPTN) {\r\n      var div = document.getElementById(id);\r\n      var html;\r\n      switch (WPTN) {\r\n        case \"4\":\r\n          html = `<span style=\"color:blue\">↓</span>`;\r\n          break;\r\n\r\n        case \"5\":\r\n          html = `<span style=\"color:red\">↑</span>`;\r\n          break;\r\n\r\n        case \"6\":\r\n          html = `<span style=\"color:black\">一</span>`;\r\n          break;\r\n        default:\r\n          html = `<span style=\"color:black\">一</span>`;\r\n          break;\r\n      }\r\n      if (div) {\r\n        div.innerHTML = html;\r\n      }\r\n    },\r\n    // 设置中心和缩放 (接受经纬度，和缩放比例)\r\n    setMapCenterandZoom(LGTD, LTTD, Zoom) {\r\n      //koen 20190929\r\n      //暂时不允许点击，防止缩到全球地图的bug\r\n      //this.map.centerAndZoom([Number(LGTD), Number(LTTD)], Zoom || 1);\r\n    },\r\n    // 隐藏提示\r\n    hideTips() {\r\n      this.map.infoWindow.hide();\r\n      // this.tip.show_tip = false; // 关闭提示框组件\r\n    },\r\n    // 制图\r\n    createChart(id, data) {\r\n      if (data.length > 0) {\r\n        // data = data.slice(0, 3);\r\n\r\n        console.log(data.TM);\r\n        var echartData = this.$App.transform_SKSQ_data_into_ehart_data(\r\n          data,\r\n          \"historyTable\",\r\n          true\r\n        ); // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n\r\n        var x_List = echartData.x.list.map((val, index, array) => {\r\n          // 时间过滤\r\n          var time = val.split(\" \");\r\n          return time[1];\r\n        });\r\n\r\n        myChart = this.$echarts.init(document.getElementById(id));\r\n\r\n        myChart.setOption({\r\n          title: {\r\n            text: \"今日水情图\"\r\n          },\r\n          tooltip: {\r\n            trigger: \"axis\"\r\n          },\r\n          legend: {\r\n            data: [echartData.y1.name, echartData.y2.name],\r\n            y: \"bottom\"\r\n          },\r\n\r\n          // calculable: true,\r\n          animation: false,\r\n          xAxis: [\r\n            {\r\n              type: \"category\",\r\n              boundaryGap: false,\r\n              data: x_List,\r\n              axisTick: {\r\n                interval: function(index, val) {\r\n                  var listLength = echartData.x.list.length;\r\n                  if (listLength >= 4) {\r\n                    var tick = Math.round(listLength / 4);\r\n                    // console.log((index + 1) % tick === 0);\r\n                    // console.log('1575listLength',listLength);\r\n                    // console.log('1576tick',tick);\r\n                    if ((index + 1) % tick === 0) {\r\n                      return true;\r\n                    } else {\r\n                      return false;\r\n                    }\r\n                  } else {\r\n                    return true;\r\n                  }\r\n                },\r\n                length: 10\r\n              },\r\n              axisLabel: {\r\n                interval: function(index, val) {\r\n                  var listLength = echartData.x.list.length;\r\n                  if (listLength >= 4) {\r\n                    var tick = Math.round(listLength / 4);\r\n                    // console.log('1575listLength',listLength);\r\n                    // console.log('1576tick',tick);\r\n                    let a = (index + 1) % tick;\r\n                    if ((index + 1) % tick === 0) {\r\n                      return true;\r\n                    } else {\r\n                      return false;\r\n                    }\r\n                  } else {\r\n                    return true;\r\n                  }\r\n                },\r\n                rotate: 10,\r\n                margin: 16\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              name: `${echartData.y1.name} m`,\r\n              type: \"value\",\r\n              axisLabel: {\r\n                formatter: \"{value} \"\r\n              },\r\n              scale: true\r\n              // max: echartData.y1.max,\r\n              // min: echartData.y1.min\r\n            },\r\n            {\r\n              name: `${echartData.y2.name}m`,\r\n              type: \"value\",\r\n              axisLabel: {\r\n                formatter: \"{value} \"\r\n              },\r\n              scale: true\r\n              // max: echartData.y2.max,\r\n              // min: echartData.y2.min\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: echartData.y1.name,\r\n              type: \"line\",\r\n              data: echartData.y1.list\r\n            },\r\n            {\r\n              name: echartData.y2.name,\r\n              type: \"line\",\r\n              data: echartData.y2.list,\r\n              yAxisIndex: 1\r\n            }\r\n          ]\r\n        });\r\n      } else {\r\n        var myChart = document.getElementById(id);\r\n        myChart.style.display = \"flex\";\r\n        myChart.style.alignItems = \"center\";\r\n        myChart.style.justifyContent = \"center\";\r\n        myChart.innerHTML = \"暂无今天数据\";\r\n      }\r\n    },\r\n    // 表格加载\r\n    tableLoading() {\r\n      this.table.loading = true;\r\n    },\r\n    // 表格加载取消\r\n    cancelTableLoading() {\r\n      this.table.loading = false;\r\n    },\r\n    // 加载表格数据\r\n    loadTableData(data) {\r\n      // 加载站点数据\r\n      this.table.Rows = data;\r\n    },\r\n    getDataFromEnd(url, callback) {\r\n      // 获取表格数据 `/guanqu/gis/details?ID=${this.info.ID}`\r\n      this.axios.get(url).then(res => {\r\n        if (typeof callback == \"function\") {\r\n          callback(res);\r\n        }\r\n      });\r\n    },\r\n    // 查询\r\n    search() {\r\n      // console.log(value);\r\n      var body = new Object();\r\n      // 如果输入框有内容，添加站名过滤字段\r\n      if (this.form.search_str) {\r\n        body[\"STNM\"] = `${this.form.search_str}`;\r\n      }\r\n      // 如果地址选择框有内容，添加行政区划过滤字段\r\n      if (this.form.model_adress && this.form.model_adress.length != 0) {\r\n        body[\"ADDVCD\"] = `${this.$App.ADDVCD_Array_Filter(\r\n          this.form.model_adress\r\n        )}`;\r\n      }\r\n      // 如果渠道选择框有内容，添加渠道过滤字段\r\n      if (this.form.model_qudao && this.form.model_qudao.length != 0) {\r\n        body[\"Canal_Code\"] = `${this.$App.Canal_Code_Array_Filter(\r\n          this.form.model_qudao\r\n        )}`;\r\n      }\r\n      // 如果归属单位选择框有内容，添加归属单位过滤字段\r\n      if (this.form.model_guishu && this.form.model_guishu.length != 0) {\r\n        body[\"STGR\"] = this.form.model_guishu.join(\",\");\r\n      }\r\n      // 如果水库等级选择框有内容，添加水库等级过滤字段\r\n      if (this.form.model_dengji && this.form.model_dengji.length != 0) {\r\n        body[\"LEVEL\"] = this.form.model_dengji.join(\",\");\r\n      }\r\n      //异常界限值\r\n      if (this.form.YCJXZ != \"\") {\r\n          body[\"max_yichang\"] = this.form.YCJXZ;\r\n      }\r\n\r\n      this.tableLoading(); // 表格加载中\r\n      this.search_FeatrueLayer(\r\n        \"shuikushuiqing\",\r\n        body,\r\n        this.featrue,\r\n        newFeatureLayerOBJ => {\r\n          this.table.currentPage = 1;\r\n          this.baseBox_init();\r\n          this.cancelTableLoading(); //取消表格加载\r\n          this.hideTips();\r\n        }\r\n      );\r\n      // setTimeout(() => {\r\n      //   this.cancelTableLoading(); //取消表格加载\r\n      // }, 800);\r\n    },\r\n    // 获取 子组件传过来 的绘图方法\r\n    // chart(item) {\r\n    //   this.getChart = item.chart;\r\n    // },\r\n    // 给图层对象添加事件\r\n    addEventToJsonFlayer(JsonFlayer) {\r\n      //当鼠标悬停在元素上\r\n      JsonFlayer.on(\"mouse-over\", evt => {\r\n        setTimeout(() => {\r\n          var attributes = evt.graphic.attributes;\r\n          attributes.eventType = \"mouse-over\";\r\n          this.showTips(attributes); // 展示悬浮框\r\n        }, 100);\r\n        // 给地图对象添加方法\r\n        // this.addEventToMap();\r\n      });\r\n\r\n      // 当鼠标离开元素\r\n      JsonFlayer.on(\"mouse-out\", evt => {\r\n        setTimeout(() => {\r\n          this.hideTips(); // 隐藏悬浮框\r\n        }, 100);\r\n      });\r\n    },\r\n    // 给地图对象添加方法\r\n    addEventToMap() {\r\n      this.map.on(\"click\", () => {\r\n        // 隐藏提示\r\n        this.hideTips();\r\n      });\r\n    },\r\n    // 处理页码切换\r\n    handleCurrentChange(index) {\r\n      this.table.currentPage = index;\r\n    },\r\n    // 处理每页显示条数切换\r\n    handleSizeChange(pageSizes) {\r\n      this.table.pageSizes = pageSizes;\r\n      this.table.currentPage = 1;\r\n    },\r\n    // 分页过滤\r\n    pageFilter(currentPage, pageSizes) {\r\n      var _currentPage = currentPage || this.table.currentPage;\r\n      var _pageSizes = pageSizes || this.table.pageSizes;\r\n      if (this.table.Rows_filter.length != 0) {\r\n        // 截取数组\r\n        var newList = this.table.Rows_filter.slice(\r\n          (_currentPage - 1) * _pageSizes,\r\n          _currentPage * _pageSizes\r\n        );\r\n\r\n        return newList;\r\n      } else {\r\n        return [];\r\n      }\r\n    },\r\n    // 过滤table数据\r\n    filterTableData() {\r\n      this.table.Rows_filter = this.table.Rows.map((val, index) => {\r\n        var val_clone = JSON.parse(JSON.stringify(val));\r\n        // 序号\r\n        val_clone.index = index + 1;\r\n        // 时间过滤\r\n        val_clone.tm = this.$FilterData.dateFilter(val_clone.tm);\r\n        // 水位过滤\r\n        val_clone.RZ = this.$FilterData.Float_Filter(val_clone.RZ);\r\n        val_clone.jxx = this.Z_Filter(val_clone.jxx);\r\n        // 水势过滤\r\n        val_clone.RWPTN = this.WPTN_Filter(val_clone.RWPTN);\r\n        return val_clone;\r\n      });\r\n    },\r\n    // 选取一部分从父组件传来的数据作为表格的数据\r\n    getTableDataFormParent() {\r\n      var tableData = this.featrue.Rows.map(val => {\r\n        return val.rowinfo;\r\n      });\r\n\r\n      return tableData;\r\n    },\r\n    // 获取图层对象,从父组件中\r\n    getJsonFlayerFormParent() {\r\n      this.JsonFlayer = this.featrue.LayerObject;\r\n    },\r\n    // 获取地图对象,从父组件中\r\n    getMapFormParent() {\r\n      this.map = this.featrue.map;\r\n    },\r\n    // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\r\n    addTextGraphicsLayerControllerToFeatrue() {\r\n      this.featrue.TextGraphicsLayerController = new Object();\r\n      this.featrue.TextGraphicsLayerController.removeAllTextGraphicsLayer = this.removeAllTextGraphicsLayer;\r\n      this.featrue.TextGraphicsLayerController.addTextGraphicsLayerByCheckGroup = this.addTextGraphicsLayerByCheckGroup;\r\n    },\r\n    // 多选框标记勾选触发事件\r\n    checkboxGroup_onChange(onCheck_Array) {\r\n      this.removeAllTextGraphicsLayer(); // 清除所有文本标注图层\r\n      this.addTextGraphicsLayerByCheckGroup(); // 根据多选框添加文字标注图层\r\n    },\r\n    // 添加文字标注图层\r\n    addTextGraphicsLayer(options) {\r\n      var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个标注文本图层\r\n      textGraphicsLayer.textType = options.textType;\r\n      this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\r\n      var Rows = this.featrue.Rows;\r\n      //创建textsymbol文本标注\r\n      if (Rows.length > 0) {\r\n        //动态读取json数据源结果集\r\n        for (var i = 0; i < Rows.length; i++) {\r\n          var Row = Rows[i];\r\n          var point = new esri.geometry.Point(\r\n            Row.geometry.x,\r\n            Row.geometry.y,\r\n            this.featrue.map.spatialReference\r\n          );\r\n          //定义文本symbol\r\n          var textsymbol = new esri.symbol.TextSymbol(\r\n            Row.rowinfo[options.textType]\r\n          ) //动态设置文本值\r\n            .setColor(new dojo.Color(options.color || [55, 55, 55])) //setColor设置文本颜色\r\n            .setFont(\r\n              new esri.symbol.Font(options.fontSize || \"10pt\") //setFont设置文本大小\r\n                .setWeight(esri.symbol.Font.WEIGHT_BOLD)\r\n            ) //setWeight设置文本粗体\r\n            .setOffset(options.offset_x || 0, options.offset_y || -25); //设置偏移方向\r\n          var graphic = new esri.Graphic(point, textsymbol);\r\n          textGraphicsLayer.add(graphic);\r\n        }\r\n      }\r\n      this.TextGraphicsLayers.push(textGraphicsLayer);\r\n    },\r\n    // 根据多选框添加文字标注图层\r\n    addTextGraphicsLayerByCheckGroup() {\r\n      var textTypeList;\r\n      var indexOfSocial = this.form.social.indexOf(\"site\");\r\n      // 如果多选框里存在 site站点类型\r\n      if (indexOfSocial !== -1) {\r\n        this.featrue.LayerObject.show();\r\n        this.featrue.LayerObject_yujing.show();\r\n        textTypeList = this.form.social.filter(val => {\r\n          if (val != \"site\") {\r\n            return true;\r\n          }\r\n        });\r\n      } else {\r\n        this.featrue.LayerObject.hide();\r\n        this.featrue.LayerObject_yujing.hide();\r\n        textTypeList = this.form.social;\r\n      }\r\n\r\n      textTypeList.forEach((textType, index) => {\r\n        var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个图形图层\r\n        textGraphicsLayer.textType = textType;\r\n        this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\r\n        var Rows = this.featrue.Rows;\r\n        //创建textsymbol文本标注\r\n        if (Rows.length > 0) {\r\n          //动态读取json数据源结果集\r\n          for (var i = 0; i < Rows.length; i++) {\r\n            var Row = Rows[i];\r\n            var point = new esri.geometry.Point(\r\n              Row.geometry.x,\r\n              Row.geometry.y,\r\n              new esri.SpatialReference({ wkid: 4326 })\r\n            );\r\n            var value = Row.rowinfo[textType];\r\n            // 过滤\r\n            switch (textType) {\r\n              case \"VOL\":\r\n                var value = `${this.Z_Filter(Row.rowinfo[textType])}`;\r\n                if (value == \"\") {\r\n                  value = \"\";\r\n                } else {\r\n                  value += \"V\";\r\n                }\r\n                break;\r\n              case \"RZ\":\r\n                var value = `${this.Z_Filter(Row.rowinfo[textType])}`;\r\n                if (value == \"\") {\r\n                  value = \"\";\r\n                } else {\r\n                  value += \"m\";\r\n                }\r\n                break;\r\n            }\r\n\r\n            //定义文本symbol\r\n            var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\r\n              .setColor(\r\n                new dojo.Color(value == \"不正常\" ? [255, 0, 0] : [55, 55, 55])\r\n              ) //setColor设置文本颜色\r\n              .setFont(\r\n                new esri.symbol.Font(\"10pt\") //setFont设置文本大小\r\n                  .setWeight(esri.symbol.Font.WEIGHT_BOLD)\r\n              ) //setWeight设置文本粗体\r\n              .setOffset(0, -(25 + index * 15)); //设置偏移方向\r\n            var graphic = new esri.Graphic(point, textsymbol);\r\n            textGraphicsLayer.add(graphic);\r\n          }\r\n        }\r\n        this.TextGraphicsLayers.push(textGraphicsLayer);\r\n      });\r\n    },\r\n    // 移除文字标注图层\r\n    removeTextGraphicsLayer(textType) {\r\n      // 找到对应的文字标注图层\r\n      for (let i = 0; i < this.TextGraphicsLayers.length; i++) {\r\n        var val = this.TextGraphicsLayers[i];\r\n        if (val.textType == textType) {\r\n          this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\r\n          // val.hide();\r\n          this.TextGraphicsLayers.splice(i, 1); // 从文字标注图层数组里去除对应的文字图层对象\r\n        }\r\n      }\r\n    },\r\n    // 移除所有文字标注图层\r\n    removeAllTextGraphicsLayer() {\r\n      for (let i = 0; i < this.TextGraphicsLayers.length; i++) {\r\n        var val = this.TextGraphicsLayers[i];\r\n        this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\r\n      }\r\n      this.TextGraphicsLayers = [];\r\n    },\r\n    // 初始化baseBox\r\n    baseBox_init() {\r\n      // 获取地图对象,从父组件中\r\n      this.getMapFormParent();\r\n      // 获取图层对象,从父组件中\r\n      this.getJsonFlayerFormParent();\r\n      // 选取一部分从父组件传来的数据,将其加载为表格数据\r\n      this.loadTableData(\r\n        // (function() {\r\n        //   var data = test_data.map(val => {\r\n        //     return val.rowinfo;\r\n        //   });\r\n        //   return data;\r\n        // })()\r\n        this.getTableDataFormParent()\r\n      );\r\n      // 过滤table数据\r\n      this.filterTableData();\r\n      // 给图层对象添加方法\r\n      this.addEventToJsonFlayer(this.JsonFlayer);\r\n\r\n      // 获取行政区划数据,然后设置地址选择框选项\r\n      this.getTableData_WRP_AD_B(data => {\r\n        this.form.adressList = data;\r\n        // data.map(val => {\r\n        //   var newVal = new Object();\r\n        //   newVal.value = val.AD_CD;\r\n        //   newVal.label = val.AD_NM;\r\n        //   return newVal;\r\n        // })\r\n      });\r\n\r\n      // 获取输排水渠道数据,然后设置渠道选择框选项\r\n      this.getTableData_WRP_IrrBTCanalSystem(data => {\r\n        this.form.qudaoList = data;\r\n        // data.map(val => {\r\n        //   var newVal = new Object();\r\n        //   newVal.value = val.Canal_Code;\r\n        //   newVal.label = val.Canal_Name;\r\n        //   return newVal;\r\n        // });\r\n      });\r\n\r\n      // 获取归属单位数据,然后设置归属单位选择框选项\r\n      this.getTableData_WPR_FieldInfo({ FieldID: \"STGR\" }, data => {\r\n        console.log(data);\r\n        this.form.guishuList = data;\r\n      });\r\n\r\n      // 获取水库等级数据,然后设置水库等级选择框选项\r\n      this.getTableData_WPR_FieldInfo_LEVEL({}, data => {\r\n        this.form.dengjiList = data;\r\n      });\r\n\r\n      // 多选框标记勾选触发事件\r\n      // 1.清除所有文本标注图层\r\n      // 2.根据多选框添加文字标注图层\r\n      this.checkboxGroup_onChange();\r\n      // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\r\n      this.addTextGraphicsLayerControllerToFeatrue();\r\n    },\r\n    // 排序\r\n    sort_change(item) {\r\n      var order = item.order,\r\n        key = item.prop;\r\n\r\n      this.filterTableData();\r\n      var newList;\r\n      if (order) {\r\n        switch (order) {\r\n          case \"descending\":\r\n            if (key != \"TM\") {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                return Number(b[key]) - Number(a[key]);\r\n              });\r\n            } else {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                var aTime = new Date(`20${a.TM}`).getTime(),\r\n                  bTime = new Date(`20${b.TM}`).getTime();\r\n                aTime = isNaN(aTime) ? 0 : aTime;\r\n                bTime = isNaN(bTime) ? 0 : bTime;\r\n                return bTime - aTime;\r\n              });\r\n            }\r\n            break;\r\n\r\n          case \"ascending\":\r\n            if (key != \"TM\") {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                return Number(a[key]) - Number(b[key]);\r\n              });\r\n            } else {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                var aTime = new Date(`20${a.TM}`).getTime(),\r\n                  bTime = new Date(`20${b.TM}`).getTime();\r\n                aTime = isNaN(aTime) ? 0 : aTime;\r\n                bTime = isNaN(bTime) ? 0 : bTime;\r\n                return aTime - bTime;\r\n              });\r\n            }\r\n        }\r\n        this.table.Rows_filter = newList;\r\n      }\r\n      this.$TableMethods.refreshCurrentChange(this.table, 1);\r\n    }\r\n  },\r\n  created() {\r\n    // 初始化baseBox\r\n    this.baseBox_init();\r\n    this.search();\r\n    this.baseBox_Interval = setInterval(() => {\r\n      this.search();\r\n    }, 1000 * 60 * 5);\r\n  },\r\n  destroyed() {\r\n    clearInterval(this.baseBox_Interval);\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"less\" scope>\r\n/* 引入baseBox公共样式 */\r\n@import \"../../assets/commonLess/baseBox\";\r\n</style>\r\n"],"sourceRoot":"src/components/BaseBox"}]}