{"remainingRequest":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\visualplace\\zhihuiguanqu\\src\\components\\BaseBox\\BaseBox-yunxinggongkuang.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\src\\components\\BaseBox\\BaseBox-yunxinggongkuang.vue","mtime":1647828032350},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\babel.config.js","mtime":1577669403468},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _JSON$stringify from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TipsYUNXINGGONGKUANG from \"@/components/BaseBox/Tips/Tips-yunxinggongkuang.vue\";\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\";\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\nexport default {\n  props: {\n    featrue: {\n      type: Object\n    },\n    search_FeatrueLayer: {\n      type: Function\n    }\n  },\n  components: {\n    TipsYUNXINGGONGKUANG: TipsYUNXINGGONGKUANG\n  },\n  data: function data() {\n    return {\n      // 折叠面板对象\n      collapse: {\n        activeName: \"\",\n        list: []\n      },\n      // 地图对象\n      map: null,\n      // 该图层对象\n      JsonFlayer: null,\n      // 文字标注图层\n      TextGraphicsLayers: [],\n      // 提示 展示\n      tip: {\n        info_tip: null,\n        show_tip: false\n      },\n      // 表单数据\n      form: {\n        // 搜索框\n        search_str: \"\",\n        // 地址选择列表\n        adressList: [],\n        // 渠道选择列表\n        qudaoList: [],\n        social: [\"site\"],\n        // 状态选择列表\n        statusList: [{\n          value: 1,\n          label: \"正常\"\n        }, {\n          value: 2,\n          label: \"异常\"\n        }, {\n          value: 3,\n          label: \"电压异常\"\n        }, {\n          value: 4,\n          label: \"通讯异常\"\n        }],\n        // 多选框列表\n        checkBoxList: [{\n          value: \"site\",\n          size: \"small\",\n          span: 5,\n          // iconType: \"logo-facebook\",\n          title: \"站点\"\n        }, {\n          value: \"STNM\",\n          size: \"small\",\n          span: 6,\n          // iconType: \"logo-facebook\",\n          title: \"站名\"\n        }, {\n          value: \"vol\",\n          size: \"small\",\n          span: 6,\n          // iconType: \"logo-facebook\",\n          title: \"电压值\"\n        }, {\n          value: \"CS\",\n          size: \"small\",\n          span: 7,\n          // iconType: \"logo-facebook\",\n          title: \"通讯状态\"\n        }],\n        // 地址选择\n        model_adress: \"\",\n        // 渠道\n        model_qudao: \"\",\n        // 状态\n        model_status: \"\"\n      },\n      // 表格数据\n      table: {\n        // 表头设置\n        columns: [{\n          title: \"\",\n          key: \"index\",\n          width: 45,\n          align: \"center\",\n          fixed: \"left\"\n        }, {\n          title: \"站名\",\n          key: \"STNM\",\n          width: 120,\n          align: \"center\",\n          fixed: \"left\",\n          sortable: \"custom\"\n        }, {\n          title: \"时间\",\n          key: \"tm\",\n          width: 120,\n          align: \"center\",\n          sortable: \"custom\"\n        }],\n        // 表体内容\n        Rows: [],\n        // 表格是否加载中\n        loading: false,\n        // 当前页\n        currentPage: 1,\n        // 每页显示数量\n        pageSizes: 20,\n        // 表体高度\n        height: 300\n      }\n    };\n  },\n  // 引入过滤方法到此组件\n  mixins: [FilterMethods, GetDataMethods],\n  methods: {\n    // 表格每一行点击事件\n    cellClick: function cellClick(item) {\n      var evt = new Object();\n      evt.graphic = new Object();\n      evt.graphic.attributes = item;\n      evt.graphic.attributes.rowinfo = item;\n      var v = new Object();\n      v.itype = \"yunxinggongkuang\";\n      console.log(item); // 设置中心缩放\n\n      this.setMapCenterandZoom(item.LGTD, item.LTTD); // 取消所有站点的闪烁\n\n      this.$App.GraphicsLayer_Selection_clear(); // 对应站点闪烁\n\n      this.$App.add_Graphic_To_GraphicsLayer_Selection(item); // 展示抽屉详情框\n\n      this.$App.showDrawer(evt, v);\n    },\n    // 展示提示框\n    showTips: function showTips(item) {\n      var _this = this;\n\n      // 隐藏之前提示框\n      this.hideTips(); // 延时200毫秒\n\n      setTimeout(function () {\n        var div = \"<div>\\n        <div class=\\\"tip_row\\\">\\n                <span class=\\\"tip_col_5\\\">\\u65F6\\u95F4\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\">\".concat(item.rowinfo.tm, \"</span>\\n                <span class=\\\"tip_col_5\\\">\\u901A\\u8BAF\\u72B6\\u6001\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\">\").concat(item.rowinfo.CS, \"</span>\\n                <span class=\\\"tip_col_5\\\">\\u7535\\u538B\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\">\").concat(_this.$FilterData.Float_Filter(item.rowinfo.vol, 1), \" v</span>\\n              </div>\\n              <div class=\\\"divider\\\"></div>\\n              <div class=\\\"tip_row\\\">\\n                <span class=\\\"tip_col_5\\\">\\u7535\\u538B\\u8303\\u56F4\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\" id=\\\"\").concat(item.STCD, \"_VOLMAX_VOLMIN\\\">\\n                </span>\\n                <span class=\\\"tip_col_5\\\">\\u7AD9\\u5740\\uFF1A</span>\\n                <span class=\\\"tip_col_7\\\">\\n                \").concat(item.rowinfo.STLC, \"\\n                </span>\\n              </div>\\n              <div class=\\\"divider\\\"></div>\\n        <div id=\\\"\").concat(item.STCD, \"\\\" style=\\\"width: 550px;height:290px;margin:auto\\\"></div>\\n      </div>\");\n\n        _this.map.infoWindow.resize(570, 650); // 提示框大小\n\n\n        _this.map.infoWindow.setTitle(item.STNM); // 提示题目\n\n\n        _this.map.infoWindow.setContent(div); // 提示内容\n        //获取坐标\n\n\n        var x = Number(item.LGTD);\n        var y = Number(item.LTTD); //如果basemap使用ArcGIS的就需要\n        //转换坐标系\n\n        x = x / 180.0 * 20037508.34;\n        if (y > 85.05112) y = 85.05112;\n        if (y < -85.05112) y = -85.05112;\n        y = Math.PI / 180.0 * y;\n        var tmp = Math.PI / 4.0 + y / 2.0;\n        y = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI; //位置点对象\n\n        var zoompoint = {\n          //spatialReference: {wkid: 4326},\n          spatialReference: _this.map.spatialReference,\n          x: x,\n          y: y\n        };\n\n        _this.map.infoWindow.show(zoompoint); // 提示位置\n        // 如果事件类型不是鼠标经过，则\n\n\n        if (item.eventType != \"mouse-over\") {\n          // 设置中心和缩放 (接受经纬度，和缩放比例)\n          _this.setMapCenterandZoom(Number(item.LGTD) + 0.1, item.LTTD);\n        }\n\n        var body = {\n          STCD: item.STCD,\n          _page_size: 999999\n        };\n        body.STCD = item.STCD;\n        delete body.TM;\n        delete body._page_size; // 正常电压范围\n\n        _this.$GetData.Survey_Around_YXGK(null, body, false, function (data) {\n          var around = document.getElementById(\"\".concat(item.STCD, \"_VOLMAX_VOLMIN\"));\n          var dataVol = data.data[0],\n              volMin = dataVol.VOLMIN,\n              volMax = dataVol.VOLMAX;\n          around.innerHTML = \"\".concat(volMin, \"v - \").concat(volMax, \"v\");\n        });\n\n        var obj = JSON.parse(_JSON$stringify(body));\n\n        var setDate = function setDate(dateType) {\n          var oDate = new Date();\n          console.log(oDate);\n          var YY = oDate.getFullYear();\n          var MM = oDate.getMonth() + 1 < 10 ? \"0\".concat(oDate.getMonth() + 1) : oDate.getMonth() + 1;\n          var DD = oDate.getDate() < 10 ? \"0\".concat(oDate.getDate()) : oDate.getDate();\n          var HH = oDate.getHours() < 10 ? \"0\".concat(oDate.getHours()) : oDate.getHours();\n          var mm = oDate.getMinutes() < 10 ? \"0\".concat(oDate.getMinutes()) : oDate.getHours();\n          var SS = oDate.getSeconds() < 10 ? \"0\".concat(oDate.getSeconds()) : oDate.getSeconds();\n\n          if (dateType === 'now') {\n            return \"\".concat(YY, \"-\").concat(MM, \"-\").concat(DD, \" \").concat(HH, \":\").concat(mm, \":\").concat(SS);\n          } else {\n            return \"\".concat(YY, \"-\").concat(MM, \"-\").concat(DD, \" 00:00:00\");\n          }\n        };\n\n        obj.Time_max = setDate('now');\n        obj.Time_min = setDate('0');\n        console.log(obj);\n        setDate(null);\n\n        _this.$GetData.Survey_History_YXGK(\"historyTable\", obj, {\n          default: true\n        }, function (data) {\n          _this.createChart_zhuangtaishuju(item.STCD, \"zhuangtaishuju\", data.data); // this.$GetData.Survey_History_YXGK(\n          //   \"auxiliaryTable\",\n          //   {\n          //     VOLTYPE: data.data[0].VOLTYPE\n          //   },\n          //   {\n          //     default: true\n          //   },\n          //   data => {\n          //     var data = data.data[0];\n          //     if (data) {\n          //       var div = document.getElementById(\n          //         `${item.STCD}_VOLMAX_VOLMIN`\n          //       );\n          //       var VOLMAX_VOLMIN = `${data.VOLMIN} ~ ${data.VOLMAX}`;\n          //       div.innerHTML = `<span>${VOLMAX_VOLMIN}</span>`;\n          //     }\n          //   }\n          // );\n\n        });\n      }, 200);\n    },\n    // 制图\n    createChart_zhuangtaishuju: function createChart_zhuangtaishuju(id, tableType, data) {\n      var ele = document.getElementById(id);\n\n      if (data.length > 0) {\n        var echartData = this.$App.transform_YXGK_data_into_ehart_data(data, tableType); // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n\n        var myChart = this.$echarts.init(ele);\n        myChart.setOption({\n          title: {\n            text: echartData.chartName\n          },\n          grid: {\n            x: '20%'\n          },\n          tooltip: {\n            trigger: \"axis\"\n          },\n          // legend: {\n          //   data: [echartData.y1.name],\n          //   y: \"bottom\"\n          // },\n          calculable: true,\n          animation: false,\n          xAxis: [{\n            type: \"category\",\n            boundaryGap: false,\n            data: echartData.x.list,\n            axisLabel: {\n              rotate: 15\n            }\n          }],\n          yAxis: [{\n            name: \"\".concat(echartData.y1.name, \" V\"),\n            type: \"value\",\n            axisLabel: {\n              formatter: \"{value} \"\n            },\n            max: echartData.y1.max,\n            min: echartData.y1.min\n          }],\n          axis: {\n            axisLabel: {\n              interval: 'auto'\n            },\n            axisTick: {\n              interval: 'auto'\n            }\n          },\n          series: [{\n            name: echartData.y1.name,\n            type: \"line\",\n            data: echartData.y1.list\n          }]\n        });\n      } else {\n        ele.style.display = \"flex\";\n        ele.style.alignItems = \"center\";\n        ele.style.justifyContent = \"center\";\n        ele.innerHTML = \"暂无今天数据\";\n      }\n    },\n    // 设置中心和缩放 (接受经纬度，和缩放比例)\n    setMapCenterandZoom: function setMapCenterandZoom(LGTD, LTTD, Zoom) {//koen 20190929\n      //暂时不允许点击，防止缩到全球地图的bug\n      //this.map.centerAndZoom([Number(LGTD), Number(LTTD)], Zoom || 1);\n    },\n    // 隐藏提示\n    hideTips: function hideTips() {\n      this.map.infoWindow.hide();\n      this.tip.show_tip = false; // 关闭提示框组件\n    },\n    // 表格加载\n    tableLoading: function tableLoading() {\n      this.table.loading = true;\n    },\n    // 表格加载取消\n    cancelTableLoading: function cancelTableLoading() {\n      this.table.loading = false;\n    },\n    // 加载表格数据\n    loadTableData: function loadTableData(data) {\n      // 加载站点数据\n      this.table.Rows = data;\n    },\n    getDataFromEnd: function getDataFromEnd(url, callback) {\n      // 获取表格数据 `/guanqu/gis/details?ID=${this.info.ID}`\n      this.axios.get(url).then(function (res) {\n        if (typeof callback == \"function\") {\n          callback(res);\n        }\n      });\n    },\n    // 查询\n    search: function search() {\n      var _this2 = this;\n\n      var body = new Object(); // 如果输入框有内容，添加站名过滤字段\n\n      if (this.form.search_str.length > 0) {\n        body[\"STNM\"] = \"\".concat(this.form.search_str);\n      } // 如果地址选择框有内容，添加行政区划过滤字段\n\n\n      if (this.form.model_adress && this.form.model_adress.length != 0) {\n        body[\"ADDVCD\"] = \"\".concat(this.$App.ADDVCD_Array_Filter(this.form.model_adress));\n      } // 如果渠道选择框有内容，添加渠道过滤字段\n\n\n      if (this.form.model_qudao && this.form.model_qudao.length != 0) {\n        body[\"Canal_Code\"] = \"\".concat(this.$App.Canal_Code_Array_Filter(this.form.model_qudao));\n      }\n\n      if (this.form.model_status && this.form.model_status.length != 0) {\n        body[\"_stat\"] = this.form.model_status;\n      }\n\n      this.tableLoading(); // 表格加载中\n\n      this.search_FeatrueLayer( // 9, // 图层type类型\n      \"yunxinggongkuang\", // 图层type类型\n      body, this.featrue, function (newFeatureLayerOBJ) {\n        _this2.table.currentPage = 1;\n\n        _this2.baseBox_init();\n\n        _this2.cancelTableLoading(); //取消表格加载\n\n\n        _this2.hideTips();\n      });\n    },\n    // 给图层对象添加方法\n    addEventToJsonFlayer: function addEventToJsonFlayer(JsonFlayer) {\n      var _this3 = this;\n\n      //当鼠标悬停在元素上\n      JsonFlayer.on(\"mouse-over\", function (evt) {\n        var attributes = evt.graphic.attributes;\n        attributes.eventType = \"mouse-over\";\n\n        _this3.showTips(attributes); // 给地图对象添加方法\n\n\n        _this3.addEventToMap();\n      }); //当鼠标悬停在元素上\n\n      JsonFlayer.on(\"mouse-out\", function (evt) {\n        _this3.hideTips();\n      });\n    },\n    // 给地图对象添加方法\n    addEventToMap: function addEventToMap() {\n      var _this4 = this;\n\n      this.map.on(\"click\", function () {\n        // 隐藏提示\n        _this4.hideTips();\n      });\n    },\n    // 处理页码切换\n    handleCurrentChange: function handleCurrentChange(index) {\n      this.table.currentPage = index;\n    },\n    // 处理每页显示条数切换\n    handleSizeChange: function handleSizeChange(pageSizes) {\n      this.table.pageSizes = pageSizes;\n      this.table.currentPage = 1;\n    },\n    // 分页过滤\n    pageFilter: function pageFilter(currentPage, pageSizes) {\n      var _currentPage = currentPage || this.table.currentPage;\n\n      var _pageSizes = pageSizes || this.table.pageSizes;\n\n      if (this.table.Rows_filter.length != 0) {\n        // 截取数组\n        var newList = this.table.Rows_filter.slice((_currentPage - 1) * _pageSizes, _currentPage * _pageSizes);\n        return newList;\n      } else {\n        return [];\n      }\n    },\n    // 过滤table数据\n    filterTableData: function filterTableData() {\n      var _this5 = this;\n\n      this.table.Rows_filter = this.table.Rows.map(function (val, index) {\n        var val_clone = JSON.parse(_JSON$stringify(val)); // 序号\n\n        val_clone.index = index + 1; // 时间过滤\n\n        val_clone.TM = _this5.dateFilter(val_clone.TM); // 测报电压过滤\n\n        val_clone.vol = _this5.$FilterData.Float_Filter(val_clone.vol, 1); // 测报通讯状态过滤\n        // val_clone.CS = this.CS_Filter(val_clone.CS);\n\n        return val_clone;\n      });\n    },\n    // 选取一部分从父组件传来的数据作为表格的数据\n    getTableDataFormParent: function getTableDataFormParent() {\n      var tableData = this.featrue.Rows.map(function (val) {\n        return val.rowinfo;\n      });\n      return tableData;\n    },\n    // 获取图层对象,从父组件中\n    getJsonFlayerFormParent: function getJsonFlayerFormParent() {\n      this.JsonFlayer = this.featrue.LayerObject;\n    },\n    // 获取地图对象,从父组件中\n    getMapFormParent: function getMapFormParent() {\n      this.map = this.featrue.map;\n    },\n    // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\n    addTextGraphicsLayerControllerToFeatrue: function addTextGraphicsLayerControllerToFeatrue() {\n      this.featrue.TextGraphicsLayerController = new Object();\n      this.featrue.TextGraphicsLayerController.removeAllTextGraphicsLayer = this.removeAllTextGraphicsLayer;\n      this.featrue.TextGraphicsLayerController.addTextGraphicsLayerByCheckGroup = this.addTextGraphicsLayerByCheckGroup;\n    },\n    // 多选框标记勾选触发事件\n    checkboxGroup_onChange: function checkboxGroup_onChange(onCheck_Array) {\n      this.removeAllTextGraphicsLayer(); // 清除所有文本标注图层\n\n      this.addTextGraphicsLayerByCheckGroup(); // 根据多选框添加文字标注图层\n    },\n    // 添加文字标注图层\n    addTextGraphicsLayer: function addTextGraphicsLayer(options) {\n      var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个标注文本图层\n\n      textGraphicsLayer.textType = options.textType;\n      this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\n\n      var Rows = this.featrue.Rows; //创建textsymbol文本标注\n\n      if (Rows.length > 0) {\n        //动态读取json数据源结果集\n        for (var i = 0; i < Rows.length; i++) {\n          var Row = Rows[i];\n          var point = new esri.geometry.Point(Row.geometry.x, Row.geometry.y, new esri.SpatialReference({\n            wkid: 4326\n          })); //定义文本symbol\n\n          var textsymbol = new esri.symbol.TextSymbol(Row.rowinfo[options.textType]) //动态设置文本值\n          .setColor(new dojo.Color(options.color || [55, 55, 55])) //setColor设置文本颜色\n          .setFont(new esri.symbol.Font(options.fontSize || \"10pt\") //setFont设置文本大小\n          .setWeight(esri.symbol.Font.WEIGHT_BOLD)) //setWeight设置文本粗体\n          .setOffset(options.offset_x || 0, options.offset_y || -25); //设置偏移方向\n\n          var graphic = new esri.Graphic(point, textsymbol);\n          textGraphicsLayer.add(graphic);\n        }\n      }\n\n      this.TextGraphicsLayers.push(textGraphicsLayer);\n    },\n    // 根据多选框添加文字标注图层\n    addTextGraphicsLayerByCheckGroup: function addTextGraphicsLayerByCheckGroup() {\n      var _this6 = this;\n\n      var textTypeList;\n      var indexOfSocial = this.form.social.indexOf(\"site\"); // 如果多选框里存在 site站点类型\n\n      if (indexOfSocial !== -1) {\n        this.featrue.LayerObject.show();\n        this.featrue.LayerObject_yujing.show();\n        textTypeList = this.form.social.filter(function (val) {\n          if (val != \"site\") {\n            return true;\n          }\n        });\n      } else {\n        this.featrue.LayerObject.hide();\n        this.featrue.LayerObject_yujing.hide();\n        textTypeList = this.form.social;\n      }\n\n      textTypeList.forEach(function (textType, index) {\n        var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个图形图层\n\n        textGraphicsLayer.textType = textType;\n\n        _this6.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\n\n\n        var Rows = _this6.featrue.Rows; //创建textsymbol文本标注\n\n        if (Rows.length > 0) {\n          //动态读取json数据源结果集\n          for (var i = 0; i < Rows.length; i++) {\n            var Row = Rows[i];\n            var point = new esri.geometry.Point(Row.geometry.x, Row.geometry.y, new esri.SpatialReference({\n              wkid: 4326\n            }));\n            console.log(\"textType\", textType);\n            var value = Row.rowinfo[textType]; // 过滤\n\n            switch (textType) {\n              case \"vol\":\n                var value = \"\".concat(_this6.Z_Filter(Row.rowinfo[textType], 1));\n\n                if (value == \"\") {\n                  value = \"\";\n                } else {\n                  value += \"V\";\n                }\n\n                var color,\n                    vol = Row.rowinfo[textType]; // Row.rowinfo[textType]   [255, 0 , 0] : [55, 55, 55]\n\n                if (vol >= 12 && vol <= 16) {\n                  color = [55, 55, 55];\n                } else {\n                  color = [255, 0, 0];\n                } //定义文本symbol\n\n\n                var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\n                .setColor(new dojo.Color(color)) //setColor设置文本颜色\n                .setFont(new esri.symbol.Font(\"10pt\") //setFont设置文本大小\n                .setWeight(esri.symbol.Font.WEIGHT_BOLD)) //setWeight设置文本粗体\n                .setOffset(0, -(25 + index * 15)); //设置偏移方向\n\n                break;\n\n              case \"CS\":\n                var value = Row.rowinfo[textType];\n\n                if (value == \"\") {\n                  value = \"\";\n                } //定义文本symbol\n\n\n                var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\n                .setColor(new dojo.Color(Row.rowinfo.CS == \"异常\" ? [255, 0, 0] : [55, 55, 55])) //setColor设置文本颜色\n                .setFont(new esri.symbol.Font(\"10pt\") //setFont设置文本大小\n                .setWeight(esri.symbol.Font.WEIGHT_BOLD)) //setWeight设置文本粗体\n                .setOffset(0, -(25 + index * 15)); //设置偏移方向\n\n                break;\n\n              case \"STNM\":\n                var value = Row.rowinfo[textType];\n\n                if (value == \"\") {\n                  value = \"\";\n                } //定义文本symbol\n\n\n                var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\n                .setColor(new dojo.Color([55, 55, 55])) //setColor设置文本颜色\n                .setFont(new esri.symbol.Font(\"10pt\") //setFont设置文本大小\n                .setWeight(esri.symbol.Font.WEIGHT_BOLD)) //setWeight设置文本粗体\n                .setOffset(0, -(25 + index * 15)); //设置偏移方向\n\n                break;\n            }\n\n            var graphic = new esri.Graphic(point, textsymbol);\n            textGraphicsLayer.add(graphic);\n          }\n        }\n\n        _this6.TextGraphicsLayers.push(textGraphicsLayer);\n      });\n    },\n    // 移除文字标注图层\n    removeTextGraphicsLayer: function removeTextGraphicsLayer(textType) {\n      // 找到对应的文字标注图层\n      console.log(textType);\n\n      for (var i = 0; i < this.TextGraphicsLayers.length; i++) {\n        var val = this.TextGraphicsLayers[i];\n\n        if (val.textType == textType) {\n          this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\n          // val.hide();\n\n          this.TextGraphicsLayers.splice(i, 1); // 从文字标注图层数组里去除对应的文字图层对象\n        }\n      }\n    },\n    // 移除所有文字标注图层\n    removeAllTextGraphicsLayer: function removeAllTextGraphicsLayer() {\n      for (var i = 0; i < this.TextGraphicsLayers.length; i++) {\n        var val = this.TextGraphicsLayers[i];\n        this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\n      }\n\n      this.TextGraphicsLayers = [];\n    },\n    // 初始化baseBox\n    baseBox_init: function baseBox_init() {\n      var _this7 = this;\n\n      // 获取地图对象,从父组件中\n      this.getMapFormParent(); // 获取图层对象,从父组件中\n\n      this.getJsonFlayerFormParent(); // 选取一部分从父组件传来的数据,将其加载为表格数据\n\n      this.loadTableData(this.getTableDataFormParent()); // 过滤table数据\n\n      this.filterTableData(); // 给图层对象添加方法\n\n      this.addEventToJsonFlayer(this.JsonFlayer); // 获取行政区划数据,然后设置地址选择框选项\n\n      this.getTableData_WRP_AD_B(function (data) {\n        _this7.form.adressList = data; // data.map(val => {\n        //   var newVal = new Object();\n        //   newVal.value = val.AD_CD;\n        //   newVal.label = val.AD_NM;\n        //   return newVal;\n        // });\n      }); // 获取输排水渠道数据,然后设置渠道选择框选项\n\n      this.getTableData_WRP_IrrBTCanalSystem(function (data) {\n        _this7.form.qudaoList = data; // data.map(val => {\n        //   var newVal = new Object();\n        //   newVal.value = val.Canal_Code;\n        //   newVal.label = val.Canal_Name;\n        //   return newVal;\n        // });\n      }); // 多选框标记勾选触发事件\n      // 1.清除所有文本标注图层\n      // 2.根据多选框添加文字标注图层\n\n      this.checkboxGroup_onChange(); // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\n\n      this.addTextGraphicsLayerControllerToFeatrue();\n    },\n    // 排序\n    sort_change: function sort_change(item) {\n      var order = item.order,\n          key = item.prop;\n      this.filterTableData();\n      var newList;\n\n      if (order) {\n        switch (order) {\n          case \"descending\":\n            if (key == \"TM\") {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                var aTime = new Date(\"20\".concat(a.TM)).getTime(),\n                    bTime = new Date(\"20\".concat(b.TM)).getTime();\n                aTime = isNaN(aTime) ? 0 : aTime;\n                bTime = isNaN(bTime) ? 0 : bTime;\n                return bTime - aTime;\n              });\n            } else if (key == \"CS\") {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                var a_cs = a[\"CS\"] == \"正常\" ? 1 : 0,\n                    b_cs = b[\"CS\"] == \"正常\" ? 1 : 0;\n                return b_cs - a_cs;\n              });\n            } else {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                return Number(b[key]) - Number(a[key]);\n              });\n            }\n\n            break;\n\n          case \"ascending\":\n            if (key == \"TM\") {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                var aTime = new Date(\"20\".concat(a.TM)).getTime(),\n                    bTime = new Date(\"20\".concat(b.TM)).getTime();\n                aTime = isNaN(aTime) ? 0 : aTime;\n                bTime = isNaN(bTime) ? 0 : bTime;\n                return aTime - bTime;\n              });\n            } else if (key == \"CS\") {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                var a_cs = a[\"CS\"] == \"正常\" ? 1 : 0,\n                    b_cs = b[\"CS\"] == \"正常\" ? 1 : 0;\n                return a_cs - b_cs;\n              });\n            } else {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                return Number(a[key]) - Number(b[key]);\n              });\n            }\n\n        }\n\n        this.table.Rows_filter = newList;\n      }\n\n      this.$TableMethods.refreshCurrentChange(this.table, 1);\n    }\n  },\n  created: function created() {\n    var _this8 = this;\n\n    // 初始化baseBox\n    this.baseBox_init();\n    this.search();\n    this.baseBox_Interval = setInterval(function () {\n      _this8.search();\n    }, 1000 * 60 * 5);\n  },\n  destroyed: function destroyed() {\n    clearInterval(this.baseBox_Interval);\n  }\n};",{"version":3,"sources":["BaseBox-yunxinggongkuang.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"baseBoxContent\">\r\n    <!-- 折叠面板 -->\r\n    <Collapse active-key=\"1\">\r\n      <Panel key=\"1\">\r\n        查询\r\n        <div slot=\"content\">\r\n          <!-- 表单, 用于搜索查询 -->\r\n          <div class=\"form\">\r\n            <!-- 选择器, 按钮 -->\r\n            <Row class=\"select-group\" :gutter=\"16\">\r\n              <Col span=\"8\">\r\n                <!-- 地址级联选择器 -->\r\n                <el-cascader\r\n                  clearable\r\n                  filterable\r\n                  size=\"mini\"\r\n                  placeholder=\"地址\"\r\n                  change-on-select\r\n                  :options=\"form.adressList\"\r\n                  v-model=\"form.model_adress\"\r\n                  @change=\"search\"\r\n                ></el-cascader>\r\n                <!-- <Select\r\n                @on-change=\"search\"\r\n                clearable\r\n                filterable\r\n                v-model=\"form.model_adress\"\r\n                placeholder=\"乡镇\"\r\n                class=\"select-item\"\r\n                :transfer=\"true\"\r\n                size=\"small\"\r\n              >\r\n                <Option\r\n                  v-for=\"item in form.adressList\"\r\n                  :value=\"item.value\"\r\n                  :key=\"item.value\"\r\n                >{{ item.label }}</Option>\r\n                </Select>-->\r\n              </Col>\r\n              <Col span=\"8\">\r\n                <!-- 渠道级联选择器 -->\r\n                <el-cascader\r\n                  clearable\r\n                  filterable\r\n                  size=\"mini\"\r\n                  placeholder=\"请选择渠道\"\r\n                  :options=\"form.qudaoList\"\r\n                  v-model=\"form.model_qudao\"\r\n                  @change=\"search\"\r\n                  change-on-select\r\n                ></el-cascader>\r\n              </Col>\r\n              <Col span=\"8\">\r\n                <!-- 状态类型选择器 -->\r\n                <el-select\r\n                  @change=\"search\"\r\n                  clearable\r\n                  filterable\r\n                  class=\"select-item\"\r\n                  size=\"mini\"\r\n                  v-model=\"form.model_status\"\r\n                  popper-append-to-body\r\n                  placeholder=\"状态\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in form.statusList\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.value\"\r\n                  ></el-option>\r\n                </el-select>\r\n              </Col>\r\n            </Row>\r\n            <Row :gutter=\"16\">\r\n              <Col span=\"24\">\r\n                <Input\r\n                  search\r\n                  enter-button\r\n                  @on-search=\"search\"\r\n                  placeholder=\"请输入要搜索的站名\"\r\n                  size=\"small\"\r\n                  v-model.trim=\"form.search_str\"\r\n                >\r\n                  <!-- <Icon type=\"ios-search\" slot=\"suffix\"/> -->\r\n                </Input>\r\n              </Col>\r\n            </Row>\r\n            <!-- 分割线 -->\r\n            <div class=\"divider\"></div>\r\n            <!-- 多选框 -->\r\n            <Row :gutter=\"16\" type=\"flex\" justify=\"center\" align=\"middle\">\r\n              <Col span=\"4\" style=\"text-align:center;\">\r\n                <span style=\"letter-spacing:5px\">标记:</span>\r\n              </Col>\r\n              <Col span=\"20\">\r\n                <CheckboxGroup\r\n                  @on-change=\"checkboxGroup_onChange\"\r\n                  v-model=\"form.social\"\r\n                  class=\"checkBox-group\"\r\n                  style=\"height:22px\"\r\n                >\r\n                  <Checkbox\r\n                    v-for=\"item in form.checkBoxList\"\r\n                    :label=\"item.value\"\r\n                    :size=\"item.size\"\r\n                    class=\"checkBoxItem\"\r\n                  >\r\n                    <span>{{ item.title }}</span>\r\n                  </Checkbox>\r\n                </CheckboxGroup>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </Panel>\r\n    </Collapse>\r\n\r\n    <!-- 表格, 用于展示数据 -->\r\n    <div>\r\n      <el-table\r\n        size=\"small\"\r\n        @cell-click=\"cellClick\"\r\n        :data=\"pageFilter()\"\r\n        border\r\n        style=\"width: 100%\"\r\n        :height=\"table.height\"\r\n        v-loading=\"table.loading\"\r\n        empty-text=\"暂无站点数据\"\r\n        @sort-change=\"sort_change\"\r\n      >\r\n        <el-table-column\r\n          v-for=\"item in table.columns\"\r\n          :prop=\"item.key\"\r\n          :align=\"item.align\"\r\n          :label=\"item.title\"\r\n          :width=\"item.width\"\r\n          :fixed=\"item.fixed\"\r\n          :sortable=\"item.sortable\"\r\n          :show-overflow-tooltip=\"true\"\r\n        ></el-table-column>\r\n        <!-- 自定义 -->\r\n        <el-table-column align=\"center\" label=\"电压(V)\" prop=\"vol\" :width=\"120\" sortable=\"custom\">\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <span\r\n                :style=\"{\r\n              color: scope.row.vol < 12 || scope.row.vol > 16 ? 'red' : 'black'\r\n            }\"\r\n              >{{ scope.row.vol}}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column align=\"center\" label=\"通讯状态\" prop=\"CS\" :width=\"120\" sortable=\"custom\">\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <span\r\n                :style=\"{\r\n              color: scope.row.CS == '异常'? 'red' : 'black'\r\n            }\"\r\n              >{{ scope.row.CS }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分割线 -->\r\n      <!-- <Divider/> -->\r\n      <div class=\"divider\"></div>\r\n      <!-- 分页器 -->\r\n      <el-pagination\r\n        background\r\n        :page-size=\"table.pageSizes\"\r\n        layout=\"total, prev, pager, next, jumper, sizes\"\r\n        :page-sizes=\"[20, 50, 100, 200]\"\r\n        :total=\"table.Rows.length\"\r\n        :pager-count=\"5\"\r\n        :current-page=\"table.currentPage\"\r\n        @current-change=\"handleCurrentChange\"\r\n        @size-change=\"handleSizeChange\"\r\n        class=\"pageController\"\r\n        small\r\n      ></el-pagination>\r\n    </div>\r\n    <!-- 提示框 -->\r\n    <!-- <div ref=\"tip\" style=\"display:none;\"> -->\r\n    <!-- 闸阀状态 -->\r\n    <!-- <TipsYUNXINGGONGKUANG @chart=\"chart\" :info=\"tip.info_tip\" v-if=\"tip.show_tip\"></TipsYUNXINGGONGKUANG> -->\r\n    <!-- </div> -->\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport TipsYUNXINGGONGKUANG from \"@/components/BaseBox/Tips/Tips-yunxinggongkuang.vue\";\r\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\";\r\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\r\nexport default {\r\n  props: {\r\n    featrue: {\r\n      type: Object\r\n    },\r\n    search_FeatrueLayer: {\r\n      type: Function\r\n    }\r\n  },\r\n  components: {\r\n    TipsYUNXINGGONGKUANG\r\n  },\r\n  data() {\r\n    return {\r\n      // 折叠面板对象\r\n      collapse: {\r\n        activeName: \"\",\r\n        list: []\r\n      },\r\n      // 地图对象\r\n      map: null,\r\n\r\n      // 该图层对象\r\n      JsonFlayer: null,\r\n      // 文字标注图层\r\n      TextGraphicsLayers: [],\r\n      // 提示 展示\r\n      tip: {\r\n        info_tip: null,\r\n        show_tip: false\r\n      },\r\n      // 表单数据\r\n      form: {\r\n        // 搜索框\r\n        search_str: \"\",\r\n        // 地址选择列表\r\n        adressList: [],\r\n        // 渠道选择列表\r\n        qudaoList: [],\r\n        social: [\"site\"],\r\n        // 状态选择列表\r\n        statusList: [\r\n          {\r\n            value: 1,\r\n            label: \"正常\"\r\n          },\r\n          {\r\n            value: 2,\r\n            label: \"异常\"\r\n          },\r\n          {\r\n            value: 3,\r\n            label: \"电压异常\"\r\n          },\r\n          {\r\n            value: 4,\r\n            label: \"通讯异常\"\r\n          }\r\n        ],\r\n        // 多选框列表\r\n        checkBoxList: [\r\n          {\r\n            value: \"site\",\r\n            size: \"small\",\r\n            span: 5,\r\n            // iconType: \"logo-facebook\",\r\n            title: \"站点\"\r\n          },\r\n          {\r\n            value: \"STNM\",\r\n            size: \"small\",\r\n            span: 6,\r\n            // iconType: \"logo-facebook\",\r\n            title: \"站名\"\r\n          },\r\n          {\r\n            value: \"vol\",\r\n            size: \"small\",\r\n            span: 6,\r\n            // iconType: \"logo-facebook\",\r\n            title: \"电压值\"\r\n          },\r\n          {\r\n            value: \"CS\",\r\n            size: \"small\",\r\n            span: 7,\r\n            // iconType: \"logo-facebook\",\r\n            title: \"通讯状态\"\r\n          }\r\n        ],\r\n        // 地址选择\r\n        model_adress: \"\",\r\n        // 渠道\r\n        model_qudao: \"\",\r\n        // 状态\r\n        model_status: \"\"\r\n      },\r\n      // 表格数据\r\n      table: {\r\n        // 表头设置\r\n        columns: [\r\n          {\r\n            title: \"\",\r\n            key: \"index\",\r\n            width: 45,\r\n            align: \"center\",\r\n            fixed: \"left\"\r\n          },\r\n          {\r\n            title: \"站名\",\r\n            key: \"STNM\",\r\n            width: 120,\r\n            align: \"center\",\r\n            fixed: \"left\",\r\n            sortable: \"custom\"\r\n          },\r\n          {\r\n            title: \"时间\",\r\n            key: \"tm\",\r\n            width: 120,\r\n            align: \"center\",\r\n            sortable: \"custom\"\r\n          },\r\n          // {\r\n          //   title: \"电压\",\r\n          //   key: \"vol\",\r\n          //   width: 100,\r\n          //   align: \"center\",\r\n          //   sortable: \"custom\"\r\n          // }\r\n        ],\r\n        // 表体内容\r\n        Rows: [],\r\n        // 表格是否加载中\r\n        loading: false,\r\n        // 当前页\r\n        currentPage: 1,\r\n        // 每页显示数量\r\n        pageSizes: 20,\r\n        // 表体高度\r\n        height: 300\r\n      }\r\n    };\r\n  },\r\n  // 引入过滤方法到此组件\r\n  mixins: [FilterMethods, GetDataMethods],\r\n  methods: {\r\n    // 表格每一行点击事件\r\n    cellClick(item) {\r\n      var evt = new Object();\r\n      evt.graphic = new Object();\r\n      evt.graphic.attributes = item;\r\n      evt.graphic.attributes.rowinfo = item;\r\n      var v = new Object();\r\n      v.itype = \"yunxinggongkuang\";\r\n\r\n        console.log(item);\r\n\r\n        // 设置中心缩放\r\n      this.setMapCenterandZoom(item.LGTD, item.LTTD);\r\n      // 取消所有站点的闪烁\r\n      this.$App.GraphicsLayer_Selection_clear();\r\n      // 对应站点闪烁\r\n      this.$App.add_Graphic_To_GraphicsLayer_Selection(item);\r\n      // 展示抽屉详情框\r\n      this.$App.showDrawer(evt, v);\r\n    },\r\n    // 展示提示框\r\n    showTips(item) {\r\n      // 隐藏之前提示框\r\n      this.hideTips();\r\n      // 延时200毫秒\r\n      setTimeout(() => {\r\n        var div = `<div>\r\n        <div class=\"tip_row\">\r\n                <span class=\"tip_col_5\">时间：</span>\r\n                <span class=\"tip_col_7\">${item.rowinfo.tm}</span>\r\n                <span class=\"tip_col_5\">通讯状态：</span>\r\n                <span class=\"tip_col_7\">${\r\n                  item.rowinfo.CS}</span>\r\n                <span class=\"tip_col_5\">电压：</span>\r\n                <span class=\"tip_col_7\">${this.$FilterData.Float_Filter(\r\n                  item.rowinfo.vol,1\r\n                )} v</span>\r\n              </div>\r\n              <div class=\"divider\"></div>\r\n              <div class=\"tip_row\">\r\n                <span class=\"tip_col_5\">电压范围：</span>\r\n                <span class=\"tip_col_7\" id=\"${item.STCD}_VOLMAX_VOLMIN\">\r\n                </span>\r\n                <span class=\"tip_col_5\">站址：</span>\r\n                <span class=\"tip_col_7\">\r\n                ${item.rowinfo.STLC}\r\n                </span>\r\n              </div>\r\n              <div class=\"divider\"></div>\r\n        <div id=\"${\r\n          item.STCD\r\n        }\" style=\"width: 550px;height:290px;margin:auto\"></div>\r\n      </div>`;\r\n        this.map.infoWindow.resize(570, 650); // 提示框大小\r\n        this.map.infoWindow.setTitle(item.STNM); // 提示题目\r\n        this.map.infoWindow.setContent(div); // 提示内容\r\n\r\n\r\n                //获取坐标\r\n                var x=Number(item.LGTD);\r\n                var y=Number(item.LTTD);\r\n\r\n\r\n                //如果basemap使用ArcGIS的就需要\r\n                //转换坐标系\r\n                x = (x / 180.0) * 20037508.34\r\n                if (y > 85.05112) y = 85.05112;\r\n                if (y < -85.05112) y = -85.05112;\r\n                y = (Math.PI / 180.0) * y;\r\n                var tmp = Math.PI / 4.0 + y / 2.0;\r\n                y = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI;\r\n\r\n                //位置点对象\r\n                var zoompoint = {\r\n                    //spatialReference: {wkid: 4326},\r\n                    spatialReference: this.map.spatialReference,\r\n                    x: x,\r\n                    y: y\r\n                };\r\n\r\n\r\n        this.map.infoWindow.show(zoompoint); // 提示位置\r\n        // 如果事件类型不是鼠标经过，则\r\n        if (item.eventType != \"mouse-over\") {\r\n          // 设置中心和缩放 (接受经纬度，和缩放比例)\r\n          this.setMapCenterandZoom(Number(item.LGTD) + 0.1, item.LTTD);\r\n        }\r\n        var body = {\r\n          STCD: item.STCD,\r\n          _page_size: 999999\r\n        };\r\n\r\n          body.STCD = item.STCD;\r\n          delete body.TM;\r\n          delete body._page_size;\r\n\r\n          // 正常电压范围\r\n          this.$GetData.Survey_Around_YXGK(null,body,false,data => {\r\n\r\n              const around = document.getElementById(`${item.STCD}_VOLMAX_VOLMIN`)\r\n              let dataVol = data.data[0],\r\n                  volMin = dataVol.VOLMIN,\r\n                  volMax = dataVol.VOLMAX\r\n              around.innerHTML = `${volMin}v - ${volMax}v`\r\n          })\r\n        let obj = JSON.parse(JSON.stringify(body))\r\n\r\n        let setDate = (dateType) => {\r\n          let oDate = new Date();\r\n          console.log(oDate);\r\n          let YY = oDate.getFullYear();\r\n          let MM = (oDate.getMonth() + 1) < 10? `0${(oDate.getMonth() + 1)}`: (oDate.getMonth() + 1);\r\n          let DD = oDate.getDate() < 10? `0${oDate.getDate()}` : oDate.getDate();\r\n          let HH = oDate.getHours() < 10? `0${oDate.getHours()}` : oDate.getHours();\r\n          let mm = oDate.getMinutes() < 10? `0${oDate.getMinutes()}` : oDate.getHours();\r\n          let SS = oDate.getSeconds() < 10? `0${oDate.getSeconds()}` : oDate.getSeconds();\r\n\r\n          if(dateType === 'now'){\r\n            return `${YY}-${MM}-${DD} ${HH}:${mm}:${SS}`\r\n          }else {\r\n            return `${YY}-${MM}-${DD} 00:00:00`\r\n          }\r\n\r\n        };\r\n\r\n        obj.Time_max = setDate('now');\r\n        obj.Time_min = setDate('0');\r\n        console.log(obj);\r\n        setDate(null)\r\n        this.$GetData.Survey_History_YXGK(\r\n          \"historyTable\",\r\n          obj,\r\n          {\r\n            default: true\r\n          },\r\n          data => {\r\n            this.createChart_zhuangtaishuju(\r\n              item.STCD,\r\n              \"zhuangtaishuju\",\r\n              data.data\r\n            );\r\n            // this.$GetData.Survey_History_YXGK(\r\n            //   \"auxiliaryTable\",\r\n            //   {\r\n            //     VOLTYPE: data.data[0].VOLTYPE\r\n            //   },\r\n            //   {\r\n            //     default: true\r\n            //   },\r\n            //   data => {\r\n            //     var data = data.data[0];\r\n            //     if (data) {\r\n            //       var div = document.getElementById(\r\n            //         `${item.STCD}_VOLMAX_VOLMIN`\r\n            //       );\r\n\r\n            //       var VOLMAX_VOLMIN = `${data.VOLMIN} ~ ${data.VOLMAX}`;\r\n\r\n            //       div.innerHTML = `<span>${VOLMAX_VOLMIN}</span>`;\r\n            //     }\r\n            //   }\r\n            // );\r\n          }\r\n        );\r\n      }, 200);\r\n\r\n    },\r\n    // 制图\r\n    createChart_zhuangtaishuju(id, tableType, data) {\r\n      var ele = document.getElementById(id);\r\n\r\n      if (data.length > 0) {\r\n        var echartData = this.$App.transform_YXGK_data_into_ehart_data(\r\n          data,\r\n          tableType\r\n        ); // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n\r\n        var myChart = this.$echarts.init(ele);\r\n\r\n        myChart.setOption({\r\n          title: {\r\n            text: echartData.chartName\r\n          },\r\n          grid: {\r\n            x: '20%'\r\n          },\r\n          tooltip: {\r\n            trigger: \"axis\"\r\n          },\r\n          // legend: {\r\n          //   data: [echartData.y1.name],\r\n          //   y: \"bottom\"\r\n          // },\r\n          calculable: true,\r\n          animation: false,\r\n          xAxis: [\r\n            {\r\n              type: \"category\",\r\n              boundaryGap: false,\r\n              data: echartData.x.list,\r\n              axisLabel: {\r\n                rotate: 15,\r\n              },\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              name: `${echartData.y1.name} V`,\r\n              type: \"value\",\r\n              axisLabel: {\r\n                formatter: \"{value} \"\r\n              },\r\n              max: echartData.y1.max,\r\n              min: echartData.y1.min\r\n            }\r\n          ],\r\n            axis: {\r\n                axisLabel: {\r\n                    interval: 'auto'\r\n                },\r\n                axisTick: {\r\n                    interval: 'auto'\r\n                }\r\n            },\r\n          series: [\r\n            {\r\n              name: echartData.y1.name,\r\n              type: \"line\",\r\n              data: echartData.y1.list\r\n            }\r\n          ]\r\n        });\r\n      } else {\r\n        ele.style.display = \"flex\";\r\n        ele.style.alignItems = \"center\";\r\n        ele.style.justifyContent = \"center\";\r\n        ele.innerHTML = \"暂无今天数据\";\r\n      }\r\n    },\r\n\r\n\r\n    // 设置中心和缩放 (接受经纬度，和缩放比例)\r\n    setMapCenterandZoom(LGTD, LTTD, Zoom) {\r\n      //koen 20190929\r\n      //暂时不允许点击，防止缩到全球地图的bug\r\n      //this.map.centerAndZoom([Number(LGTD), Number(LTTD)], Zoom || 1);\r\n    },\r\n    // 隐藏提示\r\n    hideTips() {\r\n      this.map.infoWindow.hide();\r\n      this.tip.show_tip = false; // 关闭提示框组件\r\n    },\r\n    // 表格加载\r\n    tableLoading() {\r\n      this.table.loading = true;\r\n    },\r\n    // 表格加载取消\r\n    cancelTableLoading() {\r\n      this.table.loading = false;\r\n    },\r\n    // 加载表格数据\r\n    loadTableData(data) {\r\n      // 加载站点数据\r\n      this.table.Rows = data;\r\n    },\r\n    getDataFromEnd(url, callback) {\r\n      // 获取表格数据 `/guanqu/gis/details?ID=${this.info.ID}`\r\n      this.axios.get(url).then(res => {\r\n        if (typeof callback == \"function\") {\r\n          callback(res);\r\n        }\r\n      });\r\n    },\r\n    // 查询\r\n    search() {\r\n      var body = new Object();\r\n      // 如果输入框有内容，添加站名过滤字段\r\n      if (this.form.search_str.length > 0) {\r\n        body[\"STNM\"] = `${this.form.search_str}`;\r\n      }\r\n      // 如果地址选择框有内容，添加行政区划过滤字段\r\n      if (this.form.model_adress && this.form.model_adress.length != 0) {\r\n        body[\"ADDVCD\"] = `${this.$App.ADDVCD_Array_Filter(\r\n          this.form.model_adress\r\n        )}`;\r\n      }\r\n      // 如果渠道选择框有内容，添加渠道过滤字段\r\n      if (this.form.model_qudao && this.form.model_qudao.length != 0) {\r\n        body[\"Canal_Code\"] = `${this.$App.Canal_Code_Array_Filter(\r\n          this.form.model_qudao\r\n        )}`;\r\n      }\r\n\r\n      if (this.form.model_status && this.form.model_status.length != 0) {\r\n        body[\"_stat\"] = this.form.model_status;\r\n      }\r\n\r\n      this.tableLoading(); // 表格加载中\r\n      this.search_FeatrueLayer(\r\n        // 9, // 图层type类型\r\n        \"yunxinggongkuang\", // 图层type类型\r\n        body,\r\n        this.featrue,\r\n        newFeatureLayerOBJ => {\r\n          this.table.currentPage = 1;\r\n          this.baseBox_init();\r\n          this.cancelTableLoading(); //取消表格加载\r\n          this.hideTips();\r\n        }\r\n      );\r\n    },\r\n    // 给图层对象添加方法\r\n    addEventToJsonFlayer(JsonFlayer) {\r\n      //当鼠标悬停在元素上\r\n      JsonFlayer.on(\"mouse-over\", evt => {\r\n        var attributes = evt.graphic.attributes;\r\n        attributes.eventType = \"mouse-over\";\r\n        this.showTips(attributes);\r\n        // 给地图对象添加方法\r\n        this.addEventToMap();\r\n      });\r\n\r\n      //当鼠标悬停在元素上\r\n      JsonFlayer.on(\"mouse-out\", evt => {\r\n        this.hideTips();\r\n      });\r\n    },\r\n    // 给地图对象添加方法\r\n    addEventToMap() {\r\n      this.map.on(\"click\", () => {\r\n        // 隐藏提示\r\n        this.hideTips();\r\n      });\r\n    },\r\n    // 处理页码切换\r\n    handleCurrentChange(index) {\r\n      this.table.currentPage = index;\r\n    },\r\n    // 处理每页显示条数切换\r\n    handleSizeChange(pageSizes) {\r\n      this.table.pageSizes = pageSizes;\r\n      this.table.currentPage = 1;\r\n    },\r\n    // 分页过滤\r\n    pageFilter(currentPage, pageSizes) {\r\n      var _currentPage = currentPage || this.table.currentPage;\r\n      var _pageSizes = pageSizes || this.table.pageSizes;\r\n      if (this.table.Rows_filter.length != 0) {\r\n        // 截取数组\r\n        var newList = this.table.Rows_filter.slice(\r\n          (_currentPage - 1) * _pageSizes,\r\n          _currentPage * _pageSizes\r\n        );\r\n\r\n        return newList;\r\n      } else {\r\n        return [];\r\n      }\r\n    },\r\n    // 过滤table数据\r\n    filterTableData() {\r\n      this.table.Rows_filter = this.table.Rows.map((val, index) => {\r\n        var val_clone = JSON.parse(JSON.stringify(val));\r\n        // 序号\r\n        val_clone.index = index + 1;\r\n        // 时间过滤\r\n        val_clone.TM = this.dateFilter(val_clone.TM);\r\n        // 测报电压过滤\r\n        val_clone.vol = this.$FilterData.Float_Filter(val_clone.vol,1 );\r\n        // 测报通讯状态过滤\r\n        // val_clone.CS = this.CS_Filter(val_clone.CS);\r\n        return val_clone;\r\n      });\r\n    },\r\n    // 选取一部分从父组件传来的数据作为表格的数据\r\n    getTableDataFormParent() {\r\n      var tableData = this.featrue.Rows.map(val => {\r\n        return val.rowinfo;\r\n      });\r\n\r\n      return tableData;\r\n    },\r\n    // 获取图层对象,从父组件中\r\n    getJsonFlayerFormParent() {\r\n      this.JsonFlayer = this.featrue.LayerObject;\r\n    },\r\n    // 获取地图对象,从父组件中\r\n    getMapFormParent() {\r\n      this.map = this.featrue.map;\r\n    },\r\n    // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\r\n    addTextGraphicsLayerControllerToFeatrue() {\r\n      this.featrue.TextGraphicsLayerController = new Object();\r\n      this.featrue.TextGraphicsLayerController.removeAllTextGraphicsLayer = this.removeAllTextGraphicsLayer;\r\n      this.featrue.TextGraphicsLayerController.addTextGraphicsLayerByCheckGroup = this.addTextGraphicsLayerByCheckGroup;\r\n    },\r\n    // 多选框标记勾选触发事件\r\n    checkboxGroup_onChange(onCheck_Array) {\r\n      this.removeAllTextGraphicsLayer(); // 清除所有文本标注图层\r\n      this.addTextGraphicsLayerByCheckGroup(); // 根据多选框添加文字标注图层\r\n    },\r\n    // 添加文字标注图层\r\n    addTextGraphicsLayer(options) {\r\n      var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个标注文本图层\r\n      textGraphicsLayer.textType = options.textType;\r\n      this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\r\n      var Rows = this.featrue.Rows;\r\n      //创建textsymbol文本标注\r\n      if (Rows.length > 0) {\r\n        //动态读取json数据源结果集\r\n        for (var i = 0; i < Rows.length; i++) {\r\n          var Row = Rows[i];\r\n          var point = new esri.geometry.Point(\r\n            Row.geometry.x,\r\n            Row.geometry.y,\r\n            new esri.SpatialReference({ wkid: 4326 })\r\n          );\r\n          //定义文本symbol\r\n          var textsymbol = new esri.symbol.TextSymbol(\r\n            Row.rowinfo[options.textType]\r\n          ) //动态设置文本值\r\n            .setColor(new dojo.Color(options.color || [55, 55, 55])) //setColor设置文本颜色\r\n            .setFont(\r\n              new esri.symbol.Font(options.fontSize || \"10pt\") //setFont设置文本大小\r\n                .setWeight(esri.symbol.Font.WEIGHT_BOLD)\r\n            ) //setWeight设置文本粗体\r\n            .setOffset(options.offset_x || 0, options.offset_y || -25); //设置偏移方向\r\n          var graphic = new esri.Graphic(point, textsymbol);\r\n          textGraphicsLayer.add(graphic);\r\n        }\r\n      }\r\n      this.TextGraphicsLayers.push(textGraphicsLayer);\r\n    },\r\n    // 根据多选框添加文字标注图层\r\n    addTextGraphicsLayerByCheckGroup() {\r\n      var textTypeList;\r\n      var indexOfSocial = this.form.social.indexOf(\"site\");\r\n      // 如果多选框里存在 site站点类型\r\n      if (indexOfSocial !== -1) {\r\n        this.featrue.LayerObject.show();\r\n        this.featrue.LayerObject_yujing.show();\r\n        textTypeList = this.form.social.filter(val => {\r\n          if (val != \"site\") {\r\n            return true;\r\n          }\r\n        });\r\n      } else {\r\n        this.featrue.LayerObject.hide();\r\n        this.featrue.LayerObject_yujing.hide();\r\n        textTypeList = this.form.social;\r\n      }\r\n\r\n      textTypeList.forEach((textType, index) => {\r\n        var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个图形图层\r\n        textGraphicsLayer.textType = textType;\r\n        this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\r\n        var Rows = this.featrue.Rows;\r\n        //创建textsymbol文本标注\r\n        if (Rows.length > 0) {\r\n          //动态读取json数据源结果集\r\n          for (var i = 0; i < Rows.length; i++) {\r\n            var Row = Rows[i];\r\n            var point = new esri.geometry.Point(\r\n              Row.geometry.x,\r\n              Row.geometry.y,\r\n              new esri.SpatialReference({ wkid: 4326 })\r\n            );\r\n            console.log(\"textType\",textType)\r\n\r\n            var value = Row.rowinfo[textType];\r\n            // 过滤\r\n            switch (textType) {\r\n              case \"vol\":\r\n                var value = `${this.Z_Filter(Row.rowinfo[textType],1)}`;\r\n                if (value == \"\") {\r\n                  value = \"\";\r\n                } else {\r\n                  value += \"V\";\r\n                }\r\n                var color, vol = Row.rowinfo[textType];     // Row.rowinfo[textType]   [255, 0 , 0] : [55, 55, 55]\r\n                if (vol >= 12 && vol <= 16) {\r\n                  color = [55, 55, 55]\r\n                }else {\r\n                  color = [255, 0 , 0]\r\n                }\r\n\r\n                //定义文本symbol\r\n                var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\r\n                        .setColor(new dojo.Color(color)) //setColor设置文本颜色\r\n                        .setFont(\r\n                                new esri.symbol.Font(\"10pt\") //setFont设置文本大小\r\n                                        .setWeight(esri.symbol.Font.WEIGHT_BOLD)\r\n                        ) //setWeight设置文本粗体\r\n                        .setOffset(0, -(25 + index * 15)); //设置偏移方向\r\n\r\n                break;\r\n              case \"CS\":\r\n                var value = Row.rowinfo[textType];\r\n                if (value == \"\") {\r\n                  value = \"\";\r\n                }\r\n\r\n                //定义文本symbol\r\n                var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\r\n                        .setColor(new dojo.Color(Row.rowinfo.CS == \"异常\" ? [255, 0 , 0] : [55, 55, 55])) //setColor设置文本颜色\r\n                        .setFont(\r\n                                new esri.symbol.Font(\"10pt\") //setFont设置文本大小\r\n                                        .setWeight(esri.symbol.Font.WEIGHT_BOLD)\r\n                        ) //setWeight设置文本粗体\r\n                        .setOffset(0, -(25 + index * 15)); //设置偏移方向\r\n                break;\r\n              case \"STNM\":\r\n                var value = Row.rowinfo[textType];\r\n                if (value == \"\") {\r\n                  value = \"\";\r\n                }\r\n\r\n                //定义文本symbol\r\n                var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\r\n                        .setColor(new dojo.Color([55, 55, 55])) //setColor设置文本颜色\r\n                        .setFont(\r\n                                new esri.symbol.Font(\"10pt\") //setFont设置文本大小\r\n                                        .setWeight(esri.symbol.Font.WEIGHT_BOLD)\r\n                        ) //setWeight设置文本粗体\r\n                        .setOffset(0, -(25 + index * 15)); //设置偏移方向\r\n                break;\r\n            }\r\n\r\n\r\n            var graphic = new esri.Graphic(point, textsymbol);\r\n            textGraphicsLayer.add(graphic);\r\n          }\r\n        }\r\n        this.TextGraphicsLayers.push(textGraphicsLayer);\r\n      });\r\n    },\r\n    // 移除文字标注图层\r\n    removeTextGraphicsLayer(textType) {\r\n      // 找到对应的文字标注图层\r\n      console.log(textType);\r\n      for (let i = 0; i < this.TextGraphicsLayers.length; i++) {\r\n        var val = this.TextGraphicsLayers[i];\r\n        if (val.textType == textType) {\r\n          this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\r\n          // val.hide();\r\n          this.TextGraphicsLayers.splice(i, 1); // 从文字标注图层数组里去除对应的文字图层对象\r\n        }\r\n      }\r\n    },\r\n    // 移除所有文字标注图层\r\n    removeAllTextGraphicsLayer() {\r\n      for (let i = 0; i < this.TextGraphicsLayers.length; i++) {\r\n        var val = this.TextGraphicsLayers[i];\r\n        this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\r\n      }\r\n      this.TextGraphicsLayers = [];\r\n    },\r\n    // 初始化baseBox\r\n    baseBox_init() {\r\n      // 获取地图对象,从父组件中\r\n      this.getMapFormParent();\r\n      // 获取图层对象,从父组件中\r\n      this.getJsonFlayerFormParent();\r\n      // 选取一部分从父组件传来的数据,将其加载为表格数据\r\n      this.loadTableData(this.getTableDataFormParent());\r\n      // 过滤table数据\r\n      this.filterTableData();\r\n      // 给图层对象添加方法\r\n      this.addEventToJsonFlayer(this.JsonFlayer);\r\n\r\n      // 获取行政区划数据,然后设置地址选择框选项\r\n      this.getTableData_WRP_AD_B(data => {\r\n        this.form.adressList = data;\r\n        // data.map(val => {\r\n        //   var newVal = new Object();\r\n        //   newVal.value = val.AD_CD;\r\n        //   newVal.label = val.AD_NM;\r\n        //   return newVal;\r\n        // });\r\n      });\r\n\r\n      // 获取输排水渠道数据,然后设置渠道选择框选项\r\n      this.getTableData_WRP_IrrBTCanalSystem(data => {\r\n        this.form.qudaoList = data;\r\n        // data.map(val => {\r\n        //   var newVal = new Object();\r\n        //   newVal.value = val.Canal_Code;\r\n        //   newVal.label = val.Canal_Name;\r\n        //   return newVal;\r\n        // });\r\n      });\r\n\r\n      // 多选框标记勾选触发事件\r\n      // 1.清除所有文本标注图层\r\n      // 2.根据多选框添加文字标注图层\r\n      this.checkboxGroup_onChange();\r\n      // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\r\n      this.addTextGraphicsLayerControllerToFeatrue();\r\n    },\r\n    // 排序\r\n    sort_change(item) {\r\n      var order = item.order,\r\n        key = item.prop;\r\n\r\n      this.filterTableData();\r\n      var newList;\r\n      if (order) {\r\n        switch (order) {\r\n          case \"descending\":\r\n            if (key == \"TM\") {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                var aTime = new Date(`20${a.TM}`).getTime(),\r\n                  bTime = new Date(`20${b.TM}`).getTime();\r\n                aTime = isNaN(aTime) ? 0 : aTime;\r\n                bTime = isNaN(bTime) ? 0 : bTime;\r\n                return bTime - aTime;\r\n              });\r\n            } else if (key == \"CS\") {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                var a_cs = a[\"CS\"] == \"正常\" ? 1 : 0,\r\n                  b_cs = b[\"CS\"] == \"正常\" ? 1 : 0;\r\n                return b_cs - a_cs;\r\n              });\r\n            } else {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                return Number(b[key]) - Number(a[key]);\r\n              });\r\n            }\r\n            break;\r\n\r\n          case \"ascending\":\r\n            if (key == \"TM\") {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                var aTime = new Date(`20${a.TM}`).getTime(),\r\n                  bTime = new Date(`20${b.TM}`).getTime();\r\n                aTime = isNaN(aTime) ? 0 : aTime;\r\n                bTime = isNaN(bTime) ? 0 : bTime;\r\n                return aTime - bTime;\r\n              });\r\n            } else if (key == \"CS\") {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                var a_cs = a[\"CS\"] == \"正常\" ? 1 : 0,\r\n                  b_cs = b[\"CS\"] == \"正常\" ? 1 : 0;\r\n                return a_cs - b_cs;\r\n              });\r\n            } else {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                return Number(a[key]) - Number(b[key]);\r\n              });\r\n            }\r\n        }\r\n\r\n        this.table.Rows_filter = newList;\r\n      }\r\n      this.$TableMethods.refreshCurrentChange(this.table, 1);\r\n    }\r\n  },\r\n  created() {\r\n    // 初始化baseBox\r\n    this.baseBox_init();\r\n    this.search();\r\n    this.baseBox_Interval = setInterval(() => {\r\n      this.search();\r\n    },1000 * 60 * 5)\r\n  },\r\n  destroyed() {\r\n    clearInterval(this.baseBox_Interval)\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"less\" scope>\r\n/* 引入baseBox公共样式 */\r\n@import \"../../assets/commonLess/baseBox\";\r\n</style>\r\n"],"sourceRoot":"src/components/BaseBox"}]}