{"remainingRequest":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\visualplace\\zhihuiguanqu\\src\\components\\BaseBox\\BaseBox-shipinzhan.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\src\\components\\BaseBox\\BaseBox-shipinzhan.vue","mtime":1667961056562},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\babel.config.js","mtime":1577669403468},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _JSON$stringify from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TipsSHIPINZHAN from \"@/components/BaseBox/Tips/Tips-shipinzhan.vue\";\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\"; // 过滤方法\n\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\nexport default {\n  props: {\n    featrue: {\n      type: Object\n    },\n    search_FeatrueLayer: {\n      type: Function\n    }\n  },\n  components: {\n    TipsSHIPINZHAN: TipsSHIPINZHAN\n  },\n  data: function data() {\n    return {\n      // 折叠面板对象\n      collapse: {\n        activeName: \"\",\n        list: []\n      },\n      // 地图对象\n      map: null,\n      // 该图层对象\n      JsonFlayer: null,\n      // 文字标注图层\n      TextGraphicsLayers: [],\n      // 提示 展示\n      tip: {\n        info_tip: null,\n        show_tip: false\n      },\n      // 表单数据\n      form: {\n        search_str: \"\",\n        adressList: [],\n        qudaoList: [],\n        social: [\"site\"],\n        checkBoxList: [{\n          value: \"site\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          title: \"站点\"\n        }, {\n          value: \"STNM\",\n          size: \"small\",\n          // iconType: \"logo-facebook\",\n          title: \"站名\"\n        }],\n        model_adress: [],\n        model_qudao: []\n      },\n      // 表格数据\n      table: {\n        // 表头设置\n        columns: [{\n          title: \"站名\",\n          key: \"STNM\",\n          width: 140,\n          fixed: \"left\",\n          sortable: \"custom\",\n          align: \"center\"\n        }, {\n          title: \"地址\",\n          key: \"STLC\",\n          align: \"center\"\n        }],\n        // 表体内容\n        Rows: [],\n        // 表格是否加载中\n        loading: false,\n        // 当前页\n        currentPage: 1,\n        // 每页显示数量\n        pageSizes: 20,\n        // 表体高度\n        height: 300\n      }\n    };\n  },\n  // 引入过滤方法到此组件\n  mixins: [FilterMethods, GetDataMethods],\n  methods: {\n    // 表格每一行点击事件\n    cellClick: function cellClick(item) {\n      var evt = new Object();\n      evt.graphic = new Object();\n      evt.graphic.attributes = item;\n      var v = new Object();\n      v.itype = \"shipin\"; // 设置中心缩放\n\n      this.setMapCenterandZoom(item.LGTD, item.LTTD); // 取消所有站点的闪烁\n\n      this.$App.GraphicsLayer_Selection_clear(); // 对应站点闪烁\n\n      this.$App.add_Graphic_To_GraphicsLayer_Selection(item); // 展示抽屉详情框\n\n      this.$App.showDrawer(evt, v);\n    },\n    // 展示提示框\n    showTips: function showTips(item) {\n      var _this = this;\n\n      // 隐藏之前提示框\n      this.hideTips(); // <div class=\"pd_algin\">\n      //       <span class=\"tip_col_5\">监测要素：</span>\n      //        <span class=\"tip_col_7\">\n      //        </span>\n      //   </div>\n      //   <div class=\"pd_algin mg_tp\">\n      //       <span class=\"tip_col_5\">关联站点：</span>\n      //       <span class=\"tip_col_7\">\n      //       </span>\n      //   </div>\n      // this.tip.show_tip = true; // 获取提示框组件\n      // this.tip.info_tip = item; // 传递数据给 提示框组件\n\n      console.log('悬浮框');\n      console.log(item);\n      var imgSrc = '';\n\n      if (item.rowinfo.picPath !== null) {\n        imgSrc = item.rowinfo.picPath.replace('r', '');\n      }\n\n      console.log(\"/guanqu/pic\".concat(imgSrc));\n      var content = \"<div>\\n        <div style=\\\"height: 20px\\\"></div>\\n        <div class=\\\"video\\\">\\n          <img src=\\\"http://222.240.238.58:7001/pic\".concat(imgSrc, \"\\\"   width=\\\"210\\\" height=\\\"160\\\"/>\\n        </div>\\n      </div>\"); // 延时200毫秒\n\n      setTimeout(function () {\n        _this.map.infoWindow.resize(250, 650); // 提示框大小\n\n\n        _this.map.infoWindow.setTitle(item.STNM); // 提示题目\n\n\n        _this.map.infoWindow.setContent(content); // 提示内容\n        //获取坐标\n\n\n        var x = Number(item.LGTD);\n        var y = Number(item.LTTD); //如果basemap使用ArcGIS的就需要\n        //转换坐标系\n\n        x = x / 180.0 * 20037508.34;\n        if (y > 85.05112) y = 85.05112;\n        if (y < -85.05112) y = -85.05112;\n        y = Math.PI / 180.0 * y;\n        var tmp = Math.PI / 4.0 + y / 2.0;\n        y = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI; //位置点对象\n\n        var zoompoint = {\n          //spatialReference: {wkid: 4326},\n          spatialReference: _this.map.spatialReference,\n          x: x,\n          y: y\n        };\n\n        _this.map.infoWindow.show(zoompoint); // 提示位置\n        // 如果事件类型不是鼠标经过，则\n\n\n        if (item.eventType != \"mouse-over\") {\n          // 设置中心和缩放 (接受经纬度，和缩放比例)\n          _this.setMapCenterandZoom(Number(item.LGTD) + 0.1, item.LTTD);\n        } // this.$GetData.Survey_History_TX(\n        //   {\n        //     _page: 1,\n        //     _page_size: 20,\n        //     _orderby: \"TM desc\",\n        //     STCD: item.rowinfo.STCD\n        //   },\n        //   true,\n        //   data => {\n        //     var imgSrc = data.data[0].Save_Path;\n        //\n        //     var img = document.getElementById(`${item.rowinfo.STCD}_img`);\n        //     img.src = imgSrc;\n        //   }\n        // );\n\n      }, 200);\n    },\n    // 设置中心和缩放 (接受经纬度，和缩放比例)\n    setMapCenterandZoom: function setMapCenterandZoom(LGTD, LTTD, Zoom) {//koen 20190929\n      //暂时不允许点击，防止缩到全球地图的bug\n      //this.map.centerAndZoom([Number(LGTD), Number(LTTD)], Zoom || 1);\n    },\n    // 隐藏提示\n    hideTips: function hideTips() {\n      this.map.infoWindow.hide();\n      this.tip.show_tip = false; // 关闭提示框组件\n    },\n    // 表格加载\n    tableLoading: function tableLoading() {\n      this.table.loading = true;\n    },\n    // 表格加载取消\n    cancelTableLoading: function cancelTableLoading() {\n      this.table.loading = false;\n    },\n    // 加载表格数据\n    loadTableData: function loadTableData(data) {\n      // 加载站点数据\n      this.table.Rows = data;\n    },\n    getDataFromEnd: function getDataFromEnd(url, callback) {\n      // 获取表格数据 `/guanqu/gis/details?ID=${this.info.ID}`\n      this.axios.get(url).then(function (res) {\n        if (typeof callback == \"function\") {\n          callback(res);\n        }\n      });\n    },\n    // 查询\n    search: function search() {\n      var _this2 = this;\n\n      var body = new Object(); // 如果输入框有内容，添加站名过滤字段\n\n      if (this.form.search_str.length > 0) {\n        body['STNM'] = \"\".concat(this.form.search_str);\n      } // 如果地址选择框有内容，添加行政区划过滤字段\n\n\n      if (this.form.model_adress && this.form.model_adress.length != 0) {\n        body[\"ADDVCD\"] = \"\".concat(this.$App.ADDVCD_Array_Filter(this.form.model_adress));\n      } // 如果渠道选择框有内容，添加渠道过滤字段\n\n\n      if (this.form.model_qudao && this.form.model_qudao.length != 0) {\n        body[\"Canal_Code\"] = \"\".concat(this.$App.Canal_Code_Array_Filter(this.form.model_qudao));\n        ;\n      }\n\n      this.tableLoading(); // 表格加载中\n\n      this.search_FeatrueLayer(\"shipin\", body, this.featrue, function (newFeatureLayerOBJ) {\n        _this2.table.currentPage = 1;\n\n        _this2.baseBox_init();\n\n        _this2.cancelTableLoading(); //取消表格加载\n\n\n        _this2.hideTips();\n      });\n    },\n    // 给图层对象添加方法\n    addEventToJsonFlayer: function addEventToJsonFlayer(JsonFlayer) {\n      var _this3 = this;\n\n      //当鼠标悬停在元素上\n      JsonFlayer.on(\"mouse-over\", function (evt) {\n        var attributes = evt.graphic.attributes;\n        attributes.eventType = \"mouse-over\";\n\n        _this3.showTips(attributes); // 给地图对象添加方法\n\n\n        _this3.addEventToMap();\n      }); // 当鼠标离开元素\n\n      JsonFlayer.on(\"mouse-out\", function (evt) {\n        setTimeout(function () {\n          _this3.hideTips(); // 隐藏悬浮框\n\n        }, 100);\n      });\n    },\n    // 给地图对象添加方法\n    addEventToMap: function addEventToMap() {\n      var _this4 = this;\n\n      this.map.on(\"click\", function () {\n        // 隐藏提示\n        _this4.hideTips();\n      });\n    },\n    // 处理页码切换\n    handleCurrentChange: function handleCurrentChange(index) {\n      this.table.currentPage = index;\n    },\n    // 处理每页显示条数切换\n    handleSizeChange: function handleSizeChange(pageSizes) {\n      this.table.pageSizes = pageSizes;\n      this.table.currentPage = 1;\n    },\n    // 分页过滤\n    pageFilter: function pageFilter(currentPage, pageSizes) {\n      var _currentPage = currentPage || this.table.currentPage;\n\n      var _pageSizes = pageSizes || this.table.pageSizes; // 截取数组\n\n\n      var newList = this.table.Rows_filter.slice((_currentPage - 1) * _pageSizes, _currentPage * _pageSizes);\n      return newList;\n    },\n    // 过滤table数据\n    filterTableData: function filterTableData() {\n      this.table.Rows_filter = this.table.Rows.map(function (val) {\n        var val_clone = JSON.parse(_JSON$stringify(val)); // // 时间过滤\n        // val_clone.TM = this.dateFilter(val_clone.TM, 2);\n        // // 水位过滤\n        // val_clone.Z = this.Z_Filter(val_clone.Z);\n        // // 流量过滤\n        // val_clone.Q = this.Z_Filter(val_clone.Q);\n\n        return val_clone;\n      });\n    },\n    // 选取一部分从父组件传来的数据作为表格的数据\n    getTableDataFormParent: function getTableDataFormParent() {\n      var tableData = this.featrue.Rows.map(function (val) {\n        return val.rowinfo;\n      });\n      return tableData;\n    },\n    // 获取图层对象,从父组件中\n    getJsonFlayerFormParent: function getJsonFlayerFormParent() {\n      this.JsonFlayer = this.featrue.LayerObject;\n    },\n    // 获取地图对象,从父组件中\n    getMapFormParent: function getMapFormParent() {\n      this.map = this.featrue.map;\n    },\n    // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\n    addTextGraphicsLayerControllerToFeatrue: function addTextGraphicsLayerControllerToFeatrue() {\n      this.featrue.TextGraphicsLayerController = new Object();\n      this.featrue.TextGraphicsLayerController.removeAllTextGraphicsLayer = this.removeAllTextGraphicsLayer;\n      this.featrue.TextGraphicsLayerController.addTextGraphicsLayerByCheckGroup = this.addTextGraphicsLayerByCheckGroup;\n    },\n    // 多选框标记勾选触发事件\n    checkboxGroup_onChange: function checkboxGroup_onChange(onCheck_Array) {\n      this.removeAllTextGraphicsLayer(); // 清除所有文本标注图层\n\n      this.addTextGraphicsLayerByCheckGroup(); // 根据多选框添加文字标注图层\n    },\n    // 添加文字标注图层\n    addTextGraphicsLayer: function addTextGraphicsLayer(options) {\n      debugger;\n      var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个标注文本图层\n\n      textGraphicsLayer.textType = options.textType;\n      this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\n\n      var Rows = this.featrue.Rows; //创建textsymbol文本标注\n\n      if (Rows.length > 0) {\n        //动态读取json数据源结果集\n        for (var i = 0; i < Rows.length; i++) {\n          var Row = Rows[i];\n          var point = new esri.geometry.Point(Row.geometry.x, Row.geometry.y, new esri.SpatialReference({\n            wkid: 4326\n          })); //定义文本symbol\n\n          var textsymbol = new esri.symbol.TextSymbol(Row.rowinfo[options.textType]) //动态设置文本值\n          .setColor(new dojo.Color(options.color || [55, 55, 55])) //setColor设置文本颜色\n          .setFont(new esri.symbol.Font(options.fontSize || \"10pt\") //setFont设置文本大小\n          .setWeight(esri.symbol.Font.WEIGHT_BOLD)) //setWeight设置文本粗体\n          .setOffset(options.offset_x || 0, options.offset_y || -25); //设置偏移方向\n\n          var graphic = new esri.Graphic(point, textsymbol);\n          textGraphicsLayer.add(graphic);\n        }\n      }\n\n      this.TextGraphicsLayers.push(textGraphicsLayer);\n    },\n    // 根据多选框添加文字标注图层\n    addTextGraphicsLayerByCheckGroup: function addTextGraphicsLayerByCheckGroup() {\n      var _this5 = this;\n\n      var textTypeList;\n      var indexOfSocial = this.form.social.indexOf(\"site\"); // 如果多选框里存在 site站点类型\n\n      if (indexOfSocial !== -1) {\n        this.featrue.LayerObject.show();\n        this.featrue.LayerObject_yujing.show();\n        textTypeList = this.form.social.filter(function (val) {\n          if (val != \"site\") {\n            return true;\n          }\n        });\n      } else {\n        this.featrue.LayerObject.hide();\n        this.featrue.LayerObject_yujing.hide();\n        textTypeList = this.form.social;\n      }\n\n      textTypeList.forEach(function (textType, index) {\n        var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个图形图层\n\n        textGraphicsLayer.textType = textType;\n\n        _this5.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\n\n\n        var Rows = _this5.featrue.Rows; //创建textsymbol文本标注\n\n        if (Rows.length > 0) {\n          //动态读取json数据源结果集\n          for (var i = 0; i < Rows.length; i++) {\n            var Row = Rows[i];\n            var point = new esri.geometry.Point(Row.geometry.x, Row.geometry.y, _this5.featrue.map.spatialReference);\n            var value = Row.rowinfo[textType]; // 过滤\n\n            switch (textType) {\n              case \"VOL\":\n                var value = \"\".concat(_this5.Z_Filter(Row.rowinfo[textType]));\n\n                if (value == \"\") {\n                  value = \"\";\n                } else {\n                  value += \"V\";\n                }\n\n                break;\n\n              case \"CS\":\n                var value = \"\".concat(_this5.CS_Filter(Row.rowinfo[textType]));\n\n                if (value == \"\") {\n                  value = \"\";\n                } else {\n                  value += \"\";\n                }\n\n                break;\n            } //定义文本symbol\n\n\n            var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\n            .setColor(new dojo.Color(value == \"不正常\" ? [255, 0, 0] : [55, 55, 55])) //setColor设置文本颜色\n            .setFont(new esri.symbol.Font(\"10pt\") //setFont设置文本大小\n            .setWeight(esri.symbol.Font.WEIGHT_BOLD)) //setWeight设置文本粗体\n            .setOffset(0, -(25 + index * 15)); //设置偏移方向\n\n            var graphic = new esri.Graphic(point, textsymbol);\n            textGraphicsLayer.add(graphic);\n          }\n        }\n\n        _this5.TextGraphicsLayers.push(textGraphicsLayer);\n      });\n    },\n    // 移除文字标注图层\n    removeTextGraphicsLayer: function removeTextGraphicsLayer(textType) {\n      // 找到对应的文字标注图层\n      for (var i = 0; i < this.TextGraphicsLayers.length; i++) {\n        var val = this.TextGraphicsLayers[i];\n\n        if (val.textType == textType) {\n          this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\n          // val.hide();\n\n          this.TextGraphicsLayers.splice(i, 1); // 从文字标注图层数组里去除对应的文字图层对象\n        }\n      }\n    },\n    // 移除所有文字标注图层\n    removeAllTextGraphicsLayer: function removeAllTextGraphicsLayer() {\n      for (var i = 0; i < this.TextGraphicsLayers.length; i++) {\n        var val = this.TextGraphicsLayers[i];\n        this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\n      }\n\n      this.TextGraphicsLayers = [];\n    },\n    // 初始化baseBox\n    baseBox_init: function baseBox_init() {\n      var _this6 = this;\n\n      // 获取地图对象,从父组件中\n      this.getMapFormParent(); // 获取图层对象,从父组件中\n\n      this.getJsonFlayerFormParent(); // 选取一部分从父组件传来的数据,将其加载为表格数据\n\n      this.loadTableData(this.getTableDataFormParent()); // 过滤table数据\n\n      this.filterTableData(); // 给图层对象添加方法\n\n      this.addEventToJsonFlayer(this.JsonFlayer); // 获取行政区划数据,然后设置地址选择框选项\n\n      this.getTableData_WRP_AD_B(function (data) {\n        _this6.form.adressList = data; // data.map(val => {\n        //   var newVal = new Object();\n        //   newVal.value = val.AD_CD;\n        //   newVal.label = val.AD_NM;\n        //   return newVal;\n        // })\n      }); // 获取输排水渠道数据,然后设置渠道选择框选项\n\n      this.getTableData_WRP_IrrBTCanalSystem(function (data) {\n        _this6.form.qudaoList = data; // data.map(val => {\n        //   var newVal = new Object();\n        //   newVal.value = val.Canal_Code;\n        //   newVal.label = val.Canal_Name;\n        //   return newVal;\n        // });\n      }); // 多选框标记勾选触发事件\n      // 1.清除所有文本标注图层\n      // 2.根据多选框添加文字标注图层\n\n      this.checkboxGroup_onChange(); // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\n\n      this.addTextGraphicsLayerControllerToFeatrue();\n    },\n    // 排序\n    sort_change: function sort_change(item) {\n      var order = item.order,\n          key = item.prop;\n      this.filterTableData();\n      var newList;\n\n      if (order) {\n        switch (order) {\n          case \"descending\":\n            if (key != \"TM\") {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                return Number(b[key]) - Number(a[key]);\n              });\n            } else {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                var aTime = new Date(\"20\".concat(a.TM)).getTime(),\n                    bTime = new Date(\"20\".concat(b.TM)).getTime();\n                aTime = isNaN(aTime) ? 0 : aTime;\n                bTime = isNaN(bTime) ? 0 : bTime;\n                return bTime - aTime;\n              });\n            }\n\n            break;\n\n          case \"ascending\":\n            if (key != \"TM\") {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                return Number(a[key]) - Number(b[key]);\n              });\n            } else {\n              newList = this.table.Rows_filter.sort(function (a, b) {\n                var aTime = new Date(\"20\".concat(a.TM)).getTime(),\n                    bTime = new Date(\"20\".concat(b.TM)).getTime();\n                aTime = isNaN(aTime) ? 0 : aTime;\n                bTime = isNaN(bTime) ? 0 : bTime;\n                return aTime - bTime;\n              });\n            }\n\n        }\n\n        this.table.Rows_filter = newList;\n      }\n\n      this.$TableMethods.refreshCurrentChange(this.table, 1);\n    }\n  },\n  created: function created() {\n    // 初始化baseBox\n    this.baseBox_init();\n    this.search(); // this.baseBox_Interval = setInterval(() => {\n    //   this.search();\n    // },1000 * 60 * 5)\n  },\n  destroyed: function destroyed() {\n    clearInterval(this.baseBox_Interval);\n  }\n};",{"version":3,"sources":["BaseBox-shipinzhan.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"baseBoxContent\">\r\n    <!-- 折叠面板 -->\r\n    <Collapse active-key=\"1\">\r\n      <Panel key=\"1\">\r\n        查询\r\n        <div slot=\"content\">\r\n          <div class=\"form\">\r\n\r\n          <!-- 选择器, 按钮 -->\r\n          <Row class=\"select-group\" :gutter=\"24\">\r\n           <Col span=\"24\">\r\n              <!-- 地址级联选择器 -->\r\n                <el-cascader\r\n                  clearable\r\n                  filterable\r\n                  size=\"mini\"\r\n                  :options=\"form.adressList\"\r\n                  v-model=\"form.model_adress\"\r\n                  placeholder=\"请选择地址\"\r\n                  @change=\"search\"\r\n                  change-on-select\r\n                ></el-cascader>\r\n           </Col>\r\n           <!--  <Col span=\"11\">\r\n                <el-cascader\r\n                  clearable\r\n                  filterable\r\n                  size=\"mini\"\r\n                  placeholder=\"请选择渠道\"\r\n                  :options=\"form.qudaoList\"\r\n                  v-model=\"form.model_qudao\"\r\n                  @change=\"search\"\r\n                  change-on-select\r\n                ></el-cascader> \r\n            </Col>-->\r\n            <!-- <Col span=\"6\">\r\n              查询按钮\r\n            <Button type=\"info\" size=\"small\" @click=\"search\">查询</Button>\r\n            </Col> -->\r\n          </Row>\r\n          <!-- 分割线 -->\r\n          <div class=\"divider\"></div>\r\n          <Row :gutter=\"16\">\r\n              <Col span=\"22\">\r\n                <Input  search enter-button @on-search=\"search\" placeholder=\"请输入要搜索的站名\" size=\"small\" v-model.trim=\"form.search_str\">\r\n                  <!-- <Icon type=\"ios-search\" slot=\"suffix\"/> -->\r\n                </Input>\r\n              </Col>\r\n              <!-- <Col span=\"5\">\r\n                查询按钮\r\n                <Button type=\"info\" size=\"small\" @click=\"search\">查询</Button>\r\n              </Col> -->\r\n            </Row>\r\n            <!-- 分割线 -->\r\n            <div class=\"divider\"></div>\r\n\r\n          <!-- 多选框 -->\r\n          <Row :gutter=\"16\" type=\"flex\" justify=\"center\" align=\"middle\">\r\n              <Col span=\"4\" style=\"text-align:center;\">\r\n                <span style=\"letter-spacing:5px\">标记:</span>\r\n              </Col>\r\n              <Col span=\"20\">\r\n                <CheckboxGroup\r\n                  @on-change=\"checkboxGroup_onChange\"\r\n                  v-model=\"form.social\"\r\n                  class=\"checkBox-group\"\r\n                  style=\"height:22px\"\r\n                >\r\n                  <Checkbox\r\n                    v-for=\"item in form.checkBoxList\"\r\n                    :label=\"item.value\"\r\n                    :size=\"item.size\"\r\n                    class=\"checkBoxItem\"\r\n                  >\r\n                    <span>{{ item.title }}</span>\r\n                  </Checkbox>\r\n                </CheckboxGroup>\r\n              </Col>\r\n            </Row>\r\n        </div>\r\n        </div>\r\n      </Panel>\r\n    </Collapse>\r\n    <!-- 表单, 用于搜索查询 -->\r\n\r\n    <!-- 表格, 用于展示数据 -->\r\n    <div>\r\n      <el-table\r\n        size=\"small\"\r\n        @cell-click=\"cellClick\"\r\n        :data=\"pageFilter()\"\r\n        border\r\n        style=\"width: 100%\"\r\n        :height=\"table.height\"\r\n        v-loading=\"table.loading\"\r\n        empty-text=\"暂无站点数据\"\r\n        @sort-change=\"sort_change\"\r\n      >\r\n        <el-table-column fixed type=\"index\" label=\" \" width=\"40\" align=\"center\"></el-table-column>\r\n        <el-table-column\r\n          v-for=\"item in table.columns\"\r\n          :prop=\"item.key\"\r\n          :align=\"item.align\"\r\n          :label=\"item.title\"\r\n          :width=\"item.width\"\r\n          :fixed=\"item.fixed\"\r\n          :sortable=\"item.sortable\"\r\n          :show-overflow-tooltip=\"true\"\r\n        ></el-table-column>\r\n      </el-table>\r\n      <!-- 分割线 -->\r\n      <!-- <Divider/> -->\r\n      <div class=\"divider\"></div>\r\n      <!-- 分页器 -->\r\n      <el-pagination\r\n        background\r\n        :page-size=\"table.pageSizes\"\r\n        layout=\"total, prev, pager, next, jumper, sizes\"\r\n        :page-sizes=\"[20, 50, 100, 200]\"\r\n        :total=\"table.Rows.length\"\r\n        :pager-count=\"5\"\r\n        :current-page=\"table.currentPage\"\r\n        @current-change=\"handleCurrentChange\"\r\n        @size-change=\"handleSizeChange\"\r\n        class=\"pageController\"\r\n        small\r\n      ></el-pagination>\r\n    </div>\r\n    <div ref=\"tip\" style=\"display:none;\">\r\n      <!-- 视频站 -->\r\n      <TipsSHIPINZHAN :info=\"tip.info_tip\" v-if=\"tip.show_tip\"></TipsSHIPINZHAN>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport TipsSHIPINZHAN from \"@/components/BaseBox/Tips/Tips-shipinzhan.vue\";\r\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\"; // 过滤方法\r\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\r\nexport default {\r\n  props: {\r\n    featrue: {\r\n      type: Object\r\n    },\r\n    search_FeatrueLayer: {\r\n      type: Function\r\n    }\r\n  },\r\n  components: {\r\n    TipsSHIPINZHAN\r\n  },\r\n  data() {\r\n    return {\r\n      // 折叠面板对象\r\n      collapse: {\r\n        activeName: \"\",\r\n        list: []\r\n      },\r\n      // 地图对象\r\n      map: null,\r\n      // 该图层对象\r\n      JsonFlayer: null,\r\n      // 文字标注图层\r\n      TextGraphicsLayers: [],\r\n      // 提示 展示\r\n      tip: {\r\n        info_tip: null,\r\n        show_tip: false\r\n      },\r\n      // 表单数据\r\n      form: {\r\n        search_str: \"\",\r\n        adressList: [],\r\n        qudaoList: [],\r\n        social: [\"site\"],\r\n        checkBoxList: [\r\n          {\r\n            value: \"site\",\r\n            size: \"small\",\r\n            // iconType: \"logo-facebook\",\r\n            title: \"站点\"\r\n          },\r\n          {\r\n            value: \"STNM\",\r\n            size: \"small\",\r\n            // iconType: \"logo-facebook\",\r\n            title: \"站名\"\r\n          }\r\n        ],\r\n        model_adress: [],\r\n        model_qudao: []\r\n      },\r\n      // 表格数据\r\n      table: {\r\n        // 表头设置\r\n        columns: [\r\n          {\r\n            title: \"站名\",\r\n            key: \"STNM\",\r\n            width: 140,\r\n            fixed: \"left\",\r\n            sortable: \"custom\",\r\n            align: \"center\",\r\n          },\r\n          {\r\n            title: \"地址\",\r\n            key: \"STLC\",\r\n\r\n            align: \"center\"\r\n          }\r\n        ],\r\n        // 表体内容\r\n        Rows: [],\r\n        // 表格是否加载中\r\n        loading: false,\r\n        // 当前页\r\n        currentPage: 1,\r\n        // 每页显示数量\r\n        pageSizes: 20,\r\n        // 表体高度\r\n        height: 300\r\n      }\r\n    };\r\n  },\r\n  // 引入过滤方法到此组件\r\n  mixins: [FilterMethods,GetDataMethods],\r\n  methods: {\r\n    // 表格每一行点击事件\r\n    cellClick(item) {\r\n      var evt = new Object();\r\n      evt.graphic = new Object();\r\n      evt.graphic.attributes = item;\r\n      var v = new Object();\r\n      v.itype = \"shipin\";\r\n\r\n      // 设置中心缩放\r\n      this.setMapCenterandZoom(item.LGTD, item.LTTD);\r\n      // 取消所有站点的闪烁\r\n      this.$App.GraphicsLayer_Selection_clear();\r\n      // 对应站点闪烁\r\n      this.$App.add_Graphic_To_GraphicsLayer_Selection(item);\r\n      // 展示抽屉详情框\r\n      this.$App.showDrawer(evt, v);\r\n    },\r\n    // 展示提示框\r\n    showTips(item) {\r\n      // 隐藏之前提示框\r\n      this.hideTips();\r\n      // <div class=\"pd_algin\">\r\n      //       <span class=\"tip_col_5\">监测要素：</span>\r\n      //        <span class=\"tip_col_7\">\r\n      //        </span>\r\n      //   </div>\r\n\r\n      //   <div class=\"pd_algin mg_tp\">\r\n      //       <span class=\"tip_col_5\">关联站点：</span>\r\n      //       <span class=\"tip_col_7\">\r\n      //       </span>\r\n      //   </div>\r\n      // this.tip.show_tip = true; // 获取提示框组件\r\n      // this.tip.info_tip = item; // 传递数据给 提示框组件\r\n\r\n      console.log('悬浮框');\r\n      console.log(item);\r\n      \r\n      let imgSrc = '';\r\n      if(item.rowinfo.picPath !== null){\r\n        imgSrc = item.rowinfo.picPath.replace('r','')\r\n      }\r\n      console.log(`/guanqu/pic${imgSrc}`);\r\n      let content = `<div>\r\n        <div style=\"height: 20px\"></div>\r\n        <div class=\"video\">\r\n          <img src=\"http://222.240.238.58:7001/pic${imgSrc}\"   width=\"210\" height=\"160\"/>\r\n        </div>\r\n      </div>`\r\n      // 延时200毫秒\r\n      setTimeout(() => {\r\n        this.map.infoWindow.resize(250, 650); // 提示框大小\r\n        this.map.infoWindow.setTitle(item.STNM); // 提示题目\r\n        this.map.infoWindow.setContent(content); // 提示内容\r\n\r\n\r\n                //获取坐标\r\n                var x=Number(item.LGTD);\r\n                var y=Number(item.LTTD);\r\n\r\n\r\n                //如果basemap使用ArcGIS的就需要\r\n                //转换坐标系\r\n                x = (x / 180.0) * 20037508.34\r\n                if (y > 85.05112) y = 85.05112;\r\n                if (y < -85.05112) y = -85.05112;\r\n                y = (Math.PI / 180.0) * y;\r\n                var tmp = Math.PI / 4.0 + y / 2.0;\r\n                y = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI;\r\n\r\n                //位置点对象\r\n                var zoompoint = {\r\n                    //spatialReference: {wkid: 4326},\r\n                    spatialReference: this.map.spatialReference,\r\n                    x: x,\r\n                    y: y\r\n                };\r\n\r\n\r\n        this.map.infoWindow.show(zoompoint); // 提示位置\r\n        // 如果事件类型不是鼠标经过，则\r\n        if (item.eventType != \"mouse-over\") {\r\n          // 设置中心和缩放 (接受经纬度，和缩放比例)\r\n          this.setMapCenterandZoom(Number(item.LGTD) + 0.1, item.LTTD);\r\n        }\r\n\r\n        // this.$GetData.Survey_History_TX(\r\n        //   {\r\n        //     _page: 1,\r\n        //     _page_size: 20,\r\n        //     _orderby: \"TM desc\",\r\n        //     STCD: item.rowinfo.STCD\r\n        //   },\r\n        //   true,\r\n        //   data => {\r\n        //     var imgSrc = data.data[0].Save_Path;\r\n        //\r\n        //     var img = document.getElementById(`${item.rowinfo.STCD}_img`);\r\n        //     img.src = imgSrc;\r\n        //   }\r\n        // );\r\n\r\n      }, 200);\r\n    },\r\n    // 设置中心和缩放 (接受经纬度，和缩放比例)\r\n    setMapCenterandZoom(LGTD, LTTD, Zoom) {\r\n      //koen 20190929\r\n      //暂时不允许点击，防止缩到全球地图的bug\r\n      //this.map.centerAndZoom([Number(LGTD), Number(LTTD)], Zoom || 1);\r\n    },\r\n    // 隐藏提示\r\n    hideTips() {\r\n      this.map.infoWindow.hide();\r\n      this.tip.show_tip = false; // 关闭提示框组件\r\n    },\r\n    // 表格加载\r\n    tableLoading() {\r\n      this.table.loading = true;\r\n    },\r\n    // 表格加载取消\r\n    cancelTableLoading() {\r\n      this.table.loading = false;\r\n    },\r\n    // 加载表格数据\r\n    loadTableData(data) {\r\n      // 加载站点数据\r\n      this.table.Rows = data;\r\n    },\r\n    getDataFromEnd(url, callback) {\r\n      // 获取表格数据 `/guanqu/gis/details?ID=${this.info.ID}`\r\n      this.axios.get(url).then(res => {\r\n        if (typeof callback == \"function\") {\r\n          callback(res);\r\n        }\r\n      });\r\n    },\r\n    // 查询\r\n    search() {\r\n      var body = new Object();\r\n      // 如果输入框有内容，添加站名过滤字段\r\n      if (this.form.search_str.length > 0) {\r\n        body['STNM'] = `${this.form.search_str}`\r\n      }\r\n      // 如果地址选择框有内容，添加行政区划过滤字段\r\n      if (this.form.model_adress && this.form.model_adress.length != 0) {\r\n        body[\"ADDVCD\"] = `${this.$App.ADDVCD_Array_Filter(this.form.model_adress)}`;\r\n      }\r\n      // 如果渠道选择框有内容，添加渠道过滤字段\r\n      if (this.form.model_qudao && this.form.model_qudao.length != 0) {\r\n        body[\"Canal_Code\"] = `${this.$App.Canal_Code_Array_Filter(this.form.model_qudao)}`;;\r\n      }\r\n\r\n      this.tableLoading(); // 表格加载中\r\n      this.search_FeatrueLayer(\r\n        \"shipin\",\r\n        body,\r\n        this.featrue, (newFeatureLayerOBJ) => {\r\n          this.table.currentPage = 1;\r\n          this.baseBox_init();\r\n          this.cancelTableLoading(); //取消表格加载\r\n          this.hideTips();\r\n        }\r\n      );\r\n    },\r\n    // 给图层对象添加方法\r\n    addEventToJsonFlayer(JsonFlayer) {\r\n      //当鼠标悬停在元素上\r\n      JsonFlayer.on(\"mouse-over\", evt => {\r\n        var attributes = evt.graphic.attributes;\r\n        attributes.eventType = \"mouse-over\";\r\n        this.showTips(attributes);\r\n        // 给地图对象添加方法\r\n        this.addEventToMap();\r\n      });\r\n\r\n      // 当鼠标离开元素\r\n      JsonFlayer.on(\"mouse-out\", evt => {\r\n        setTimeout(() => {\r\n          this.hideTips(); // 隐藏悬浮框\r\n        }, 100);\r\n      });\r\n    },\r\n    // 给地图对象添加方法\r\n    addEventToMap() {\r\n      this.map.on(\"click\", () => {\r\n        // 隐藏提示\r\n        this.hideTips();\r\n      });\r\n    },\r\n    // 处理页码切换\r\n    handleCurrentChange(index) {\r\n      this.table.currentPage = index;\r\n    },\r\n    // 处理每页显示条数切换\r\n    handleSizeChange(pageSizes) {\r\n      this.table.pageSizes = pageSizes;\r\n      this.table.currentPage = 1;\r\n    },\r\n    // 分页过滤\r\n    pageFilter(currentPage, pageSizes) {\r\n      var _currentPage = currentPage || this.table.currentPage;\r\n      var _pageSizes = pageSizes || this.table.pageSizes;\r\n      // 截取数组\r\n      var newList = this.table.Rows_filter.slice(\r\n        (_currentPage - 1) * _pageSizes,\r\n        _currentPage * _pageSizes\r\n      );\r\n\r\n      return newList;\r\n    },\r\n    // 过滤table数据\r\n    filterTableData() {\r\n      this.table.Rows_filter = this.table.Rows.map(val => {\r\n        var val_clone = JSON.parse(JSON.stringify(val));\r\n\r\n        // // 时间过滤\r\n        // val_clone.TM = this.dateFilter(val_clone.TM, 2);\r\n        // // 水位过滤\r\n        // val_clone.Z = this.Z_Filter(val_clone.Z);\r\n        // // 流量过滤\r\n        // val_clone.Q = this.Z_Filter(val_clone.Q);\r\n        return val_clone;\r\n      });\r\n    },\r\n    // 选取一部分从父组件传来的数据作为表格的数据\r\n    getTableDataFormParent() {\r\n      var tableData = this.featrue.Rows.map(val => {\r\n        return val.rowinfo;\r\n      });\r\n\r\n      return tableData;\r\n    },\r\n    // 获取图层对象,从父组件中\r\n    getJsonFlayerFormParent() {\r\n      this.JsonFlayer = this.featrue.LayerObject;\r\n    },\r\n    // 获取地图对象,从父组件中\r\n    getMapFormParent() {\r\n      this.map = this.featrue.map;\r\n    },\r\n    // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\r\n    addTextGraphicsLayerControllerToFeatrue() {\r\n      this.featrue.TextGraphicsLayerController = new Object();\r\n      this.featrue.TextGraphicsLayerController.removeAllTextGraphicsLayer = this.removeAllTextGraphicsLayer;\r\n      this.featrue.TextGraphicsLayerController.addTextGraphicsLayerByCheckGroup = this.addTextGraphicsLayerByCheckGroup;\r\n    },\r\n    // 多选框标记勾选触发事件\r\n    checkboxGroup_onChange(onCheck_Array) {\r\n      this.removeAllTextGraphicsLayer(); // 清除所有文本标注图层\r\n      this.addTextGraphicsLayerByCheckGroup(); // 根据多选框添加文字标注图层\r\n    },\r\n    // 添加文字标注图层\r\n    addTextGraphicsLayer(options) {\r\n      debugger;\r\n      var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个标注文本图层\r\n      textGraphicsLayer.textType = options.textType;\r\n      this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\r\n      var Rows = this.featrue.Rows;\r\n      //创建textsymbol文本标注\r\n      if (Rows.length > 0) {\r\n        //动态读取json数据源结果集\r\n        for (var i = 0; i < Rows.length; i++) {\r\n          var Row = Rows[i];\r\n          var point = new esri.geometry.Point(\r\n            Row.geometry.x,\r\n            Row.geometry.y,\r\n            new esri.SpatialReference({ wkid: 4326 })\r\n          );\r\n          //定义文本symbol\r\n          var textsymbol = new esri.symbol.TextSymbol(\r\n            Row.rowinfo[options.textType]\r\n          ) //动态设置文本值\r\n            .setColor(new dojo.Color(options.color || [55, 55, 55])) //setColor设置文本颜色\r\n            .setFont(\r\n              new esri.symbol.Font(options.fontSize || \"10pt\") //setFont设置文本大小\r\n                .setWeight(esri.symbol.Font.WEIGHT_BOLD)\r\n            ) //setWeight设置文本粗体\r\n            .setOffset(options.offset_x || 0, options.offset_y || -25); //设置偏移方向\r\n          var graphic = new esri.Graphic(point, textsymbol);\r\n          textGraphicsLayer.add(graphic);\r\n        }\r\n      }\r\n      this.TextGraphicsLayers.push(textGraphicsLayer);\r\n    },\r\n    // 根据多选框添加文字标注图层\r\n    addTextGraphicsLayerByCheckGroup() {\r\n      var textTypeList;\r\n      var indexOfSocial = this.form.social.indexOf(\"site\");\r\n      // 如果多选框里存在 site站点类型\r\n      if (indexOfSocial !== -1) {\r\n        this.featrue.LayerObject.show();\r\n        this.featrue.LayerObject_yujing.show();\r\n        textTypeList = this.form.social.filter(val => {\r\n          if (val != \"site\") {\r\n            return true;\r\n          }\r\n        });\r\n      } else {\r\n        this.featrue.LayerObject.hide();\r\n        this.featrue.LayerObject_yujing.hide();\r\n        textTypeList = this.form.social;\r\n      }\r\n\r\n      textTypeList.forEach((textType, index) => {\r\n        var textGraphicsLayer = new esri.layers.GraphicsLayer(); // 新增一个图形图层\r\n        textGraphicsLayer.textType = textType;\r\n        this.featrue.map.addLayer(textGraphicsLayer); // 给地图添加新增的标注文本图层\r\n        var Rows = this.featrue.Rows;\r\n        //创建textsymbol文本标注\r\n        if (Rows.length > 0) {\r\n          //动态读取json数据源结果集\r\n          for (var i = 0; i < Rows.length; i++) {\r\n            var Row = Rows[i];\r\n            var point = new esri.geometry.Point(\r\n              Row.geometry.x,\r\n              Row.geometry.y,\r\n              this.featrue.map.spatialReference\r\n            );\r\n            var value = Row.rowinfo[textType];\r\n            // 过滤\r\n            switch (textType) {\r\n              case \"VOL\":\r\n                var value = `${this.Z_Filter(Row.rowinfo[textType])}`;\r\n                if (value == \"\") {\r\n                  value = \"\";\r\n                } else {\r\n                  value += \"V\";\r\n                }\r\n                break;\r\n              case \"CS\":\r\n                var value = `${this.CS_Filter(Row.rowinfo[textType])}`;\r\n                if (value == \"\") {\r\n                  value = \"\";\r\n                } else {\r\n                  value += \"\";\r\n                }\r\n                break;\r\n            }\r\n\r\n            //定义文本symbol\r\n            var textsymbol = new esri.symbol.TextSymbol(value) //动态设置文本值\r\n              .setColor(new dojo.Color(value == \"不正常\"? [255, 0 , 0] : [55, 55, 55])) //setColor设置文本颜色\r\n              .setFont(\r\n                new esri.symbol.Font(\"10pt\") //setFont设置文本大小\r\n                  .setWeight(esri.symbol.Font.WEIGHT_BOLD)\r\n              ) //setWeight设置文本粗体\r\n              .setOffset(0, -(25 + index * 15)); //设置偏移方向\r\n            var graphic = new esri.Graphic(point, textsymbol);\r\n            textGraphicsLayer.add(graphic);\r\n          }\r\n        }\r\n        this.TextGraphicsLayers.push(textGraphicsLayer);\r\n      });\r\n    },\r\n    // 移除文字标注图层\r\n    removeTextGraphicsLayer(textType) {\r\n      // 找到对应的文字标注图层\r\n      for (let i = 0; i < this.TextGraphicsLayers.length; i++) {\r\n        var val = this.TextGraphicsLayers[i];\r\n        if (val.textType == textType) {\r\n          this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\r\n          // val.hide();\r\n          this.TextGraphicsLayers.splice(i, 1); // 从文字标注图层数组里去除对应的文字图层对象\r\n        }\r\n      }\r\n    },\r\n    // 移除所有文字标注图层\r\n    removeAllTextGraphicsLayer() {\r\n      for (let i = 0; i < this.TextGraphicsLayers.length; i++) {\r\n        var val = this.TextGraphicsLayers[i];\r\n        this.featrue.map.removeLayer(val); // 移除对应的文字标注图层\r\n      }\r\n      this.TextGraphicsLayers = [];\r\n    },\r\n    // 初始化baseBox\r\n    baseBox_init() {\r\n      // 获取地图对象,从父组件中\r\n      this.getMapFormParent();\r\n      // 获取图层对象,从父组件中\r\n      this.getJsonFlayerFormParent();\r\n      // 选取一部分从父组件传来的数据,将其加载为表格数据\r\n      this.loadTableData(this.getTableDataFormParent());\r\n      // 过滤table数据\r\n      this.filterTableData();\r\n      // 给图层对象添加方法\r\n      this.addEventToJsonFlayer(this.JsonFlayer);\r\n\r\n      // 获取行政区划数据,然后设置地址选择框选项\r\n      this.getTableData_WRP_AD_B((data) => {\r\n        this.form.adressList = data;\r\n        // data.map(val => {\r\n        //   var newVal = new Object();\r\n        //   newVal.value = val.AD_CD;\r\n        //   newVal.label = val.AD_NM;\r\n        //   return newVal;\r\n        // })\r\n      });\r\n\r\n      // 获取输排水渠道数据,然后设置渠道选择框选项\r\n      this.getTableData_WRP_IrrBTCanalSystem(data => {\r\n        this.form.qudaoList = data;\r\n        // data.map(val => {\r\n        //   var newVal = new Object();\r\n        //   newVal.value = val.Canal_Code;\r\n        //   newVal.label = val.Canal_Name;\r\n        //   return newVal;\r\n        // });\r\n      });\r\n      // 多选框标记勾选触发事件\r\n      // 1.清除所有文本标注图层\r\n      // 2.根据多选框添加文字标注图层\r\n      this.checkboxGroup_onChange();\r\n      // 往featrue对象里添加操作TextGraphicsLayer的对象，里面有移除所有TextGraphicsLayer的方法，和根据多选框添加文字标注图层的方法\r\n      this.addTextGraphicsLayerControllerToFeatrue();\r\n    },\r\n    // 排序\r\n    sort_change(item) {\r\n      var order = item.order,\r\n        key = item.prop;\r\n\r\n      this.filterTableData();\r\n      var newList;\r\n      if (order) {\r\n        switch (order) {\r\n          case \"descending\":\r\n            if (key != \"TM\") {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                return Number(b[key]) - Number(a[key]);\r\n              });\r\n            } else {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                var aTime = new Date(`20${a.TM}`).getTime(),\r\n                  bTime = new Date(`20${b.TM}`).getTime();\r\n                aTime = isNaN(aTime) ? 0 : aTime;\r\n                bTime = isNaN(bTime) ? 0 : bTime;\r\n                return bTime - aTime;\r\n              });\r\n            }\r\n            break;\r\n\r\n          case \"ascending\":\r\n            if (key != \"TM\") {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                return Number(a[key]) - Number(b[key]);\r\n              });\r\n            } else {\r\n              newList = this.table.Rows_filter.sort((a, b) => {\r\n                var aTime = new Date(`20${a.TM}`).getTime(),\r\n                  bTime = new Date(`20${b.TM}`).getTime();\r\n                aTime = isNaN(aTime) ? 0 : aTime;\r\n                bTime = isNaN(bTime) ? 0 : bTime;\r\n                return aTime - bTime;\r\n              });\r\n            }\r\n        }\r\n        this.table.Rows_filter = newList;\r\n      }\r\n      this.$TableMethods.refreshCurrentChange(this.table, 1);\r\n    }\r\n  },\r\n  created() {\r\n    // 初始化baseBox\r\n    this.baseBox_init();\r\n    this.search();\r\n    // this.baseBox_Interval = setInterval(() => {\r\n    //   this.search();\r\n    // },1000 * 60 * 5)\r\n  },\r\n  destroyed() {\r\n    clearInterval(this.baseBox_Interval)\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"less\" scoped>\r\n/* 引入baseBox公共样式 */\r\n@import \"../../assets/commonLess/baseBox\";\r\n</style>\r\n"],"sourceRoot":"src/components/BaseBox"}]}