{"remainingRequest":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\gvisualplace\\zhihuiguanqu\\src\\warm\\warm-dispatch\\warm-gatedispatching\\gatedispatching.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\src\\warm\\warm-dispatch\\warm-gatedispatching\\gatedispatching.vue","mtime":1645514326432},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\babel.config.js","mtime":1577669403468},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\gvisualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"D:\\\\work2022\\\\gvisualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"D:\\\\work2022\\\\gvisualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport _JSON$stringify from \"D:\\\\work2022\\\\gvisualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FilterMethods from \"@/assets/commonJS/FilterMethods\";\nimport GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\nimport App from \"@/App.vue\";\nexport default {\n  data: function data() {\n    return {\n      loading: false,\n      showname: '泄流曲线',\n      tableBox_show: 1,\n      ddtypelist: [{\n        value: '1',\n        label: '先导流洞'\n      }, {\n        value: '2',\n        label: '先溢洪洞'\n      }],\n      form: {\n        ddtype: '1'\n      },\n      theight: window.innerHeight - 290,\n      data: [],\n      data2: {},\n      list_input: {\n        total: 100,\n        pagesize: 50,\n        pagesizeopts: [10, 20, 50, 75, 100, 200],\n        current: 1\n      }\n    };\n  },\n  // 引入过滤方法到此组件\n  mixins: [FilterMethods, GetDataMethods],\n  mounted: function mounted() {\n    this.$refs.achart.style.width = document.body.offsetWidth + \"px\";\n    this.$refs.achart.style.height = document.body.offsetHeight - 258 + \"px\";\n    this.reloadchart();\n    this.Reload();\n  },\n  methods: {\n    Reload: function Reload() {\n      var _this = this;\n\n      this.loading = true;\n      var _currentPage = this.list_input.current;\n      var _pageSizes = this.list_input.pagesize;\n\n      var _bgincount = (_currentPage - 1) * _pageSizes + 1;\n\n      var _endcount = _currentPage * _pageSizes;\n\n      this.axios.get('/gatedd/xhxx', {\n        params: {\n          begincount: _bgincount,\n          endcount: _endcount,\n          sign: this.form.ddtype\n        }\n      }).then(function (res) {\n        _this.loading = false;\n        _this.data = res.data.rows;\n        _this.list_input.total = res.data.total;\n      });\n    },\n    // 处理页码切换\n    CurrentChange: function CurrentChange(index) {\n      this.list_input.current = index;\n      this.Reload();\n    },\n    // 处理每页显示条数切换\n    PagesizeChange: function PagesizeChange(pagesize) {\n      this.list_input.pagesize = pagesize;\n      this.list_input.current = 1;\n      this.Reload();\n    },\n    TYPEsearch: function TYPEsearch() {\n      this.list_input.current = 1;\n      this.Reload();\n      this.reloadchart();\n    },\n    showchart: function showchart() {\n      if (this.tableBox_show == 1) {\n        this.tableBox_show = 0;\n        this.showname = '泄流表格';\n        this.$refs.achart.style.display = \"\";\n        this.$refs.tablediv.style.display = \"none\";\n      } else {\n        this.tableBox_show = 1;\n        this.showname = '泄流曲线';\n        this.$refs.achart.style.display = \"none\";\n        this.$refs.tablediv.style.display = \"\";\n      }\n    },\n    //导出\n    exportExcel: function exportExcel() {\n      //this.axios.get('/excel/exportgate', {params: {begincount:0,endcount:99999,sign:this.form.ddtype}});\n      window.location.href = '/excel/exportgate?sign=' + this.form.ddtype + '&begincount=0&endcount=99999';\n    },\n    //曲线图加载\n    reloadchart: function reloadchart() {\n      var _this2 = this;\n\n      this.axios.get('/gatedd/xhchart', {\n        params: {\n          sign: this.form.ddtype\n        }\n      }).then(function (res) {\n        var _data = JSON.parse(_JSON$stringify(res.data));\n\n        var echartData = {\n          chartName: \"曲线图\",\n          x: new Object(),\n          y1: new Object(),\n          y2: new Object(),\n          y3: new Object(),\n          y4: new Object(),\n          y5: new Object()\n        };\n        echartData.x.list = FilterMethods.methods.newArrayByObjArray(_data, \"Z\", function (val) {\n          // 过滤\n          if (isNaN(val) || val === \"\" || val == null) {\n            return 2520.00;\n          }\n\n          return _parseFloat(val).toFixed(2);\n        });\n        echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DL_Q\", function (val) {\n          // 过滤\n          if (isNaN(val) || val === \"\" || val == null) {\n            return 1.000;\n          }\n\n          return _parseFloat(val).toFixed(3);\n        });\n        echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"XH_Q\", function (val) {\n          // 过滤\n          if (isNaN(val) || val === \"\" || val == null) {\n            return 1.000;\n          }\n\n          return _parseFloat(val).toFixed(3);\n        });\n        echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"SUM_Q\", function (val) {\n          // 过滤\n          if (isNaN(val) || val === \"\" || val == null) {\n            return 1.000;\n          }\n\n          return _parseFloat(val).toFixed(3);\n        });\n        _this2.data2 = echartData;\n        console.log(_this2.data2);\n\n        _this2.drawchart();\n      });\n    },\n    drawchart: function drawchart() {\n      var obj_c = this.$refs.achart;\n      var achart = this.$echarts.init(obj_c);\n      console.log(achart);\n      achart.resize();\n      achart.setOption({\n        title: {\n          text: \"流量曲线图\"\n        },\n        tooltip: {\n          trigger: \"axis\"\n        },\n        legend: {\n          data: [\"导流洞流量\", \"溢洪洞流量\", \"合计流量\", \"导流洞开度\", \"溢洪洞开度\"]\n        },\n        calculable: true,\n        xAxis: [{\n          type: \"category\",\n          boundaryGap: false,\n          data: this.data2.x.list,\n          axisLabel: {\n            show: true,\n            interval: _parseInt(this.data2.x.list.length / 14)\n          }\n        }],\n        yAxis: [{\n          name: \"流量\",\n          type: \"value\",\n          min: 0,\n          max: 1100\n        }, {\n          name: \"闸门开度\",\n          type: \"value\",\n          min: 0,\n          max: 4.1\n        }],\n        series: [{\n          name: \"导流洞流量\",\n          type: \"line\",\n          yAxisIndex: 0,\n          data: this.data2.y1.list,\n          smooth: true,\n          itemStyle: {\n            normal: {\n              color: \"#006400\",\n              //折线点的颜色\n              lineStyle: {\n                color: \"#006400\" //折线的颜色\n\n              }\n            }\n          } // data: [0.36, 0.28, 0.36, 0.02, 0.12]\n\n        }, {\n          name: \"溢洪洞流量\",\n          type: \"line\",\n          yAxisIndex: 0,\n          data: this.data2.y2.list,\n          smooth: true,\n          itemStyle: {\n            normal: {\n              color: \"#8B0000\",\n              //折线点的颜色\n              lineStyle: {\n                color: \"#8B0000\" //折线的颜色\n\n              }\n            }\n          }\n        }, {\n          name: \"合计流量\",\n          type: \"line\",\n          yAxisIndex: 0,\n          data: this.data2.y3.list,\n          smooth: true,\n          itemStyle: {\n            normal: {\n              color: \"#9400D3\",\n              //折线点的颜色\n              lineStyle: {\n                color: \"#9400D3\" //折线的颜色\n\n              }\n            }\n          }\n        }]\n      });\n    }\n  }\n};",{"version":3,"sources":["gatedispatching.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n\t<Content class=\"searchcon\">\r\n      <Row type=\"flex\" :gutter=\"16\" class=\"rowtocol\">\r\n        <Col>\r\n          调度方式：\r\n          <Select v-model=\"form.ddtype\" :clearable=\"false\" @on-change=\"TYPEsearch\" style=\"width:120px;margin-left: 5px;margin-right: 20px;\">\r\n            <Option\r\n              v-for=\"obj in ddtypelist\"\r\n              :key=\"obj.value\"\r\n              :label=\"obj.label\"\r\n              :value=\"obj.value\">\r\n            </Option>\r\n          </Select>\r\n        </Col>\r\n        <Col>\r\n          <Button type=\"primary\" style=\"width: auto;margin-right: 20px;\" @click=\"showchart\">{{showname}}</Button>\r\n        </col>\r\n        <Col>\r\n          <Button type=\"primary\" style=\"width: auto;margin-right: 20px;\" @click=\"exportExcel\">导出</Button>\r\n        </col>\r\n      </Row>\r\n      <Divider />\r\n      <Row>\r\n        <Col style='font-size: 14px;' class=\"borsLine\">\r\n      库水位：m，闸门开启高度：m，泄流量：m³/s\r\n      </Col>\r\n      </Row>\r\n      <div ref=\"tablediv\">\r\n      <el-table\r\n        :data=\"data\"\r\n        border\r\n        :height=\"theight\"\r\n        v-loading=\"loading\"\r\n        style=\"width: 100%\">\r\n        <el-table-column\r\n          label=\" \"\r\n          prop=\"ROWID\"\r\n          align=\"center\"\r\n          width=\"65\"\r\n          fixed=\"left\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          label=\"库水位\"\r\n          prop=\"Z\"\r\n          align=\"center\"\r\n          min-width=\"80\"\r\n          fixed=\"left\">\r\n        </el-table-column>\r\n        <el-table-column label=\"导流洞\" align=\"center\">\r\n          <el-table-column\r\n            prop=\"DLKDNAME\"\r\n            label=\"闸门开启高度\"\r\n            min-width=\"120\"\r\n            align=\"center\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"DL_Q\"\r\n            label=\"泄流量\"\r\n            min-width=\"120\"\r\n            align=\"center\">\r\n          </el-table-column>\r\n        </el-table-column>\r\n        <el-table-column label=\"溢洪洞\" align=\"center\">\r\n          <el-table-column\r\n            prop=\"XHKDNAME\"\r\n            label=\"闸门开启高度\"\r\n            min-width=\"120\"\r\n            align=\"center\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"XH_Q\"\r\n            label=\"泄流量\"\r\n            min-width=\"120\"\r\n            align=\"center\">\r\n          </el-table-column>\r\n        </el-table-column>\r\n        <el-table-column\r\n          label=\"联合泄流量\"\r\n          prop=\"SUM_Q\"\r\n          align=\"center\"\r\n          min-width=\"120\"\r\n          fixed=\"left\">\r\n        </el-table-column>\r\n      </el-table>\r\n      <div style=\"margin-top: 10px;margin-right:10px;overflow: hidden\">\r\n        <div style=\"float: right;\">\r\n          <Page \r\n            :total=\"list_input.total\" \r\n            :current=\"list_input.current\" show-sizer \r\n            :page-size=\"list_input.pagesize\" :page-size-opts=\"list_input.pagesizeopts\"\r\n            @on-change=\"CurrentChange\"\r\n            @on-page-size-change=\"PagesizeChange\"\r\n            size=\"small\"\r\n            show-total\r\n            show-elevator>\r\n          </Page>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <div ref=\"achart\" style=\"width: 100%;height: 500px;margin-top: 1%;display:none;\"></div>\r\n\t</Content>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/javascript\">\r\n  import FilterMethods from \"@/assets/commonJS/FilterMethods\";\r\n  import GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\r\n  import App from \"@/App.vue\";\r\n  export default {\r\n    data(){\r\n            return{\r\n                loading:false,\r\n                showname:'泄流曲线',\r\n                tableBox_show:1,\r\n                ddtypelist:[{\r\n                  value: '1',\r\n                  label: '先导流洞'\r\n                }, {\r\n                  value: '2',\r\n                  label: '先溢洪洞'\r\n                }],\r\n                form:{\r\n                    ddtype:'1',   \r\n                },\r\n                theight:window.innerHeight-290,\r\n                data:[],\r\n                data2:{},\r\n                list_input:{\r\n                    total:100,\r\n                    pagesize:50,\r\n                    pagesizeopts:[10,20,50,75,100,200],\r\n                    current:1,\r\n                },\r\n            }\r\n        },\r\n                // 引入过滤方法到此组件\r\n        mixins: [FilterMethods,GetDataMethods], \r\n        mounted(){ \r\n           this.$refs.achart.style.width=document.body.offsetWidth+\"px\"; \r\n           this.$refs.achart.style.height=(document.body.offsetHeight-258)+\"px\";\r\n            this.reloadchart();         \r\n            this.Reload();\r\n        }, \r\n        methods:{\r\n          Reload(){\r\n                this.loading = true;\r\n                var _currentPage = this.list_input.current;\r\n                var _pageSizes = this.list_input.pagesize;\r\n                var _bgincount=(_currentPage - 1) * _pageSizes+1;\r\n                var _endcount=_currentPage * _pageSizes;                \r\n                this.axios.get('/gatedd/xhxx',{params:{begincount:_bgincount,endcount:_endcount,sign:this.form.ddtype}}).then((res)=>{\r\n                    this.loading = false;\r\n                    this.data = res.data.rows;\r\n                    this.list_input.total = res.data.total;\r\n                });\r\n            },\r\n          // 处理页码切换\r\n            CurrentChange(index) {\r\n              this.list_input.current = index;\r\n              this.Reload();             \r\n            },\r\n            // 处理每页显示条数切换\r\n            PagesizeChange(pagesize) {\r\n              this.list_input.pagesize = pagesize;\r\n              this.list_input.current=1;\r\n              this.Reload();\r\n            },\r\n            TYPEsearch(){\r\n              this.list_input.current=1;\r\n              this.Reload();\r\n              this.reloadchart();\r\n            },\r\n            showchart(){\r\n              if(this.tableBox_show==1){\r\n                this.tableBox_show=0;\r\n                this.showname='泄流表格';\r\n                this.$refs.achart.style.display=\"\";\r\n                this.$refs.tablediv.style.display=\"none\";\r\n              }else{\r\n                this.tableBox_show=1;\r\n                this.showname='泄流曲线';\r\n                this.$refs.achart.style.display=\"none\";\r\n                this.$refs.tablediv.style.display=\"\";\r\n              }\r\n            },\r\n            //导出\r\n            exportExcel(){\r\n              //this.axios.get('/excel/exportgate', {params: {begincount:0,endcount:99999,sign:this.form.ddtype}});\r\n              window.location.href='/excel/exportgate?sign='+this.form.ddtype+'&begincount=0&endcount=99999';\r\n            },\r\n            //曲线图加载\r\n            reloadchart(){\r\n              this.axios.get('/gatedd/xhchart', {params: {sign:this.form.ddtype}}).then(res => {\r\n                    var _data = JSON.parse(JSON.stringify(res.data));\r\n                    var echartData = {\r\n                        chartName: \"曲线图\",\r\n                        x: new Object(),\r\n                        y1: new Object(),\r\n                        y2: new Object(),\r\n                        y3: new Object(),\r\n                        y4: new Object(),\r\n                        y5: new Object()\r\n                    }\r\n                    echartData.x.list=FilterMethods.methods.newArrayByObjArray(_data, \"Z\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 2520.00;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n                    echartData.y1.list=FilterMethods.methods.newArrayByObjArray(_data, \"DL_Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 1.000;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n                    echartData.y2.list=FilterMethods.methods.newArrayByObjArray(_data, \"XH_Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 1.000;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n                    echartData.y3.list=FilterMethods.methods.newArrayByObjArray(_data, \"SUM_Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 1.000;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n                    this.data2 = echartData;\r\n                    console.log(this.data2);\r\n                    this.drawchart();\r\n                });\r\n            },\r\n             drawchart() {\r\n               var obj_c=this.$refs.achart;\r\n                var achart = this.$echarts.init(obj_c);\r\n                console.log(achart);\r\n                achart.resize();\r\n                achart.setOption({\r\n                    title: {text: \"流量曲线图\"},\r\n                    tooltip: {\r\n                        trigger: \"axis\"\r\n                    },\r\n                    legend: {\r\n                        data: [\"导流洞流量\", \"溢洪洞流量\", \"合计流量\",\"导流洞开度\",\"溢洪洞开度\"]\r\n                    },\r\n                    calculable: true,\r\n                    xAxis: [\r\n                        {\r\n                            type: \"category\",\r\n                            boundaryGap: false,\r\n                            data: this.data2.x.list,\r\n                            axisLabel: { show: true,interval: parseInt(this.data2.x.list.length/14)},\r\n                        }\r\n                    ],\r\n                    yAxis: [\r\n                        {\r\n                            name: \"流量\",\r\n                            type: \"value\",\r\n                            min: 0,\r\n                            max: 1100\r\n                        },\r\n                        {\r\n                            name: \"闸门开度\",\r\n                            type: \"value\",\r\n                            min: 0,\r\n                            max: 4.1\r\n                        }\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: \"导流洞流量\",\r\n                            type: \"line\",\r\n                            yAxisIndex: 0,\r\n                            data: this.data2.y1.list,\r\n                            smooth:true,\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    color: \"#006400\",//折线点的颜色\r\n                                    lineStyle: {\r\n                                        color: \"#006400\"//折线的颜色\r\n                                    }\r\n                                }\r\n                            },\r\n                            // data: [0.36, 0.28, 0.36, 0.02, 0.12]\r\n                        },\r\n                        {\r\n                            name: \"溢洪洞流量\",\r\n                            type: \"line\",\r\n                            yAxisIndex: 0,\r\n                            data: this.data2.y2.list,\r\n                            smooth:true,\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    color: \"#8B0000\",//折线点的颜色\r\n                                    lineStyle: {\r\n                                        color: \"#8B0000\"//折线的颜色\r\n                                    }\r\n                                }\r\n                            },\r\n                        },\r\n                        {\r\n                            name: \"合计流量\",\r\n                            type: \"line\",\r\n                            yAxisIndex: 0,\r\n                            data: this.data2.y3.list,\r\n                            smooth:true,\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    color: \"#9400D3\",//折线点的颜色\r\n                                    lineStyle: {\r\n                                        color: \"#9400D3\"//折线的颜色\r\n                                    }\r\n                                }\r\n                            },\r\n                        },\r\n                    ]\r\n                });\r\n            },\r\n        }\r\n  }\r\n</script>  "],"sourceRoot":"src/warm/warm-dispatch/warm-gatedispatching"}]}