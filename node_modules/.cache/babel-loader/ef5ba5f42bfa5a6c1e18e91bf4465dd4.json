{"remainingRequest":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js!D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\work2022\\visualplace\\zhihuiguanqu\\src\\assets\\commonJS\\FilterMethods.js","dependencies":[{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\src\\assets\\commonJS\\FilterMethods.js","mtime":1651021551292},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\babel.config.js","mtime":1577669403468},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _JSON$stringify from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"D:\\\\work2022\\\\visualplace\\\\zhihuiguanqu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.regexp.split\";\nvar FilterMethods = {\n  methods: {\n    // 日期过滤器\n    dateFilter: function dateFilter(tm, number, type, number2) {\n      if (tm) {\n        var dateArray = tm.split(' ');\n        var date1 = dateArray[0];\n\n        if (!number2 && number2 !== 0) {\n          date1 = dateArray[0].substring(2);\n        } else {\n          date1 = dateArray[0].substring(number2);\n        }\n\n        var date2 = dateArray[1]; // console.log(date1,date2)\n        // console.log(date1);\n\n        if (date2) {\n          date2 = date2.substring(0, number || 5);\n        } else {\n          date2 = '';\n        }\n\n        if (type) {\n          switch (type) {\n            case \"onlyDate\":\n              return \"\".concat(date1);\n\n            case \"onlyTime\":\n              return \"\".concat(date2).concat(number == 2 ? ':00' : '');\n          }\n        } // return date;\n\n\n        return \"\".concat(date1, \"  \").concat(date2);\n      } else {\n        return '';\n      }\n    },\n    // 水位过滤器\n    Z_Filter: function Z_Filter(Z, figure) {\n      if (Z) {\n        var Z = _parseFloat(Z);\n\n        if (Z !== 0) {\n          return Z.toFixed(figure || 2);\n        }\n\n        return '';\n      } else {\n        return '';\n      }\n    },\n    // 流量过滤器\n    Z_Filter2: function Z_Filter2(agmt) {\n      // debugger;\n      var oFl = agmt.split('.');\n      var result = null;\n\n      if (oFl[1] === undefined) {\n        result = \"\".concat(agmt, \".00\");\n      } else if (oFl[1].length === 1) {\n        result = \"\".concat(agmt, \"0\");\n      } else if (oFl[1].length === 2) {\n        result = \"\".concat(agmt);\n      } else if (oFl[1].length >= 3) {\n        result = \"\".concat(agmt.substring(0, agmt.length - 1));\n      } else {\n        result = agmt;\n      }\n\n      return result;\n    },\n    // 浮点型数值过滤器\n    Float_Filter: function Float_Filter(Z, figure) {\n      if (Z) {\n        var Z = _parseFloat(Z);\n\n        if (Z !== 0) {\n          return Z.toFixed(figure || 2);\n        }\n\n        return '';\n      } else {\n        return '';\n      }\n    },\n    // 浮点型数值过滤器\n    Float_Filter2: function Float_Filter2(Z, figure) {\n      if (Z) {\n        var Z = _parseFloat(Z);\n\n        if (Z !== 0) {\n          return Z.toFixed(1);\n        }\n\n        return '';\n      } else {\n        return '';\n      }\n    },\n    // 水势过滤器\n    WPTN_Filter: function WPTN_Filter(WPTN) {\n      if (WPTN) {\n        var WPTN = _parseInt(WPTN);\n\n        var newWPTN;\n\n        switch (WPTN) {\n          case 6:\n            newWPTN = {\n              status: WPTN,\n              symbol: \"一\"\n            };\n            break;\n\n          case 5:\n            newWPTN = {\n              status: WPTN,\n              symbol: \"↑\"\n            };\n            break;\n\n          case 4:\n            newWPTN = {\n              status: WPTN,\n              symbol: \"↓\"\n            };\n            break;\n\n          case 0:\n            newWPTN = {\n              status: 6,\n              symbol: \"一\"\n            };\n            break;\n\n          default:\n            newWPTN = {\n              status: 6,\n              symbol: \"一\"\n            };\n            break;\n        }\n\n        return newWPTN;\n      } else {\n        return {\n          status: 6,\n          symbol: \"一\"\n        };\n      }\n    },\n    // 通讯状态过滤器\n    CS_Filter: function CS_Filter(CS) {\n      if (CS && CS == 1) {\n        return \"正常\";\n      } else {\n        return \"异常\";\n      }\n    },\n    //\n    STGR_Filter: function STGR_Filter(STGR) {\n      var STGR = _parseInt(STGR);\n\n      if (isNaN(STGR)) {\n        return \"\";\n      } else {\n        var val;\n\n        switch (STGR) {\n          case 1:\n            val = \"国家重要站\";\n            break;\n\n          case 2:\n            val = \"省级重要站\";\n            break;\n\n          case 3:\n            val = \"一般站\";\n            break;\n\n          case 4:\n            val = \"实验或专用站\";\n            break;\n\n          case 5:\n            val = \"山洪站\";\n            break;\n\n          case 6:\n            val = \"临时站\";\n            break;\n\n          case 7:\n            val = \"其他站\";\n            break;\n\n          case 8:\n            val = \"灌区站\";\n            break;\n        }\n\n        return val;\n      }\n    },\n    // 站点大类归属过滤器\n    STTP_Filter: function STTP_Filter(STTP) {\n      switch (STTP) {\n        case \"MM\":\n          STTP = \"气象站\";\n          break;\n\n        case \"PP\":\n          STTP = \"雨量站\";\n          break;\n\n        case \"BB\":\n          STTP = \"蒸发站\";\n          break;\n\n        case \"ZQ\":\n          STTP = \"流量站\";\n          break;\n\n        case \"DD\":\n          STTP = \"堰（闸）水位站\";\n          break;\n\n        case \"ZZ\":\n          STTP = \"河道水位站\";\n          break;\n\n        case \"TT\":\n          STTP = \"潮位站\";\n          break;\n\n        case \"RR\":\n          STTP = \"水库站\";\n          break;\n\n        case \"DP\":\n          STTP = \"泵站\";\n          break;\n\n        case \"ZG\":\n          STTP = \"地下水位站\";\n          break;\n\n        case \"SS\":\n          STTP = \"墒情站\";\n          break;\n\n        case \"WQ\":\n          STTP = \"水质站\";\n          break;\n\n        case \"SD\":\n          STTP = \"泥沙\";\n          break;\n\n        case \"PH\":\n          STTP = \"图像站\";\n          break;\n\n        case \"TV\":\n          STTP = \"视频站\";\n          break;\n\n        case \"GC\":\n          STTP = \"闸控站\";\n          break;\n\n        case \"CQ\":\n          STTP = \"渠道水位站\";\n          break;\n      }\n\n      return STTP;\n    },\n    //动态统计图Y轴最大值\n    get_echart_max: function get_echart_max(data) {\n      var data = JSON.parse(_JSON$stringify(data));\n      data.forEach(function (val, index, array) {\n        if (val == '') {\n          array.splice(index, 1);\n        }\n      });\n      var max = data[0];\n\n      for (var i = 1; i < data.length; i++) {\n        if (_parseFloat(data[i]) > _parseFloat(max)) {\n          max = data[i];\n        }\n      }\n\n      return _parseFloat(max);\n    },\n    //动态统计图Y轴最小值\n    get_echart_min: function get_echart_min(data) {\n      var data = JSON.parse(_JSON$stringify(data));\n      data.forEach(function (val, index, array) {\n        if (val == '') {\n          array.splice(index, 1);\n        }\n      });\n      var min = data[0];\n\n      for (var i = 1; i < data.length; i++) {\n        if (_parseFloat(data[i]) < _parseFloat(min)) {\n          min = data[i];\n        }\n      }\n\n      return _parseFloat(min);\n    },\n    // 按层级截取行政区划码长度 县 乡镇 村\n    ADDVCD_Array_Filter: function ADDVCD_Array_Filter(ADDVCD_Array) {\n      var length = ADDVCD_Array.length;\n      var lastADDVCD = ADDVCD_Array[length - 1];\n      var likeADDVCD;\n\n      switch (length) {\n        case 1:\n          likeADDVCD = lastADDVCD.substring(0, 6);\n          break;\n\n        case 2:\n          likeADDVCD = lastADDVCD.substring(0, 9);\n          break;\n\n        case 3:\n          likeADDVCD = lastADDVCD.substring(0, 12);\n          break;\n      }\n\n      return likeADDVCD;\n    },\n    // 按层级截取行政区划码长度   乡镇 村\n    SUB_ADDVCD_Array_Filter: function SUB_ADDVCD_Array_Filter(ADDVCD_Array) {\n      var length = ADDVCD_Array.length;\n      var lastADDVCD = ADDVCD_Array[length - 1];\n      var likeADDVCD;\n\n      switch (length) {\n        case 1:\n          likeADDVCD = lastADDVCD.substring(0, 9);\n          break;\n\n        case 2:\n          likeADDVCD = lastADDVCD.substring(0, 12);\n          break;\n      }\n\n      return likeADDVCD;\n    },\n    // 按层级截取渠道编码长度\n    Canal_Code_Array_Filter: function Canal_Code_Array_Filter(Canal_Code_Array) {\n      var length = Canal_Code_Array.length;\n      var lastCanal_Code = Canal_Code_Array[length - 1]; // var likeCanal_Code;\n      // switch (length) {\n      //     case 1:\n      //         likeCanal_Code = lastCanal_Code.substring(0, 5);\n      //         break;\n      //     case 2:\n      //         likeCanal_Code = lastCanal_Code.substring(0, 9);\n      //         break;\n      // }\n\n      return lastCanal_Code;\n    },\n    // 渠道树\n    QuDao_Tree_Filter: function QuDao_Tree_Filter(data) {\n      // var totalLength = 0;\n      data = addTitle(data, \"canal_name\"); // 增加标题\n\n      var ganQuList = getGanQuList(data); // totalLength += ganQuList.length;\n\n      ganQuList = ganQuList.map(function (val) {\n        // 支渠\n        var this_ZhiquList = getZhiquList(data, val.canal_code);\n        this_ZhiquList.map(function (zhuquVal) {\n          // 支渠站加其他渠道\n          var this_ZhiQuSite_otherQuDao_List = get_ZhiQuSite_otherQuDao_List(data, zhuquVal.canal_code);\n          zhuquVal.children = this_ZhiQuSite_otherQuDao_List; // if (zhuquVal.children.length > 0) {\n          //     totalLength += zhuquVal.children.length;\n          //     console.log(zhuquVal.canal_name,zhuquVal.children);\n          // }\n\n          return zhuquVal;\n        }); // 干渠站\n\n        var this_GanQuSiteList = getGanQuSiteList(data, val.canal_code);\n        val.children = this_ZhiquList.concat(this_GanQuSiteList); // totalLength += val.children.length\n\n        return val;\n      });\n      var other = {\n        label: \"其他\",\n        children: getOtherSiteList(data)\n      };\n      ganQuList.push(other); // totalLength += other.children.length\n      // console.log(\"dataLength\", data.length)\n      // console.log(\"totalLength\", totalLength)\n\n      var guanqutree = new Object();\n      var siteinfo = new Object();\n      data.some(function (val, index) {\n        if (val.bj == 0) {\n          siteinfo.canal_name = val.canal_name;\n          siteinfo.canal_code = val.canal_code;\n          return true;\n        }\n      });\n      guanqutree.siteinfo = siteinfo;\n      guanqutree.data = ganQuList;\n      return guanqutree; // 函数\n\n      function getGanQuList(data) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.upper_Canal_code == -1 && val.bj == 1) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function getOtherSiteList(data) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.upper_Canal_code == -1 && val.bj == 0) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function getZhiquList(data, upper_Canal_code) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.upper_Canal_code == upper_Canal_code && val.bj == \"1\") {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function getGanQuSiteList(data, upper_Canal_code) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.upper_Canal_code == upper_Canal_code && val.bj == \"0\") {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function get_ZhiQuSite_otherQuDao_List(data, upper_Canal_code) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.upper_Canal_code == upper_Canal_code) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function addTitle(array, fieldName) {\n        var newList;\n        newList = array.map(function (val) {\n          val.label = val[fieldName];\n\n          if (val.bj == 0) {\n            val.label = \"\".concat(val[fieldName], \"\\u3010\\u7AD9\\u70B9\\u3011\");\n          }\n\n          return val;\n        });\n        return newList;\n      }\n    },\n    // 行政区划树\n    XingZheng_Tree_Filter: function XingZheng_Tree_Filter(up_adcd, data) {\n      data = addTitle(data, \"ad_nm\"); // 增加标题\n\n      var Mogami = getMogami(up_adcd, data);\n      var res = new Object();\n      getstcd(data);\n      res.data = Mogami; // var total = Mogami.length;\n\n      Mogami.map(function (val) {\n        val.children = getChildrenList(val.ad_cd, data); // total += val.children.length;\n\n        recursion(val.children, val.title);\n        return val;\n      }); // console.warn(\"data\",data.length)\n      // console.warn(\"total\",total)\n      // console.warn(\"site\",getSiteList(data))\n\n      return res;\n\n      function getstcd(array) {\n        array.some(function (val, index) {\n          if (val.bj == 0) {\n            res.stcd = val.ad_cd;\n            res.stnm = val.label;\n            return true;\n          }\n        });\n      } // var obj = new Object()\n      // obj.stcd =\n      // 函数\n\n\n      function getMogami(up_adcd, data) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.up_adcd == up_adcd) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function getChildrenList(ad_cd, data) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.up_adcd == ad_cd) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function getSiteList(data) {\n        var newList;\n        newList = data.filter(function (val, index) {\n          if (val.bj == 0) {\n            return true;\n          }\n        });\n        return newList;\n      }\n\n      function recursion(children, title) {\n        if (children.length > 0) {\n          children.map(function (val) {\n            val.children = getChildrenList(val.ad_cd, data); // total += val.children.length;\n\n            recursion(val.children, val.title);\n            return val;\n          });\n        }\n      }\n\n      function addTitle(array, fieldName) {\n        var newList;\n        newList = array.map(function (val) {\n          val.label = val[fieldName];\n\n          if (val.bj == 0) {\n            val.label = \"\".concat(val[fieldName], \"\\u3010\\u7AD9\\u70B9\\u3011\");\n          }\n\n          return val;\n        });\n        return newList;\n      }\n    },\n    // 饿了么日期选择器值过滤\n    elDatePicker_Filter: function elDatePicker_Filter(date, type) {\n      if (date.constructor === Array) {\n        var start, start_Year, start_Month, start_Day, start_Hours, start_Minutes, start_Seconds;\n        start = date[0];\n        start_Year = start.getFullYear();\n        start_Month = addZero(start.getMonth() + 1);\n        start_Day = addZero(start.getDate());\n        start_Hours = addZero(start.getHours());\n        start_Minutes = addZero(start.getMinutes());\n        start_Seconds = addZero(start.getSeconds());\n        start = \"\".concat(start_Year, \"-\").concat(start_Month, \"-\").concat(start_Day, \" \").concat(start_Hours, \":\").concat(start_Minutes);\n        var end, end_Year, end_Month, end_Day, end_Hours, end_Minutes, end_Seconds;\n        end = date[1];\n        end_Year = end.getFullYear();\n        end_Month = addZero(end.getMonth() + 1);\n        end_Day = addZero(end.getDate());\n        end_Hours = addZero(end.getHours());\n        end_Minutes = addZero(end.getMinutes());\n        end_Seconds = addZero(end.getSeconds());\n        end = \"\".concat(end_Year, \"-\").concat(end_Month, \"-\").concat(end_Day, \" \").concat(end_Hours, \":\").concat(end_Minutes);\n\n        if (type) {\n          switch (type) {\n            case \"monthTable\":\n              // return `btt,${start_Year}-${start_Month}-1,${end_Year}-${end_Month}-30`\n              return \"btt,\".concat(start_Year, \"-\").concat(start_Month, \",\").concat(end_Year, \"-\").concat(end_Month);\n            // return {\n            //     YE: `bt,${start_Year},${end_Year}`,\n            //     MON: `bt,${start_Month},${end_Month}`\n            // }\n\n            case \"hourTable\":\n              return \"btt,\".concat(start_Year, \"-\").concat(start_Month, \"-\").concat(start_Day, \" \").concat(start_Hours, \",\").concat(end_Year, \"-\").concat(end_Month, \"-\").concat(end_Day, \" \").concat(end_Hours);\n\n            case \"tenDayTable\":\n              return \"btt,\".concat(start_Year, \"-\").concat(start_Month, \"-1,\").concat(end_Year, \"-\").concat(end_Month, \"-30\");\n\n            case \"dayTable\":\n              return \"btt,\".concat(start_Year, \"-\").concat(start_Month, \"-\").concat(start_Day, \",\").concat(end_Year, \"-\").concat(end_Month, \"-\").concat(end_Day);\n\n            case \"maxQTable\":\n              return \"bt,\".concat(start_Year, \",\").concat(end_Year);\n\n            case \"include_seconds\":\n              return \"btt,\".concat(start, \":\").concat(start_Seconds, \",\").concat(end, \":\").concat(end_Seconds);\n          }\n        }\n\n        return \"btt,\".concat(start, \",\").concat(end);\n      } else if (date.constructor === Date) {\n        var Year, Month, Day, Hours, Minutes;\n        Year = date.getFullYear();\n        Month = addZero(date.getMonth() + 1);\n        Day = addZero(date.getDate());\n        Hours = addZero(date.getHours());\n        Minutes = addZero(date.getMinutes());\n\n        switch (type) {\n          case \"onlyYear\":\n            return Year;\n\n          case \"onlyMonth\":\n            if (Month < 10) Month = \"0\".concat(Month);\n            return \"\".concat(Year, \"-\").concat(Month);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      function addZero(item) {\n        item = String(item);\n\n        if (item.length == 1) {\n          return \"0\".concat(item);\n        }\n\n        return item;\n      }\n    },\n    // 排序过滤\n    sort_Filter: function sort_Filter(item) {\n      var order = item.order,\n          key = item.key;\n\n      switch (order) {\n        case \"normal\":\n          return null;\n\n        case \"asc\":\n          // 升序\n          return \"\".concat(key);\n\n        case \"desc\":\n          // 降序\n          return \"\".concat(key, \" desc\");\n      }\n    },\n    // 闸阀状态历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_KDLS_data_into_ehart_data: function transform_KDLS_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      console.log(_data);\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object(),\n        y3: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"水位过程线\"; // y1轴\n\n          echartData.y1.name = \"库水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n          //\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var tm = val.tm.split(\"  \"); // var time = tm[1];\n\n            var time = \"\".concat(tm[0], \" \").concat(tm[1]);\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n          //\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // // y3轴\n\n          echartData.y3.name = \"月累计水量\"; // Y3轴名字\n          //\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = \"\".concat(val.DT.substring(2), \" \").concat(val.tm); //FilterMethods.methods.dateFilter(val.DT, 3);\n\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n          //\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // // y3轴\n\n          echartData.y3.name = \"月累计水量\"; // Y3轴名字\n          //\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.tm; //FilterMethods.methods.dateFilter(val.DT, 3);\n\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n          // y2轴\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n          //\n          // // y3轴\n\n          echartData.y3.name = \"月累计水量\"; // Y3轴名字\n          //\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = \"\".concat(val.YR, \"-\").concat(val.MON);\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_SWKR_data_into_ehart_data: function transform_SWKR_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      console.log('871', _data);\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"水位库容\"; // y1轴\n\n          echartData.y1.name = \"水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // y2轴\n\n          echartData.y2.name = \"库容\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"STCP\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // y3轴\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.TM.substring(2, val.TM.length - 3);\n            console.log(time);\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            // if(val.TM < 10){\n            //     val.TM = `0${val.TM}`\n            // }\n            var time = \"\".concat(val.dt);\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"日均闸下水位\"; // Y3轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_DWZ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n          //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          // echartData.y3.max = y3max; // y2最大值\n          // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"月均闸下水位\"; // Y3轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_DWZ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n          //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          // echartData.y3.max = y3max; // y2最大值\n          // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = \"\".concat(val.dt);\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_SKSQ_data_into_ehart_data: function transform_SKSQ_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object(),\n        y3: new Object(),\n        y4: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"历史表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // y3轴\n\n          echartData.y3.name = \"出库流量\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"OTQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // y3轴\n\n          echartData.y4.name = \"库容\"; // Y3轴名字\n\n          echartData.y4.list = FilterMethods.methods.newArrayByObjArray(_data, \"W\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            console.log(time);\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            // if(val.TM < 10){\n            //     val.TM = `0${val.TM}`\n            // }\n            var time = \"\".concat(val.dt);\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"日均闸下水位\"; // Y3轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_DWZ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n          //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          // echartData.y3.max = y3max; // y2最大值\n          // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.name = \"库前水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n\n          echartData.y2.name = \"库下水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // // y3轴\n          // echartData.y3.name = \"月均闸下水位\"; // Y3轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_DWZ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n          //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          // echartData.y3.max = y3max; // y2最大值\n          // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = \"\".concat(val.dt);\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 河道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_HDSQ_data_into_ehart_data: function transform_HDSQ_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"水位过程线\"; // y1轴\n\n          echartData.y1.name = \"水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Z\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          echartData.y2.name = \"流量\"; // Y1轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"平均水位\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"平均流量\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"INQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // // y3轴\n          // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            if (val.tm < 10) {\n              val.tm = \"0\".concat(val.tm);\n            }\n\n            var time = \"\".concat(val.DT); //FilterMethods.methods.dateFilter(val.DT, 3);\n\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"日平均水位\"; // Y1轴名字\n          // y2轴\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"INQ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n\n          echartData.y2.name = \"日平均流量\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"日累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.TM;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"月平均水位\"; // Y1轴名字\n          // y2轴\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"INQ\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n\n          echartData.y2.name = \"月平均流量\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"月累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = \"\".concat(val.dt);\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 雨情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_YQ_data_into_ehart_data: function transform_YQ_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      console.log(_data);\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"雨量柱状图\"; // y1轴\n\n          echartData.y1.name = \"降水量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DRP\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"降雨量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          //\n          // // y2轴\n          // echartData.y2.name = \"平均水位\"; // Y2轴名字\n          //\n          // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_Z\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n          // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.DT; //FilterMethods.methods.dateFilter(val.DT, 3);\n\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"p\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"日降雨量\"; // Y1轴名字\n          // y2轴\n          // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", val => {\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // echartData.y2.name = \"日平均水位\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"日累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.TM;\n            return time;\n          });\n          break;\n\n        case \"tenDaysTable\":\n          echartData.chartName = \"旬表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"旬降雨量\"; // Y1轴名字\n          // y2轴\n          // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", val => {\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // echartData.y2.name = \"日平均水位\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"日累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.DT;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"月降雨量\"; // Y1轴名字\n          // y2轴\n          // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Z\", val => {\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // echartData.y2.name = \"月平均水位\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"月累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = \"\".concat(val.DT);\n            return time;\n          });\n          break;\n\n        case \"yearTable\":\n          echartData.chartName = \"年表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          }); // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n          //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          // echartData.y1.max = y1max; // y1最大值\n          // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"年降雨量\"; // Y1轴名字\n          // y2轴\n          // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Z\", val => {\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(2);\n          // });\n          //\n          // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n          //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          // echartData.y2.max = y2max; // y2最大值\n          // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          //\n          // echartData.y2.name = \"月平均水位\"; // Y2轴名字\n          //\n          // // y3轴\n          // echartData.y3.name = \"月累计水量\"; // Y2轴名字\n          //\n          // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\n          //     if (isNaN(val) || val === \"\" || val == null) {\n          //         return 0;\n          //     }\n          //     return parseFloat(val).toFixed(3);\n          // });\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.YR;\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_QDSQ_data_into_ehart_data: function transform_QDSQ_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object(),\n        y3: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"历史表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"Z\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"平均流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_Q\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"平均水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_Z\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n\n          echartData.y3.name = \"小时累计水量\"; // Y2轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.dt; //FilterMethods.methods.dateFilter(val.DT, 3);\n\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_Q\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"日平均流量\"; // Y1轴名字\n          // y2轴\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_Z\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n\n          echartData.y2.name = \"日平均水深\"; // Y2轴名字\n          // y3轴\n\n          echartData.y3.name = \"日累计水量\"; // Y2轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Q\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n\n          echartData.y1.name = \"月平均流量\"; // Y1轴名字\n          // y2轴\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Z\", function (val) {\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n\n          echartData.y2.name = \"月平均水深\"; // Y2轴名字\n          // y3轴\n\n          echartData.y3.name = \"月累计水量\"; // Y2轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          }); // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.dt;\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 闸阀水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_ZFSQ_data_into_ehart_data: function transform_ZFSQ_data_into_ehart_data(data, tableType, reverse) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      if (reverse) {\n        _data = _data.reverse(); // 数组倒序\n      }\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object(),\n        y3: new Object(),\n        y: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"历史表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"闸上水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"UPZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n\n          echartData.y3.name = \"闸下水深\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n              y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          echartData.y3.max = y3max; // y2最大值\n\n          echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            console.log('1895', val.TM);\n            var time = val.TM;\n            return time;\n          }); // y轴\n\n          var ymax_list = [y1max, y2max, y3max];\n          var ymax = FilterMethods.methods.get_echart_max(ymax_list);\n          var ymin_list = [y1max, y2max, y3max];\n          var ymin = FilterMethods.methods.get_echart_max(ymin_list);\n          echartData.y.max = ymax;\n          echartData.y.min = ymin;\n          break;\n\n        case \"hourTable\":\n          echartData.chartName = \"小时表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"闸上水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_UPZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n\n          echartData.y3.name = \"闸下水深\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_DWZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n              y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          echartData.y3.max = y3max; // y2最大值\n\n          echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.dt;\n            return time;\n          });\n          break;\n\n        case \"dayTable\":\n          echartData.chartName = \"日表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"日均闸上水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_UPZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n\n          echartData.y3.name = \"日均闸下水深\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_DWZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n              y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          echartData.y3.max = y3max; // y2最大值\n\n          echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.tm;\n            return time;\n          });\n          break;\n\n        case \"monthTable\":\n          echartData.chartName = \"月表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"月均闸上水深\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_UPZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\n          echartData.y2.max = y2max; // y2最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\n          // y3轴\n\n          echartData.y3.name = \"月均闸下水深\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_DWZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\n              y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\n          echartData.y3.max = y3max; // y2最大值\n\n          echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.dt;\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 闸阀状态历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_ZFZT_data_into_ehart_data: function transform_ZFZT_data_into_ehart_data(data, tableType) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      _data = _data.reverse(); // 数组倒序\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object(),\n        y3: new Object(),\n        y4: new Object(),\n        y: new Object()\n      };\n\n      switch (tableType) {\n        case \"historyTable\":\n          echartData.chartName = \"历史表\"; // y1轴\n\n          echartData.y1.name = \"流量\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(3);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // y2轴\n\n          echartData.y2.name = \"闸上水位\"; // Y2轴名字\n\n          echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"UPZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(3),\n              y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(3);\n          echartData.y2.max = y2max; // y1最大值\n\n          echartData.y2.min = y2min < 0 ? 0 : y2min; // y1最小值\n          // y3轴\n\n          echartData.y3.name = \"闸下水位\"; // Y3轴名字\n\n          echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWZ\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(3),\n              y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(3);\n          echartData.y3.max = y3max; // y3最大值\n\n          echartData.y3.min = y3min < 0 ? 0 : y3min; // y3最小值\n          // y4轴\n\n          echartData.y4.name = \"闸门开度\"; // Y3轴名字\n\n          echartData.y4.list = FilterMethods.methods.newArrayByObjArray(_data, \"OD\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(2);\n          });\n          var y4max = (FilterMethods.methods.get_echart_max(echartData.y4.list) + 0.5).toFixed(3),\n              y4min = (FilterMethods.methods.get_echart_min(echartData.y4.list) - 0.5).toFixed(3);\n          echartData.y4.max = y4max; // y4最大值\n\n          echartData.y4.min = y4min < 0 ? 0 : y4min; // y4最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            // var time = `${index}:00 ~ ${index + 1}:00`;\n            var time = val.TM;\n            return time;\n          }); // y轴\n\n          var ymax_list = [y1max, y2max, y3max, y4max];\n          var ymax = FilterMethods.methods.get_echart_max(ymax_list);\n          var ymin_list = [y1min, y2min, y3min, y4min];\n          var ymin = FilterMethods.methods.get_echart_min(ymin_list);\n\n          if (ymin < 0) {\n            ymin = 0;\n          }\n\n          echartData.y.max = ymax;\n          echartData.y.min = ymin;\n          break;\n      }\n\n      return echartData;\n    },\n    // 运行工况历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\n    transform_YXGK_data_into_ehart_data: function transform_YXGK_data_into_ehart_data(data, tableType) {\n      var _data = JSON.parse(_JSON$stringify(data)); // 数据深拷贝\n\n\n      _data = _data.reverse(); // 数组倒序\n\n      var echartData = {\n        chartName: \"\",\n        x: new Object(),\n        y1: new Object(),\n        y2: new Object()\n      };\n      echartData.chartName = \"\";\n\n      switch (tableType) {\n        case \"zhuangtaishuju\":\n          // y1轴\n          echartData.y1.name = \"电压\"; // Y1轴名字\n\n          echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"VOL\", function (val) {\n            // 过滤\n            if (isNaN(val) || val === \"\" || val == null) {\n              return 0;\n            }\n\n            return _parseFloat(val).toFixed(1);\n          });\n          var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\n              y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\n          echartData.y1.max = y1max; // y1最大值\n\n          echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\n          // x轴\n\n          echartData.x.list = _data.map(function (val, index, array) {\n            var time = val.tm;\n            return time;\n          });\n          break;\n      }\n\n      return echartData;\n    },\n    // 抽离对象数组中每一项对象中某字段组合成新的数组\n    newArrayByObjArray: function newArrayByObjArray(array, attr, callback) {\n      var newArray = array.map(function (val) {\n        var newVal = val[attr];\n\n        if (typeof callback == \"function\") {\n          newVal = callback(newVal);\n        }\n\n        return newVal;\n      });\n      return newArray;\n    },\n    //抽离GIS图层对象数组中每一项对象中某字段组合成新的数组\n    newGisArrayByGisArray: function newGisArrayByGisArray(array, attr, callback) {\n      var newArray = array.map(function (val) {\n        var newVal = val.rowinfo[attr];\n\n        if (typeof callback == \"function\") {\n          newVal = callback(newVal);\n        }\n\n        return newVal;\n      });\n      return newArray;\n    }\n  }\n};\nexport default FilterMethods;",{"version":3,"sources":["D:\\work2022\\visualplace\\zhihuiguanqu\\src\\assets\\commonJS\\FilterMethods.js"],"names":["FilterMethods","methods","dateFilter","tm","number","type","number2","dateArray","split","date1","substring","date2","Z_Filter","Z","figure","toFixed","Z_Filter2","agmt","oFl","result","undefined","length","Float_Filter","Float_Filter2","WPTN_Filter","WPTN","newWPTN","status","symbol","CS_Filter","CS","STGR_Filter","STGR","isNaN","val","STTP_Filter","STTP","get_echart_max","data","JSON","parse","forEach","index","array","splice","max","i","get_echart_min","min","ADDVCD_Array_Filter","ADDVCD_Array","lastADDVCD","likeADDVCD","SUB_ADDVCD_Array_Filter","Canal_Code_Array_Filter","Canal_Code_Array","lastCanal_Code","QuDao_Tree_Filter","addTitle","ganQuList","getGanQuList","map","this_ZhiquList","getZhiquList","canal_code","zhuquVal","this_ZhiQuSite_otherQuDao_List","get_ZhiQuSite_otherQuDao_List","children","this_GanQuSiteList","getGanQuSiteList","concat","other","label","getOtherSiteList","push","guanqutree","Object","siteinfo","some","bj","canal_name","newList","filter","upper_Canal_code","fieldName","XingZheng_Tree_Filter","up_adcd","Mogami","getMogami","res","getstcd","getChildrenList","ad_cd","recursion","title","stcd","stnm","getSiteList","elDatePicker_Filter","date","constructor","Array","start","start_Year","start_Month","start_Day","start_Hours","start_Minutes","start_Seconds","getFullYear","addZero","getMonth","getDate","getHours","getMinutes","getSeconds","end","end_Year","end_Month","end_Day","end_Hours","end_Minutes","end_Seconds","Date","Year","Month","Day","Hours","Minutes","item","String","sort_Filter","order","key","transform_KDLS_data_into_ehart_data","tableType","reverse","_data","console","log","echartData","chartName","x","y1","y2","y3","name","list","newArrayByObjArray","time","DT","YR","MON","transform_SWKR_data_into_ehart_data","TM","dt","transform_SKSQ_data_into_ehart_data","y4","transform_HDSQ_data_into_ehart_data","transform_YQ_data_into_ehart_data","transform_QDSQ_data_into_ehart_data","y1max","y1min","y2max","y2min","transform_ZFSQ_data_into_ehart_data","y","y3max","y3min","ymax_list","ymax","ymin_list","ymin","transform_ZFZT_data_into_ehart_data","y4max","y4min","transform_YXGK_data_into_ehart_data","attr","callback","newArray","newVal","newGisArrayByGisArray","rowinfo"],"mappings":"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","sourcesContent":["var FilterMethods =\r\n{\r\n    methods: {\r\n        // 日期过滤器\r\n        dateFilter(tm, number, type, number2) {\r\n            if (tm) {\r\n                var dateArray = tm.split(' ');\r\n                var date1 = dateArray[0]\r\n                if (!number2 && number2 !== 0) {\r\n                    date1 = dateArray[0].substring(2)\r\n                } else {\r\n                    date1 = dateArray[0].substring(number2)\r\n                }\r\n\r\n                var date2 = dateArray[1];\r\n                // console.log(date1,date2)\r\n                // console.log(date1);\r\n                if (date2) {\r\n                    date2 = date2.substring(0, number || 5)\r\n                } else {\r\n                    date2 = ''\r\n                }\r\n\r\n                if (type) {\r\n                    switch (type) {\r\n                        case \"onlyDate\":\r\n                            return `${date1}`;\r\n\r\n                        case \"onlyTime\":\r\n                            return `${date2}${number == 2 ? ':00' : ''}`;\r\n                    }\r\n                }\r\n                // return date;\r\n                return `${date1}  ${date2}`;\r\n            } else {\r\n                return ''\r\n            }\r\n        },\r\n        // 水位过滤器\r\n        Z_Filter(Z, figure) {\r\n            if (Z) {\r\n                var Z = parseFloat(Z);\r\n\r\n                if (Z !== 0) {\r\n                    return Z.toFixed(figure || 2);\r\n                }\r\n                return '';\r\n            } else {\r\n                return ''\r\n            }\r\n\r\n        },\r\n\r\n        // 流量过滤器\r\n        Z_Filter2(agmt){\r\n            // debugger;\r\n            let oFl = agmt.split('.')\r\n            let result = null\r\n            if(oFl[1] === undefined){\r\n                result = `${agmt}.00`\r\n            }else if(oFl[1].length === 1){\r\n                result = `${agmt}0`\r\n            }else if(oFl[1].length === 2){\r\n                result = `${agmt}`\r\n            }else if(oFl[1].length >= 3){\r\n                result = `${agmt.substring(0,agmt.length - 1)}`\r\n            }else {\r\n                result = agmt\r\n            }\r\n            return result\r\n        },\r\n\r\n        // 浮点型数值过滤器\r\n        Float_Filter(Z, figure) {\r\n            if (Z) {\r\n                var Z = parseFloat(Z);\r\n\r\n                if (Z !== 0) {\r\n                    return Z.toFixed(figure || 2);\r\n                }\r\n                return '';\r\n            } else {\r\n                return ''\r\n            }\r\n\r\n        },\r\n        // 浮点型数值过滤器\r\n        Float_Filter2(Z, figure) {\r\n            if (Z) {\r\n                var Z = parseFloat(Z);\r\n\r\n                if (Z !== 0) {\r\n                    return Z.toFixed(1);\r\n                }\r\n                return '';\r\n            } else {\r\n                return ''\r\n            }\r\n\r\n        },\r\n        // 水势过滤器\r\n        WPTN_Filter(WPTN) {\r\n            if (WPTN) {\r\n                var WPTN = parseInt(WPTN);\r\n                var newWPTN;\r\n                switch (WPTN) {\r\n                    case 6:\r\n                        newWPTN = {\r\n                            status: WPTN,\r\n                            symbol: \"一\"\r\n                        };\r\n                        break;\r\n                    case 5:\r\n\r\n                        newWPTN = {\r\n                            status: WPTN,\r\n                            symbol: \"↑\"\r\n                        };\r\n                        break;\r\n                    case 4:\r\n\r\n                        newWPTN = {\r\n                            status: WPTN,\r\n                            symbol: \"↓\"\r\n                        };\r\n                        break;\r\n                    case 0:\r\n\r\n                        newWPTN = {\r\n                            status: 6,\r\n                            symbol: \"一\"\r\n                        };\r\n                        break;\r\n                    default:\r\n\r\n                        newWPTN = {\r\n                            status: 6,\r\n                            symbol: \"一\"\r\n                        };\r\n                        break\r\n\r\n                }\r\n\r\n                return newWPTN;\r\n            } else {\r\n                return {\r\n                    status: 6,\r\n                    symbol: \"一\"\r\n                };\r\n            }\r\n\r\n        },\r\n        // 通讯状态过滤器\r\n        CS_Filter(CS) {\r\n            if (CS && CS == 1) {\r\n                return \"正常\"\r\n            } else {\r\n                return \"异常\"\r\n            }\r\n        },\r\n        //\r\n        STGR_Filter(STGR) {\r\n            var STGR = parseInt(STGR);\r\n            if (isNaN(STGR)) {\r\n                return \"\"\r\n            } else {\r\n                var val;\r\n                switch (STGR) {\r\n                    case 1:\r\n                        val = \"国家重要站\"\r\n                        break;\r\n\r\n                    case 2:\r\n                        val = \"省级重要站\"\r\n                        break;\r\n                    case 3:\r\n                        val = \"一般站\"\r\n                        break;\r\n                    case 4:\r\n                        val = \"实验或专用站\"\r\n                        break;\r\n                    case 5:\r\n                        val = \"山洪站\"\r\n                        break;\r\n\r\n                    case 6:\r\n                        val = \"临时站\"\r\n                        break;\r\n                    case 7:\r\n                        val = \"其他站\"\r\n                        break;\r\n\r\n                    case 8:\r\n                        val = \"灌区站\"\r\n                        break;\r\n                }\r\n                return val;\r\n            }\r\n        },\r\n        // 站点大类归属过滤器\r\n        STTP_Filter(STTP) {\r\n            switch (STTP) {\r\n\r\n                case \"MM\":\r\n                    STTP = \"气象站\"\r\n                    break;\r\n                case \"PP\":\r\n                    STTP = \"雨量站\"\r\n                    break;\r\n                case \"BB\":\r\n                    STTP = \"蒸发站\"\r\n                    break;\r\n                case \"ZQ\":\r\n                    STTP = \"流量站\"\r\n                    break;\r\n                case \"DD\":\r\n                    STTP = \"堰（闸）水位站\"\r\n                    break;\r\n                case \"ZZ\":\r\n                    STTP = \"河道水位站\"\r\n                    break;\r\n                case \"TT\":\r\n                    STTP = \"潮位站\"\r\n                    break;\r\n                case \"RR\":\r\n                    STTP = \"水库站\"\r\n                    break;\r\n                case \"DP\":\r\n                    STTP = \"泵站\"\r\n                    break;\r\n                case \"ZG\":\r\n                    STTP = \"地下水位站\"\r\n                    break;\r\n                case \"SS\":\r\n                    STTP = \"墒情站\"\r\n                    break;\r\n                case \"WQ\":\r\n                    STTP = \"水质站\"\r\n                    break;\r\n                case \"SD\":\r\n                    STTP = \"泥沙\"\r\n                    break;\r\n                case \"PH\":\r\n                    STTP = \"图像站\"\r\n                    break;\r\n                case \"TV\":\r\n                    STTP = \"视频站\"\r\n                    break;\r\n                case \"GC\":\r\n                    STTP = \"闸控站\"\r\n                    break;\r\n                case \"CQ\":\r\n                    STTP = \"渠道水位站\"\r\n                    break;\r\n            }\r\n            return STTP;\r\n        },\r\n        //动态统计图Y轴最大值\r\n        get_echart_max(data) {\r\n            var data = JSON.parse(JSON.stringify(data));\r\n            data.forEach((val, index, array) => {\r\n                if (val == '') {\r\n                    array.splice(index, 1);\r\n                }\r\n            });\r\n            var max = data[0];\r\n            for (var i = 1; i < data.length; i++) {\r\n                if (parseFloat(data[i]) > parseFloat(max)) {\r\n                    max = data[i];\r\n                }\r\n            }\r\n            return parseFloat(max);\r\n        },\r\n        //动态统计图Y轴最小值\r\n        get_echart_min(data) {\r\n            var data = JSON.parse(JSON.stringify(data));\r\n            data.forEach((val, index, array) => {\r\n                if (val == '') {\r\n                    array.splice(index, 1);\r\n                }\r\n            });\r\n            var min = data[0];\r\n            for (var i = 1; i < data.length; i++) {\r\n                if (parseFloat(data[i]) < parseFloat(min)) {\r\n                    min = data[i];\r\n                }\r\n            }\r\n            return parseFloat(min);\r\n        },\r\n        // 按层级截取行政区划码长度 县 乡镇 村\r\n        ADDVCD_Array_Filter(ADDVCD_Array) {\r\n            var length = ADDVCD_Array.length;\r\n            var lastADDVCD = ADDVCD_Array[length - 1];\r\n            var likeADDVCD;\r\n            switch (length) {\r\n                case 1:\r\n                    likeADDVCD = lastADDVCD.substring(0, 6);\r\n                    break;\r\n                case 2:\r\n                    likeADDVCD = lastADDVCD.substring(0, 9);\r\n                    break;\r\n                case 3:\r\n                    likeADDVCD = lastADDVCD.substring(0, 12);\r\n                    break;\r\n            }\r\n            return likeADDVCD;\r\n        },\r\n        // 按层级截取行政区划码长度   乡镇 村\r\n        SUB_ADDVCD_Array_Filter(ADDVCD_Array) {\r\n            var length = ADDVCD_Array.length;\r\n            var lastADDVCD = ADDVCD_Array[length - 1];\r\n            var likeADDVCD;\r\n            switch (length) {\r\n                case 1:\r\n                    likeADDVCD = lastADDVCD.substring(0, 9);\r\n                    break;\r\n                case 2:\r\n                    likeADDVCD = lastADDVCD.substring(0, 12);\r\n                    break;\r\n            }\r\n            return likeADDVCD;\r\n        },\r\n        // 按层级截取渠道编码长度\r\n        Canal_Code_Array_Filter(Canal_Code_Array) {\r\n            var length = Canal_Code_Array.length;\r\n            var lastCanal_Code = Canal_Code_Array[length - 1];\r\n            // var likeCanal_Code;\r\n            // switch (length) {\r\n            //     case 1:\r\n            //         likeCanal_Code = lastCanal_Code.substring(0, 5);\r\n            //         break;\r\n            //     case 2:\r\n            //         likeCanal_Code = lastCanal_Code.substring(0, 9);\r\n            //         break;\r\n            // }\r\n            return lastCanal_Code;\r\n        },\r\n        // 渠道树\r\n        QuDao_Tree_Filter(data) {\r\n            // var totalLength = 0;\r\n\r\n            data = addTitle(data, \"canal_name\"); // 增加标题\r\n\r\n            var ganQuList = getGanQuList(data);\r\n\r\n            // totalLength += ganQuList.length;\r\n\r\n            ganQuList = ganQuList.map((val) => {\r\n                // 支渠\r\n                var this_ZhiquList = getZhiquList(data, val.canal_code);\r\n\r\n\r\n                this_ZhiquList.map((zhuquVal) => { // 支渠站加其他渠道\r\n                    var this_ZhiQuSite_otherQuDao_List = get_ZhiQuSite_otherQuDao_List(data, zhuquVal.canal_code);\r\n                    zhuquVal.children = this_ZhiQuSite_otherQuDao_List;\r\n                    // if (zhuquVal.children.length > 0) {\r\n                    //     totalLength += zhuquVal.children.length;\r\n                    //     console.log(zhuquVal.canal_name,zhuquVal.children);\r\n                    // }\r\n                    return zhuquVal;\r\n                });\r\n\r\n                // 干渠站\r\n                var this_GanQuSiteList = getGanQuSiteList(data, val.canal_code);\r\n                val.children = this_ZhiquList.concat(this_GanQuSiteList);\r\n                // totalLength += val.children.length\r\n                return val;\r\n            })\r\n\r\n\r\n\r\n            var other = {\r\n                label: \"其他\",\r\n                children: getOtherSiteList(data)\r\n            };\r\n            ganQuList.push(other);\r\n            // totalLength += other.children.length\r\n            // console.log(\"dataLength\", data.length)\r\n            // console.log(\"totalLength\", totalLength)\r\n\r\n            var guanqutree = new Object();\r\n            var siteinfo = new Object();\r\n            data.some((val,index) => {\r\n                if(val.bj == 0){\r\n                    siteinfo.canal_name = val.canal_name;\r\n                    siteinfo.canal_code = val.canal_code;\r\n                    return true;\r\n                }\r\n            });\r\n            guanqutree.siteinfo = siteinfo;\r\n            guanqutree.data = ganQuList;\r\n            return guanqutree;\r\n\r\n            // 函数\r\n            function getGanQuList(data) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.upper_Canal_code == -1 && val.bj == 1) {\r\n                        return true;\r\n                    }\r\n                })\r\n                return newList;\r\n            }\r\n\r\n\r\n            function getOtherSiteList(data) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.upper_Canal_code == -1 && val.bj == 0) {\r\n                        return true;\r\n                    }\r\n                })\r\n                return newList;\r\n            }\r\n\r\n            function getZhiquList(data, upper_Canal_code) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.upper_Canal_code == upper_Canal_code && val.bj == \"1\") {\r\n                        return true\r\n                    }\r\n                })\r\n                return newList\r\n            }\r\n\r\n            function getGanQuSiteList(data, upper_Canal_code) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.upper_Canal_code == upper_Canal_code && val.bj == \"0\") {\r\n                        return true\r\n                    }\r\n                })\r\n                return newList\r\n            }\r\n\r\n            function get_ZhiQuSite_otherQuDao_List(data, upper_Canal_code) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.upper_Canal_code == upper_Canal_code) {\r\n                        return true\r\n                    }\r\n                })\r\n                return newList\r\n            }\r\n\r\n            function addTitle(array, fieldName) {\r\n                var newList;\r\n                newList = array.map((val) => {\r\n                    val.label = val[fieldName];\r\n                    if (val.bj == 0) {\r\n                        val.label = `${val[fieldName]}【站点】`;\r\n                    }\r\n                    return val;\r\n                })\r\n                return newList;\r\n            }\r\n        },\r\n        // 行政区划树\r\n        XingZheng_Tree_Filter(up_adcd, data) {\r\n            data = addTitle(data, \"ad_nm\"); // 增加标题\r\n\r\n            var Mogami = getMogami(up_adcd, data);\r\n\r\n            var res = new Object();\r\n\r\n            getstcd(data);\r\n\r\n            res.data = Mogami;\r\n            // var total = Mogami.length;\r\n\r\n            Mogami.map(val => {\r\n                val.children = getChildrenList(val.ad_cd, data);\r\n                // total += val.children.length;\r\n                recursion(val.children, val.title);\r\n\r\n                return val;\r\n            })\r\n            // console.warn(\"data\",data.length)\r\n            // console.warn(\"total\",total)\r\n            // console.warn(\"site\",getSiteList(data))\r\n            return res;\r\n\r\n            function getstcd(array) {\r\n                array.some((val, index) => {\r\n                    if (val.bj == 0) {\r\n                        res.stcd = val.ad_cd;\r\n                        res.stnm = val.label;\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n            // var obj = new Object()\r\n            // obj.stcd =\r\n            // 函数\r\n            function getMogami(up_adcd, data) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.up_adcd == up_adcd) {\r\n                        return true;\r\n                    }\r\n                })\r\n                return newList;\r\n            }\r\n\r\n            function getChildrenList(ad_cd, data) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.up_adcd == ad_cd) {\r\n                        return true;\r\n                    }\r\n                })\r\n                return newList;\r\n            }\r\n\r\n            function getSiteList(data) {\r\n                var newList;\r\n                newList = data.filter((val, index) => {\r\n                    if (val.bj == 0) {\r\n                        return true;\r\n                    }\r\n                })\r\n                return newList;\r\n            }\r\n\r\n            function recursion(children, title) {\r\n                if (children.length > 0) {\r\n                    children.map(val => {\r\n                        val.children = getChildrenList(val.ad_cd, data);\r\n                        // total += val.children.length;\r\n                        recursion(val.children, val.title);\r\n                        return val\r\n                    })\r\n\r\n                }\r\n            }\r\n\r\n            function addTitle(array, fieldName) {\r\n                var newList;\r\n                newList = array.map((val) => {\r\n                    val.label = val[fieldName];\r\n                    if (val.bj == 0) {\r\n                        val.label = `${val[fieldName]}【站点】`;\r\n                    }\r\n\r\n                    return val;\r\n                })\r\n                return newList;\r\n            }\r\n        },\r\n        // 饿了么日期选择器值过滤\r\n        elDatePicker_Filter(date, type) {\r\n            if (date.constructor === Array) {\r\n                var start, start_Year, start_Month, start_Day, start_Hours, start_Minutes, start_Seconds;\r\n                start = date[0];\r\n                start_Year = start.getFullYear();\r\n                start_Month = addZero((start.getMonth() + 1));\r\n                start_Day = addZero(start.getDate());\r\n                start_Hours = addZero(start.getHours());\r\n                start_Minutes = addZero(start.getMinutes());\r\n                start_Seconds = addZero(start.getSeconds());\r\n\r\n                start = `${start_Year}-${start_Month}-${start_Day} ${start_Hours}:${start_Minutes}`;\r\n\r\n                var end, end_Year, end_Month, end_Day, end_Hours, end_Minutes, end_Seconds;\r\n                end = date[1];\r\n                end_Year = end.getFullYear();\r\n                end_Month = addZero(end.getMonth() + 1);\r\n                end_Day = addZero(end.getDate());\r\n                end_Hours = addZero(end.getHours());\r\n                end_Minutes = addZero(end.getMinutes());\r\n                end_Seconds = addZero(end.getSeconds());\r\n\r\n                end = `${end_Year}-${end_Month}-${end_Day} ${end_Hours}:${end_Minutes}`;\r\n\r\n                if (type) {\r\n                    switch (type) {\r\n                        case \"monthTable\":\r\n                            // return `btt,${start_Year}-${start_Month}-1,${end_Year}-${end_Month}-30`\r\n                            return `btt,${start_Year}-${start_Month},${end_Year}-${end_Month}`\r\n                        // return {\r\n                        //     YE: `bt,${start_Year},${end_Year}`,\r\n                        //     MON: `bt,${start_Month},${end_Month}`\r\n                        // }\r\n                        case \"hourTable\":\r\n                            return `btt,${start_Year}-${start_Month}-${start_Day} ${start_Hours},${end_Year}-${end_Month}-${end_Day} ${end_Hours}`\r\n                        case \"tenDayTable\":\r\n                            return `btt,${start_Year}-${start_Month}-1,${end_Year}-${end_Month}-30`\r\n                        case \"dayTable\":\r\n                            return `btt,${start_Year}-${start_Month}-${start_Day},${end_Year}-${end_Month}-${end_Day}`\r\n                        case \"maxQTable\":\r\n                            return `bt,${start_Year},${end_Year}`\r\n                        case \"include_seconds\":\r\n                            return `btt,${start}:${start_Seconds},${end}:${end_Seconds}`;\r\n                    }\r\n\r\n                }\r\n\r\n                return `btt,${start},${end}`;\r\n\r\n\r\n            } else if (date.constructor === Date) {\r\n                var Year, Month, Day, Hours, Minutes;\r\n                Year = date.getFullYear();\r\n                Month = addZero((date.getMonth() + 1));\r\n                Day = addZero(date.getDate());\r\n                Hours = addZero(date.getHours());\r\n                Minutes = addZero(date.getMinutes());\r\n\r\n                switch (type) {\r\n                    case \"onlyYear\":\r\n\r\n                        return Year;\r\n\r\n                    case \"onlyMonth\":\r\n                        if(Month < 10) Month = `0${Month}`\r\n                        return `${Year}-${Month}`;\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            function addZero(item) {\r\n                item = String(item);\r\n                if (item.length == 1) {\r\n                    return `0${item}`\r\n                }\r\n\r\n                return item;\r\n            }\r\n\r\n        },\r\n        // 排序过滤\r\n        sort_Filter(item) {\r\n            var order = item.order,\r\n                key = item.key;\r\n            switch (order) {\r\n                case \"normal\":\r\n                    return null;\r\n                case \"asc\": // 升序\r\n                    return `${key}`;\r\n                case \"desc\": // 降序\r\n                    return `${key} desc`;\r\n            }\r\n        },\r\n        // 闸阀状态历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        transform_KDLS_data_into_ehart_data(data, tableType, reverse) {\r\n            var _data = JSON.parse(JSON.stringify(data)); // 数据深拷贝\r\n            if (reverse) {\r\n                _data = _data.reverse(); // 数组倒序\r\n            }\r\n            console.log(_data);\r\n            var echartData = {\r\n                chartName: \"\",\r\n                x: new Object(),\r\n                y1: new Object(),\r\n                y2: new Object(),\r\n                y3: new Object()\r\n\r\n            }\r\n            switch (tableType) {\r\n                case \"historyTable\":\r\n                    echartData.chartName = \"水位过程线\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"库水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // // y2轴\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n                    //\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var tm = val.tm.split(\"  \")\r\n                        // var time = tm[1];\r\n                        var time = `${tm[0]} ${tm[1]}`;\r\n                        return time;\r\n                    });\r\n\r\n\r\n                    break;\r\n                case \"hourTable\":\r\n                    echartData.chartName = \"小时表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"库前水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n                    //\r\n                    // // y2轴\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n                    //\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // // y3轴\r\n                    echartData.y3.name = \"月累计水量\"; // Y3轴名字\r\n                    //\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(3);\r\n                    // });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = `${val.DT.substring(2)} ${val.tm}` //FilterMethods.methods.dateFilter(val.DT, 3);\r\n                        return time;\r\n                    });\r\n\r\n                    break;\r\n                case \"dayTable\":\r\n                    echartData.chartName = \"日表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"库前水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n                    //\r\n                    // // y2轴\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n                    //\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // // y3轴\r\n                    echartData.y3.name = \"月累计水量\"; // Y3轴名字\r\n                    //\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(3);\r\n                    // });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = val.tm; //FilterMethods.methods.dateFilter(val.DT, 3);\r\n                        return time;\r\n                    });\r\n                    break;\r\n                case \"monthTable\":\r\n                    echartData.chartName = \"月表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    echartData.y1.name = \"库前水位\"; // Y1轴名字\r\n\r\n\r\n                    // y2轴\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n                    //\r\n                    // // y3轴\r\n                    echartData.y3.name = \"月累计水量\"; // Y3轴名字\r\n                    //\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = `${val.YR}-${val.MON}`;\r\n                        return time;\r\n                    });\r\n                    break;\r\n\r\n            }\r\n\r\n            return echartData;\r\n        },\r\n\r\n        // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        transform_SWKR_data_into_ehart_data(data, tableType, reverse) {\r\n            var _data = JSON.parse(JSON.stringify(data)); // 数据深拷贝\r\n            console.log('871',_data);\r\n            if (reverse) {\r\n                _data = _data.reverse(); // 数组倒序\r\n            }\r\n\r\n            var echartData = {\r\n                chartName: \"\",\r\n                x: new Object(),\r\n                y1: new Object(),\r\n                y2: new Object(),\r\n            }\r\n            switch (tableType) {\r\n                case \"historyTable\":\r\n                    echartData.chartName = \"水位库容\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"库容\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"STCP\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    // y3轴\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.TM.substring(2,val.TM.length-3);\r\n                        console.log(time)\r\n                        return time\r\n                    });\r\n\r\n                    break;\r\n                case \"hourTable\":\r\n                    echartData.chartName = \"小时表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"库前水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n\r\n                    // // y2轴\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        // if(val.TM < 10){\r\n                        //     val.TM = `0${val.TM}`\r\n                        // }\r\n                        var time = `${val.dt}`;\r\n                        return time;\r\n                    });\r\n\r\n\r\n                    break;\r\n                case \"dayTable\":\r\n                    echartData.chartName = \"日表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"库前水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n                    //\r\n                    // // y2轴\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"日均闸下水位\"; // Y3轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_DWZ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(2);\r\n                    // });\r\n                    //\r\n                    // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\r\n                    //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\r\n                    // echartData.y3.max = y3max; // y2最大值\r\n                    // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.tm;\r\n                        return time;\r\n                    });\r\n\r\n\r\n                    break;\r\n                case \"monthTable\":\r\n                    echartData.chartName = \"月表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"库前水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n                    //\r\n                    // // y2轴\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"月均闸下水位\"; // Y3轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_DWZ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(2);\r\n                    // });\r\n                    //\r\n                    // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\r\n                    //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\r\n                    // echartData.y3.max = y3max; // y2最大值\r\n                    // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = `${val.dt}`;\r\n                        return time;\r\n                    });\r\n                    break;\r\n\r\n            }\r\n\r\n            return echartData;\r\n        },\r\n\r\n        // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        transform_SKSQ_data_into_ehart_data(data, tableType, reverse) {\r\n            var _data = JSON.parse(JSON.stringify(data)); // 数据深拷贝\r\n            if (reverse) {\r\n                _data = _data.reverse(); // 数组倒序\r\n            }\r\n\r\n            var echartData = {\r\n                chartName: \"\",\r\n                x: new Object(),\r\n                y1: new Object(),\r\n                y2: new Object(),\r\n                y3: new Object(),\r\n                y4: new Object(),\r\n            }\r\n            switch (tableType) {\r\n                case \"historyTable\":\r\n                    echartData.chartName = \"历史表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"库前水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    // y3轴\r\n                    echartData.y3.name = \"出库流量\"; // Y3轴名字\r\n\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"OTQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    // y3轴\r\n                    echartData.y4.name = \"库容\"; // Y3轴名字\r\n\r\n                    echartData.y4.list = FilterMethods.methods.newArrayByObjArray(_data, \"W\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.tm\r\n                        console.log(time)\r\n                        return time;\r\n                    });\r\n                    break;\r\n                case \"hourTable\":\r\n                    echartData.chartName = \"小时表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"库前水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n\r\n                    // // y2轴\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        // if(val.TM < 10){\r\n                        //     val.TM = `0${val.TM}`\r\n                        // }\r\n                        var time = `${val.dt}`;\r\n                        return time;\r\n                    });\r\n\r\n\r\n                    break;\r\n                case \"dayTable\":\r\n                    echartData.chartName = \"日表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"库前水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n                    //\r\n                    // // y2轴\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"日均闸下水位\"; // Y3轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_DWZ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(2);\r\n                    // });\r\n                    //\r\n                    // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\r\n                    //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\r\n                    // echartData.y3.max = y3max; // y2最大值\r\n                    // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.tm;\r\n                        return time;\r\n                    });\r\n\r\n\r\n                    break;\r\n                case \"monthTable\":\r\n                    echartData.chartName = \"月表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"库前水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n                    //\r\n                    // // y2轴\r\n                    echartData.y2.name = \"库下水位\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"BLRZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"月均闸下水位\"; // Y3轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_DWZ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(2);\r\n                    // });\r\n                    //\r\n                    // var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\r\n                    //     y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\r\n                    // echartData.y3.max = y3max; // y2最大值\r\n                    // echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = `${val.dt}`;\r\n                        return time;\r\n                    });\r\n                    break;\r\n\r\n            }\r\n\r\n            return echartData;\r\n        },\r\n        // 河道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        transform_HDSQ_data_into_ehart_data(data, tableType, reverse) {\r\n            var _data = JSON.parse(JSON.stringify(data)); // 数据深拷贝\r\n            if (reverse) {\r\n                _data = _data.reverse(); // 数组倒序\r\n            }\r\n\r\n            var echartData = {\r\n                chartName: \"\",\r\n                x: new Object(),\r\n                y1: new Object(),\r\n                y2: new Object()\r\n            }\r\n            switch (tableType) {\r\n                case \"historyTable\":\r\n                    echartData.chartName = \"水位过程线\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Z\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    echartData.y2.name = \"流量\"; // Y1轴名字\r\n\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.tm;\r\n                        return time;\r\n                    });\r\n\r\n\r\n                    break;\r\n                case \"hourTable\":\r\n                    echartData.chartName = \"小时表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"平均水位\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"平均流量\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"INQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(3);\r\n                    // });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        if(val.tm < 10){\r\n                            val.tm = `0${val.tm}`\r\n                        }\r\n                        var time = `${val.DT}` //FilterMethods.methods.dateFilter(val.DT, 3);\r\n                        return time;\r\n                    });\r\n\r\n                    break;\r\n                case \"dayTable\":\r\n                    echartData.chartName = \"日表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    echartData.y1.name = \"日平均水位\"; // Y1轴名字\r\n\r\n\r\n                    // y2轴\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"INQ\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    echartData.y2.name = \"日平均流量\"; // Y2轴名字\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"日累计水量\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(3);\r\n                    // });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = val.TM;\r\n                        return time;\r\n                    });\r\n                    break;\r\n                case \"monthTable\":\r\n                    echartData.chartName = \"月表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"RZ\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    echartData.y1.name = \"月平均水位\"; // Y1轴名字\r\n\r\n\r\n                    // y2轴\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"INQ\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    echartData.y2.name = \"月平均流量\"; // Y2轴名字\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"月累计水量\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(3);\r\n                    // });\r\n\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = `${val.dt}`;\r\n                        return time;\r\n                    });\r\n                    break;\r\n\r\n            }\r\n\r\n            return echartData;\r\n        },\r\n        // 雨情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        transform_YQ_data_into_ehart_data(data, tableType, reverse) {\r\n            var _data = JSON.parse(JSON.stringify(data)); // 数据深拷贝\r\n            console.log(_data)\r\n            if (reverse) {\r\n                _data = _data.reverse(); // 数组倒序\r\n            }\r\n\r\n            var echartData = {\r\n                chartName: \"\",\r\n                x: new Object(),\r\n                y1: new Object(),\r\n            }\r\n            switch (tableType) {\r\n                case \"historyTable\":\r\n                    echartData.chartName = \"雨量柱状图\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"降水量\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DRP\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(1);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.tm;\r\n                        return time;\r\n                    });\r\n\r\n\r\n                    break;\r\n                case \"hourTable\":\r\n                    echartData.chartName = \"小时表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"降雨量\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(1);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n                    //\r\n                    // // y2轴\r\n                    // echartData.y2.name = \"平均水位\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_Z\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(2);\r\n                    // });\r\n\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    // y3轴\r\n                    // echartData.y3.name = \"小时累计水量\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(3);\r\n                    // });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = val.DT //FilterMethods.methods.dateFilter(val.DT, 3);\r\n                        return time;\r\n                    });\r\n                    \r\n                    break;\r\n                case \"dayTable\":\r\n                    echartData.chartName = \"日表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"p\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(1);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    echartData.y1.name = \"日降雨量\"; // Y1轴名字\r\n\r\n\r\n                    // y2轴\r\n                    // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", val => {\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(2);\r\n                    // });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    // echartData.y2.name = \"日平均水位\"; // Y2轴名字\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"日累计水量\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(3);\r\n                    // });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = val.TM;\r\n                        return time;\r\n                    });\r\n                    break;\r\n                case \"tenDaysTable\":\r\n                    echartData.chartName = \"旬表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(1);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    echartData.y1.name = \"旬降雨量\"; // Y1轴名字\r\n\r\n\r\n                    // y2轴\r\n                    // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", val => {\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(2);\r\n                    // });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    // echartData.y2.name = \"日平均水位\"; // Y2轴名字\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"日累计水量\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(3);\r\n                    // });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = val.DT;\r\n                        return time;\r\n                    });\r\n                    break;\r\n                case \"monthTable\":\r\n                    echartData.chartName = \"月表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(1);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    echartData.y1.name = \"月降雨量\"; // Y1轴名字\r\n\r\n\r\n                    // y2轴\r\n                    // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Z\", val => {\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(2);\r\n                    // });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    // echartData.y2.name = \"月平均水位\"; // Y2轴名字\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"月累计水量\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(3);\r\n                    // });\r\n\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = `${val.DT}`;\r\n                        return time;\r\n                    });\r\n                    break;\r\n                case \"yearTable\":\r\n                    echartData.chartName = \"年表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"P\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(1);\r\n                    });\r\n\r\n                    // var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                    //     y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    // echartData.y1.max = y1max; // y1最大值\r\n                    // echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    echartData.y1.name = \"年降雨量\"; // Y1轴名字\r\n\r\n\r\n                    // y2轴\r\n                    // echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Z\", val => {\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(2);\r\n                    // });\r\n                    //\r\n                    // var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                    //     y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    // echartData.y2.max = y2max; // y2最大值\r\n                    // echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n                    //\r\n                    // echartData.y2.name = \"月平均水位\"; // Y2轴名字\r\n                    //\r\n                    // // y3轴\r\n                    // echartData.y3.name = \"月累计水量\"; // Y2轴名字\r\n                    //\r\n                    // echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\r\n                    //     if (isNaN(val) || val === \"\" || val == null) {\r\n                    //         return 0;\r\n                    //     }\r\n                    //     return parseFloat(val).toFixed(3);\r\n                    // });\r\n\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = val.YR;\r\n                        return time;\r\n                    });\r\n                    break;\r\n            }\r\n\r\n            return echartData;\r\n        },\r\n        // 渠道水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        transform_QDSQ_data_into_ehart_data(data, tableType, reverse) {\r\n            var _data = JSON.parse(JSON.stringify(data)); // 数据深拷贝\r\n            if (reverse) {\r\n                _data = _data.reverse(); // 数组倒序\r\n            }\r\n\r\n            var echartData = {\r\n                chartName: \"\",\r\n                x: new Object(),\r\n                y1: new Object(),\r\n                y2: new Object(),\r\n                y3: new Object(),\r\n            }\r\n            switch (tableType) {\r\n                case \"historyTable\":\r\n                    echartData.chartName = \"历史表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"流量\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                        y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"水深\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"Z\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                        y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    echartData.y2.max = y2max; // y2最大值\r\n                    echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.tm;\r\n                        return time;\r\n                    });\r\n\r\n\r\n                    break;\r\n                case \"hourTable\":\r\n                    echartData.chartName = \"小时表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"平均流量\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                        y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"平均水深\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_Z\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                        y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    echartData.y2.max = y2max; // y2最大值\r\n                    echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    // y3轴\r\n                    echartData.y3.name = \"小时累计水量\"; // Y2轴名字\r\n\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = val.dt //FilterMethods.methods.dateFilter(val.DT, 3);\r\n                        return time;\r\n                    });\r\n\r\n                    break;\r\n                case \"dayTable\":\r\n                    echartData.chartName = \"日表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_Q\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                        y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    echartData.y1.name = \"日平均流量\"; // Y1轴名字\r\n\r\n\r\n                    // y2轴\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_Z\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                        y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    echartData.y2.max = y2max; // y2最大值\r\n                    echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    echartData.y2.name = \"日平均水深\"; // Y2轴名字\r\n\r\n                    // y3轴\r\n                    echartData.y3.name = \"日累计水量\"; // Y2轴名字\r\n\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = val.tm;\r\n                        return time;\r\n                    });\r\n                    break;\r\n                case \"monthTable\":\r\n                    echartData.chartName = \"月表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Q\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                        y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    echartData.y1.name = \"月平均流量\"; // Y1轴名字\r\n\r\n\r\n                    // y2轴\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_Z\", val => {\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                        y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    echartData.y2.max = y2max; // y2最大值\r\n                    echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    echartData.y2.name = \"月平均水深\"; // Y2轴名字\r\n\r\n                    // y3轴\r\n                    echartData.y3.name = \"月累计水量\"; // Y2轴名字\r\n\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MWQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        var time = val.dt;\r\n                        return time;\r\n                    });\r\n                    break;\r\n\r\n            }\r\n\r\n            return echartData;\r\n        },\r\n        // 闸阀水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        transform_ZFSQ_data_into_ehart_data(data, tableType, reverse) {\r\n            var _data = JSON.parse(JSON.stringify(data)); // 数据深拷贝\r\n            if (reverse) {\r\n                _data = _data.reverse(); // 数组倒序\r\n            }\r\n\r\n            var echartData = {\r\n                chartName: \"\",\r\n                x: new Object(),\r\n                y1: new Object(),\r\n                y2: new Object(),\r\n                y3: new Object(),\r\n                y: new Object()\r\n            }\r\n            switch (tableType) {\r\n                case \"historyTable\":\r\n                    echartData.chartName = \"历史表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"流量\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                        y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"闸上水深\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"UPZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                        y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    echartData.y2.max = y2max; // y2最大值\r\n                    echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    // y3轴\r\n                    echartData.y3.name = \"闸下水深\"; // Y3轴名字\r\n\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\r\n                        y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\r\n                    echartData.y3.max = y3max; // y2最大值\r\n                    echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        console.log('1895',val.TM);\r\n                        var time = val.TM;\r\n                        return time;\r\n                    });\r\n\r\n                    // y轴\r\n                    var ymax_list = [y1max, y2max, y3max]\r\n                    var ymax = FilterMethods.methods.get_echart_max(ymax_list);\r\n                    var ymin_list = [y1max, y2max, y3max]\r\n                    var ymin = FilterMethods.methods.get_echart_max(ymin_list);\r\n\r\n                    echartData.y.max = ymax;\r\n                    echartData.y.min = ymin;\r\n\r\n                    break;\r\n                case \"hourTable\":\r\n                    echartData.chartName = \"小时表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"流量\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"WQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                        y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"闸上水深\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_UPZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                        y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    echartData.y2.max = y2max; // y2最大值\r\n                    echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    // y3轴\r\n                    echartData.y3.name = \"闸下水深\"; // Y3轴名字\r\n\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"A_DWZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\r\n                        y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\r\n                    echartData.y3.max = y3max; // y2最大值\r\n                    echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.dt;\r\n                        return time;\r\n                    });\r\n\r\n\r\n                    break;\r\n                case \"dayTable\":\r\n                    echartData.chartName = \"日表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"流量\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                        y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"日均闸上水深\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_UPZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                        y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    echartData.y2.max = y2max; // y2最大值\r\n                    echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    // y3轴\r\n                    echartData.y3.name = \"日均闸下水深\"; // Y3轴名字\r\n\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DA_DWZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\r\n                        y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\r\n                    echartData.y3.max = y3max; // y2最大值\r\n                    echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.tm;\r\n                        return time;\r\n                    });\r\n\r\n\r\n                    break;\r\n                case \"monthTable\":\r\n                    echartData.chartName = \"月表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"流量\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWQ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                        y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"月均闸上水深\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_UPZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(2),\r\n                        y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(2);\r\n                    echartData.y2.max = y2max; // y2最大值\r\n                    echartData.y2.min = y2min < 0 ? 0 : y2min; // y2最小值\r\n\r\n                    // y3轴\r\n                    echartData.y3.name = \"月均闸下水深\"; // Y3轴名字\r\n\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"MA_DWZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(2),\r\n                        y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(2);\r\n                    echartData.y3.max = y3max; // y2最大值\r\n                    echartData.y3.min = y3min < 0 ? 0 : y3min; // y2最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.dt;\r\n                        return time;\r\n                    });\r\n                    break;\r\n\r\n            }\r\n\r\n            return echartData;\r\n        },\r\n        // 闸阀状态历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        transform_ZFZT_data_into_ehart_data(data, tableType) {\r\n            var _data = JSON.parse(JSON.stringify(data)); // 数据深拷贝\r\n            _data = _data.reverse(); // 数组倒序\r\n\r\n            var echartData = {\r\n                chartName: \"\",\r\n                x: new Object(),\r\n                y1: new Object(),\r\n                y2: new Object(),\r\n                y3: new Object(),\r\n                y4: new Object(),\r\n                y: new Object()\r\n            }\r\n            switch (tableType) {\r\n                case \"historyTable\":\r\n                    echartData.chartName = \"历史表\";\r\n\r\n\r\n                    // y1轴\r\n                    echartData.y1.name = \"流量\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"Q\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(3);\r\n                    });\r\n\r\n                    var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                        y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n                    // y2轴\r\n                    echartData.y2.name = \"闸上水位\"; // Y2轴名字\r\n\r\n                    echartData.y2.list = FilterMethods.methods.newArrayByObjArray(_data, \"UPZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y2max = (FilterMethods.methods.get_echart_max(echartData.y2.list) + 0.5).toFixed(3),\r\n                        y2min = (FilterMethods.methods.get_echart_min(echartData.y2.list) - 0.5).toFixed(3);\r\n                    echartData.y2.max = y2max; // y1最大值\r\n                    echartData.y2.min = y2min < 0 ? 0 : y2min; // y1最小值\r\n\r\n                    // y3轴\r\n                    echartData.y3.name = \"闸下水位\"; // Y3轴名字\r\n\r\n                    echartData.y3.list = FilterMethods.methods.newArrayByObjArray(_data, \"DWZ\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y3max = (FilterMethods.methods.get_echart_max(echartData.y3.list) + 0.5).toFixed(3),\r\n                        y3min = (FilterMethods.methods.get_echart_min(echartData.y3.list) - 0.5).toFixed(3);\r\n                    echartData.y3.max = y3max; // y3最大值\r\n                    echartData.y3.min = y3min < 0 ? 0 : y3min; // y3最小值\r\n\r\n                    // y4轴\r\n                    echartData.y4.name = \"闸门开度\"; // Y3轴名字\r\n\r\n                    echartData.y4.list = FilterMethods.methods.newArrayByObjArray(_data, \"OD\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(2);\r\n                    });\r\n\r\n                    var y4max = (FilterMethods.methods.get_echart_max(echartData.y4.list) + 0.5).toFixed(3),\r\n                        y4min = (FilterMethods.methods.get_echart_min(echartData.y4.list) - 0.5).toFixed(3);\r\n                    echartData.y4.max = y4max; // y4最大值\r\n                    echartData.y4.min = y4min < 0 ? 0 : y4min; // y4最小值\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n                        // var time = `${index}:00 ~ ${index + 1}:00`;\r\n                        var time = val.TM;\r\n                        return time;\r\n                    });\r\n\r\n                    // y轴\r\n                    var ymax_list = [y1max, y2max, y3max, y4max]\r\n                    var ymax = FilterMethods.methods.get_echart_max(ymax_list);\r\n                    var ymin_list = [y1min, y2min, y3min, y4min]\r\n                    var ymin = FilterMethods.methods.get_echart_min(ymin_list);\r\n                    if(ymin<0){\r\n                        ymin=0\r\n                    }\r\n\r\n                    echartData.y.max = ymax;\r\n                    echartData.y.min = ymin;\r\n\r\n                    break;\r\n\r\n            }\r\n\r\n            return echartData;\r\n        },\r\n\r\n        // 运行工况历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        transform_YXGK_data_into_ehart_data(data, tableType) {\r\n            var _data = JSON.parse(JSON.stringify(data)); // 数据深拷贝\r\n             _data = _data.reverse(); // 数组倒序\r\n\r\n            var echartData = {\r\n                chartName: \"\",\r\n                x: new Object(),\r\n                y1: new Object(),\r\n                y2: new Object(),\r\n            }\r\n            echartData.chartName = \"\";\r\n\r\n            switch (tableType) {\r\n                case \"zhuangtaishuju\":\r\n                    // y1轴\r\n                    echartData.y1.name = \"电压\"; // Y1轴名字\r\n\r\n                    echartData.y1.list = FilterMethods.methods.newArrayByObjArray(_data, \"VOL\", val => { // 过滤\r\n                        if (isNaN(val) || val === \"\" || val == null) {\r\n                            return 0;\r\n                        }\r\n                        return parseFloat(val).toFixed(1);\r\n                    });\r\n\r\n                    var y1max = (FilterMethods.methods.get_echart_max(echartData.y1.list) + 0.5).toFixed(3),\r\n                        y1min = (FilterMethods.methods.get_echart_min(echartData.y1.list) - 0.5).toFixed(3);\r\n                    echartData.y1.max = y1max; // y1最大值\r\n                    echartData.y1.min = y1min < 0 ? 0 : y1min; // y1最小值\r\n\r\n\r\n                    // x轴\r\n                    echartData.x.list = _data.map((val, index, array) => {\r\n\r\n                        var time = val.tm;\r\n                        return time;\r\n                    });\r\n                    break;\r\n\r\n            }\r\n\r\n\r\n\r\n            return echartData;\r\n        },\r\n\r\n        // 抽离对象数组中每一项对象中某字段组合成新的数组\r\n        newArrayByObjArray(array, attr, callback) {\r\n            var newArray = array.map(val => {\r\n                var newVal = val[attr];\r\n                if (typeof callback == \"function\") {\r\n                    newVal = callback(newVal);\r\n                }\r\n                return newVal;\r\n            });\r\n            return newArray;\r\n        },\r\n        //抽离GIS图层对象数组中每一项对象中某字段组合成新的数组\r\n        newGisArrayByGisArray(array, attr, callback) {\r\n            var newArray = array.map(val => {\r\n                var newVal = val.rowinfo[attr];\r\n                if (typeof callback == \"function\") {\r\n                    newVal = callback(newVal);\r\n                }\r\n                return newVal;\r\n            });\r\n            return newArray;\r\n        }\r\n    },\r\n\r\n}\r\n\r\nexport default FilterMethods\r\n"]}]}