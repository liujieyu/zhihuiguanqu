{"remainingRequest":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work2022\\visualplace\\zhihuiguanqu\\src\\table\\table-sksq\\table-history.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\src\\table\\table-sksq\\table-history.vue","mtime":1679908614210},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\less-loader\\dist\\cjs.js","mtime":1642129565717},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work2022\\visualplace\\zhihuiguanqu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.switch {\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 55px;\n    display: flex;\n    align-items: center;\n    background: white;\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n    border: #7eb7f0 2px solid;\n    border-right: 0;\n}\n\n.el-table th {\n    padding: 0 !important;\n}\n",{"version":3,"sources":["table-history.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA24CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"table-history.vue","sourceRoot":"src/table/table-sksq","sourcesContent":["<template>\r\n    <div>\r\n        <Content :style=\"{padding: '12px 24px 24px 24px', background: '#fff'}\">\r\n            <Row :gutter=\"16\">\r\n                <Col :span=\"span1\">\r\n                    <Row :gutter=\"16\" type=\"flex\" justify=\"start\" z style=\"margin: 10px;line-height: 32px;\">\r\n                        <Col>时间:</Col>\r\n                        <Col>\r\n                            <!-- 开始到结束时间选择 -->\r\n                                <Col span=\"19\">\r\n                                    <el-date-picker\r\n                                    v-model=\"table.shuiqing.date\"\r\n                                    range-separator=\"至\"\r\n                                    start-placeholder=\"开始日期\"\r\n                                    end-placeholder=\"结束日期\"\r\n                                    @change=\"handleDatePickerChange\"\r\n                                    :picker-options=\"table.shuiqing.datePickerOptions[select.shuiqing_select]\"\r\n                                    unlink-panels\r\n                                    :type=\"table.shuiqing.datePickerType\"\r\n                                    size=\"mini\"\r\n                                    style=\"min-width: 360px\"\r\n                                    ></el-date-picker>\r\n                                </Col>\r\n                        </Col>\r\n                        <Col>\r\n                        时段类别：\r\n                        <Select v-model=\"select.shuiqing_select\" @on-change=\"tableTypeOnChange_shuiqing\" style=\"width:130px;margin-right: 20px;\" >\r\n                            <Option v-for=\"item in select.shuiqingList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                        </Select>\r\n                        </Col>\r\n                        <!-- \r\n                        <Col>\r\n                            <Button type=\"primary\" style=\"width: auto;margin-right: 10px;;\"\r\n                                    @click=\"cellclick\">站点详情\r\n                            </Button>\r\n\r\n                            <Button type=\"primary\" style=\"width: auto;margin-right: 0px;margin-left: 10px;\" @click=\"test1\">显示/隐藏树形</Button>\r\n                            <Button type=\"primary\" style=\"width: auto;margin-right: 20px;margin-left: 10px;\"\r\n                                    @click=\"err\">导出\r\n                            </Button>\r\n                        </Col>\r\n                         -->\r\n                        <Col>\r\n                            <Button type=\"primary\" style=\"width: auto;margin-right: 10px;\"\r\n                                    @click=\"handleClick\">水位库容曲线\r\n                            </Button>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    <div class=\"switch\" @click=\"Menu_toggle\">\r\n                        <i class=\"el-icon-d-arrow-left\" v-if=\"Menu.show_Controller\"></i>\r\n                        <i class=\"el-icon-d-arrow-right\" v-if=\"!Menu.show_Controller\"></i>\r\n                    </div>\r\n                    <Divider/>\r\n                    <Row>\r\n                        <!-- <Col style=\"text-align: center;margin: 0 0 10px 0;\">\r\n                            监测站名：{{CZMC}}\r\n                        </Col> -->\r\n                        <Col style='font-size: 14px;' class=\"borsLine\">站名：{{siteno}}&nbsp;\r\n                        单位：水位 m，流量 10m³/s，库容 万m³&nbsp;&nbsp;4-6月汛限水位：{{yujingdata.FWL}}m&nbsp;7-9月汛限水位：{{yujingdata.FWL79}}m&nbsp;校核洪水位：{{yujingdata.XHWL}}m</Col>\r\n                    </Row>\r\n                    <Row :gutter=\"24\" style=\"display: flex\">\r\n                        <Col style=\"width: 520px;\">\r\n                            <el-table\r\n                                    :data=\"table.shuiqing.Rows_filter\"\r\n                                    border\r\n                                    :height=\"theight\"\r\n                                    :loading=\"table.shuiqing.loading\"\r\n                                    @sort-change=\"sort_change\"\r\n                                    style=\"width: 520px\">\r\n                                <el-table-column\r\n                                        label=\" \"\r\n                                        type=\"index\"\r\n                                        align=\"center\"\r\n                                        width=\"55\"\r\n                                        :index=\"indexMethod\">\r\n                                </el-table-column>\r\n                                <el-table-column\r\n                                        v-for=\"(item,index) in table.shuiqing.activeColumns\"\r\n                                        :prop=\"item.key\"\r\n                                        :align=\"item.align\"\r\n                                        :label=\"item.title\"\r\n                                        :min-width=\"item.width\"\r\n                                        :sortable=\"item.sortable\"\r\n                                        :show-overflow-tooltip=\"true\"\r\n                                ></el-table-column>\r\n                            </el-table>\r\n                            <div style=\"margin: 10px;overflow: hidden\">\r\n                                <div style=\"float: right;\">\r\n                                    <Page\r\n                                            :total=\"list_input.total\"\r\n                                            :current=\"list_input.current\"\r\n                                            show-sizer\r\n                                            :page-size=\"list_input.pagesize\"\r\n                                            :page-size-opts=\"list_input.pagesizeopts\"\r\n                                            @on-change=\"CurrentChange\"\r\n                                            @on-page-size-change=\"PagesizeChange\"\r\n                                            size=\"small\"\r\n                                            show-total\r\n                                            show-elevator\r\n                                    ></Page>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col span=\"13\">\r\n                            <div ref=\"achart\" v-show=\"table.shuiqing.Rows_filter.length>0\"  :style=\"{'width': '100%','height': chartheight+'px','margin-top': '1%'}\"></div>\r\n                            <div ref=\"noachart\" v-show=\"table.shuiqing.Rows_filter.length==0\"  :style=\"{'width': '100%','height': chartheight+'px',margin: 'auto', display:'flex', alignItems:'center', justifyContent: 'center','margin-top': '1%'}\">暂无水情图数据</div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <transition name=\"el-fade-in-linear\">\r\n                    <Col :span=\"span2\" v-show=\"show1\">\r\n                        <Row style=\"margin-top: 10px;line-height: 32px;\">\r\n                            <Col>\r\n                                <Input search enter-button suffix=\"ios-search\" placeholder=\"请输入行政区划或者站点名称\" style=\"width: 250px;margin-right: 20px;\" @on-search=\"search\" v-model=\"searchmsg\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style=\"margin-top: 30px;margin-left: 20px;\">\r\n                            <Col :style=\"{'overflow-y': 'auto', height: (theight+30)+'px'}\">\r\n                            <el-tree\r\n                            \r\n                                class=\"filter-tree\"\r\n                                :data=\"Treedata\"\r\n                                highlight-current=\"true\"\r\n                                node-key=\"id\"\r\n                                :default-expanded-keys=\"expandedarray\"\r\n                                :filter-node-method=\"filterNode\"\r\n                                @node-click=\"xzqh_tree\"\r\n                                ref=\"tree\">\r\n                            </el-tree>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </transition>\r\n            </Row>\r\n        </Content>\r\n        <el-dialog\r\n    :title=\"chartdetail\"\r\n    :visible=\"detailVisible\"\r\n    :width=\"dialogwidth\"\r\n    @close=\"closeQxDialog()\"\r\n    append-to-body center\r\n   >\r\n  <TABLECHART v-if=\"detailitem.itemshow\" :info=\"detailitem\" ></TABLECHART>\r\n  </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script type=\"text/javascript\">\r\n    import FilterMethods from \"@/assets/commonJS/FilterMethods\";\r\n    import GetDataMethods from \"@/assets/commonJS/GetDataMethods\";\r\n    import TABLECHART from \"@/table/table-sksq/table-chart.vue\";\r\n    import App from \"@/App.vue\";\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                loading: false,\r\n                theight:window.innerHeight-330,\r\n                chartheight:(window.innerHeight-310)>600?600:(window.innerHeight-310),\r\n                qudao: true,\r\n                xingzhengquhua: false,\r\n                show1: true,\r\n                Menu: {show_Controller: false},\r\n                dialogwidth:(600/window.innerWidth*100)+\"%\",\r\n                chartdetail:'',//断面特征弹框标题\r\n                detailVisible:false,//是否显示弹框\r\n                detailitem:{itemshow:false},//弹框对象\r\n                span1: '19',\r\n                span2: '5',\r\n                select:{\r\n                    // 日期选择器绑定值\r\n                    shuiqing_datePicker: null,\r\n                    // 水位数据历史表\r\n                    shuiqingList: [\r\n                    {\r\n                        value: \"historyTable\",\r\n                        size: \"small\",\r\n                        label: \"历史水情\"\r\n                    },\r\n                    {\r\n                        value: \"hourTable\",\r\n                        size: \"small\",\r\n                        label: \"小时水情\"\r\n                    },\r\n                    {\r\n                        value: \"dayTable\",\r\n                        size: \"small\",\r\n                        label: \"日水情\"\r\n                    },\r\n                    {\r\n                        value: \"monthTable\",\r\n                        size: \"small\",\r\n                        label: \"月水情\"\r\n                    }\r\n                    ],\r\n                    // 水位数据历史表绑定值\r\n                    shuiqing_select: \"historyTable\",\r\n                },\r\n                table:{\r\n                    // 水情\r\n                    shuiqing: {\r\n                    // 表头设置\r\n                    columns: {\r\n                        // 历史表\r\n                    historyTable: [\r\n                    {\r\n                        title: \"时间\",\r\n                        key: \"tm\",\r\n                        width: 135,\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        title: \"库水位\",\r\n                        width: 90,\r\n                        key: \"RZ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },                   \r\n                    {\r\n                        width: 90,\r\n                        title: \"库容\",\r\n                        key: \"W\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 105,\r\n                        title: \"入库流量\",\r\n                        key: \"INQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 105,\r\n                        title: \"出库流量\",\r\n                        key: \"OTQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    ],\r\n                    // 小时表\r\n                    hourTable: [\r\n                    {\r\n                        title: \"时间\",\r\n                        key: \"dt\",\r\n                        width: 135,\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        title: \"库水位\",\r\n                        width: 90,\r\n                        key: \"RZ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 90,\r\n                        title: \"库容\",\r\n                        key: \"HW\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    // {\r\n                    //   title: \"库下水位(m)\",\r\n                    //   width: 150,\r\n                    //   key: \"BLRZ\",\r\n                    //   align: \"center\",\r\n                    //   sortable: \"custom\"\r\n                    // },\r\n                    {\r\n                        width: 105,\r\n                        title: \"入库流量\",\r\n                        key: \"INQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 110,\r\n                        title: \"出库流量\",\r\n                        key: \"OTQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    }\r\n                    ],\r\n                    // 日表\r\n                    dayTable: [\r\n                    {\r\n                        title: \"时间\",\r\n                        key: \"tm\",\r\n                        width: 120,\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        title: \"库水位\",\r\n                        width: 90,\r\n                        key: \"RZ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 90,\r\n                        title: \"库容\",\r\n                        key: \"DW\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    // {\r\n                    //   title: \"库下水位(m)\",\r\n                    //   width: 150,\r\n                    //   key: \"BLRZ\",\r\n                    //   align: \"center\",\r\n                    //   sortable: \"custom\"\r\n                    // },\r\n                    {\r\n                        width: 105,\r\n                        title: \"入库流量\",\r\n                        key: \"INQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 105,\r\n                        title: \"出库流量\",\r\n                        key: \"OTQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    }\r\n                    ],\r\n                    // 月表\r\n                    monthTable: [\r\n                    {\r\n                        title: \"时间\",\r\n                        key: \"dt\",\r\n                        width: 100,\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        title: \"库水位\",\r\n                        width: 90,\r\n                        key: \"RZ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 90,\r\n                        title: \"库容\",\r\n                        key: \"MW\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    // {\r\n                    //   title: \"库下水位(m)\",\r\n                    //   width: 150,\r\n                    //   key: \"BLRZ\",\r\n                    //   align: \"center\",\r\n                    //   sortable: \"custom\"\r\n                    // },\r\n                    {\r\n                        width: 105,\r\n                        title: \"入库流量\",\r\n                        key: \"INQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    },\r\n                    {\r\n                        width: 105,\r\n                        title: \"出库流量\",\r\n                        key: \"OTQ\",\r\n                        align: \"center\",\r\n                        sortable: \"custom\"\r\n                    }\r\n                    ]\r\n                },\r\n                // 正在激活的表头\r\n                activeColumns: [],\r\n                // 表体内容\r\n                Rows: [],\r\n                // 过滤后的表体内容\r\n                Rows_filter: [],\r\n                // 日期时间选择器的选项配置\r\n                datePickerOptions: {\r\n                    historyTable: {\r\n                    shortcuts: [\r\n                        {\r\n                        text: \"最近6小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 6);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近12小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 12);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近24小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近36小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 36);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近72小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 72);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        }\r\n                    ]\r\n                    },\r\n                    hourTable: {\r\n                    shortcuts: [\r\n                        {\r\n                        text: \"最近6小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 6);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近12小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 12);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近24小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近36小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 36);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近72小时\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 72);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        }\r\n                    ]\r\n                    },\r\n                    dayTable: {\r\n                    shortcuts: [\r\n                        {\r\n                        text: \"最近10天\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 10);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近15天\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 15);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近30天\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近60天\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 60);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        },\r\n                        {\r\n                        text: \"最近90天\",\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                            picker.$emit(\"pick\", [start, end]);\r\n                        }\r\n                        }\r\n                    ]\r\n                    },\r\n                    monthTable: {\r\n                    shortcuts: []\r\n                    }\r\n                },\r\n                // 日期时间选择器类型\r\n                datePickerType: \"date\",\r\n                // 日期时间选择器值\r\n                date: null,\r\n                // 排序\r\n                sort: null,\r\n                // 表格是否加载中\r\n                loading: false,\r\n                // 总条数\r\n                total: 0,\r\n                // 当前页\r\n                currentPage: 1,\r\n                // 每页显示数量\r\n                pageSizes: 20,\r\n                // 表格高度\r\n                height: 430\r\n                },\r\n                },\r\n                Treedata: [],\r\n                expandedarray:[],\r\n                filterTreeData:[],\r\n                GD: '',\r\n                data1: [],\r\n                data2: [],\r\n                date: '',\r\n                STinfo: {},\r\n                searchs:\"\",\r\n                siteno:'',\r\n                timesearch: '',\r\n                CZMC: '',\r\n                echarts: {\r\n                    TM: [],\r\n                    Q: [],\r\n                    UPZ: [],\r\n                    DWZ: [],\r\n                },\r\n                form: {\r\n                    searchmsg: '',\r\n                    date: '',\r\n                    field: '',\r\n                },\r\n                searchmsg: '',\r\n                MaxY1: 0,\r\n                MaxY2: 0,\r\n                MinY1: 0,\r\n                MinY2: 0,\r\n                list_input: {\r\n                    total: 100,\r\n                    pagesize: 50,\r\n                    pagesizeopts: [10, 20, 50, 75, 100, 200],\r\n                    current: 1\r\n                },\r\n                yujingdata: {\r\n                    A_ZCFWL: '',\r\n                    A_XXFWL: '',\r\n                }\r\n            };\r\n        },\r\n        // 引入过滤方法到此组件\r\n        mixins: [FilterMethods, GetDataMethods],\r\n        components: {\r\n          TABLECHART\r\n        },\r\n        mounted() {\r\n            //获取行政区划树\r\n            this.axios.get(\"/guanqu/info/xzqhtree?TYPE=6\").then(res => {\r\n                this.Treedata = res.data;\r\n                this.expandedarray.push(this.Treedata[0].id);\r\n                this.expandedarray.push(this.Treedata[0].children[0].id);\r\n                var stcd=this.Treedata[0].children[0].children[0].value;\r\n                this.searchs = stcd;    \r\n                this.siteno = this.Treedata[0].children[0].children[0].label;\r\n                this.table[\"shuiqing\"].currentPage = 1;\r\n                this.table[\"shuiqing\"].date = null;\r\n                this.table[\"shuiqing\"].sort = null;\r\n                this.setDatePickerType_shuiqing(this.select.shuiqing_select); // 设置日期时间选择器的类型\r\n                this.setActiveColumns_shuiqing(this.select.shuiqing_select); // 设置水情历史数据表 当前激活的表头\r\n                this.table.shuiqing.loading = true; // 表格加载中\r\n                if (this[`setTableDefaultDate_shuiqing_${this.select.shuiqing_select}`]) {\r\n                    this[`setTableDefaultDate_shuiqing_${this.select.shuiqing_select}`]();\r\n                }\r\n                this.set_SKSQ_alarmInfo(this.searchs,data=>{\r\n                    this.Reload();\r\n                });           \r\n            });\r\n        },\r\n        methods: {\r\n            // 设置 xx表格 时间选择器值\r\n            setTableDate(tableName, val) {\r\n            this.table[tableName].date = val;\r\n            },\r\n            sort_change(column) {\r\n                console.log(column);\r\n                if (column.order == 'ascending') {\r\n                    this.form.field = column.prop;\r\n                    this.ReloadBysort();\r\n                }\r\n                if (column.order == 'descending') {\r\n                    this.form.field = column.prop + ' desc';\r\n                    this.ReloadBysort();\r\n                }\r\n                if (column.order == null) {\r\n                    this.form.field = '';\r\n                    this.ReloadBysort();\r\n                }\r\n            },\r\n            Menu_toggle() {\r\n                this.Menu.show_Controller = !this.Menu.show_Controller;\r\n                this.show1 = !this.show1;\r\n                if (this.show1 == true) {\r\n                    this.span1 = '19';\r\n                    this.span2 = '5';\r\n                    this.data2 = {};\r\n                    this.Reload();\r\n                } else {\r\n                    this.span1 = '24';\r\n                    this.span2 = '0';\r\n                    this.data2 = {};\r\n                    this.Reload();\r\n                }\r\n            },\r\n\r\n            // 监听动态参数事件处理函数\r\n            test1(agmt) {\r\n                this.Menu.show_Controller = !agmt;\r\n                // this.show1 = agmt;\r\n                if (agmt) {\r\n                    if(this.span1 == '24'){\r\n                        this.span2 = '0';\r\n                        this.asyncExecute();\r\n                        return\r\n                    }\r\n                    this.span1 = '19';\r\n                    this.span2 = '5';\r\n                    this.data2 = {};\r\n                    this.asyncExecute()\r\n                } else {\r\n                    if(this.span1 == '24'){\r\n                        this.span2 = '0';\r\n                        this.asyncExecute();\r\n                        return;\r\n                    }\r\n                    this.span1 = '19';\r\n                    this.span2 = '5';\r\n                    this.data2 = {};\r\n                    this.asyncExecute()\r\n                }\r\n            },\r\n            // 异步刷新，重新绘图\r\n            asyncExecute(){\r\n                setTimeout(this.Reload, 100)\r\n            },\r\n            filterNode(value, Treedata, node) {  \r\n                if (!value){\r\n                    this.filterTreeData.push(Treedata);\r\n                    return true;\r\n                } \r\n                if(Treedata.label.indexOf(value) !== -1){\r\n                    this.filterTreeData.push(Treedata);\r\n                    return true;\r\n                }else{\r\n                    if(this.filterTreeData.length==0){\r\n                    return false;\r\n                    }else{\r\n                    var nodedata=this.filterTreeData[this.filterTreeData.length-1];\r\n                    if(nodedata.level==3){\r\n                        return false;\r\n                    }else{\r\n                        if(nodedata.level>=Treedata.level){\r\n                        return false;\r\n                        }else{\r\n                        var parent=Treedata.parent;\r\n                            if(parent.indexOf(nodedata.value)>-1){\r\n                            return true;\r\n                            }else{\r\n                            return false;\r\n                            }     \r\n                        }\r\n                    }\r\n                    \r\n                    }\r\n                    \r\n                }                \r\n                },\r\n            xzqh_tree(data){\r\n                console.log(data);\r\n                if (data.level==3) {\r\n                    this.searchs = data.value;\r\n                    this.siteno=data.label;\r\n                    this.set_SKSQ_alarmInfo(this.searchs,data=>{\r\n                        this.Reload();\r\n                    });\r\n                }\r\n                },\r\n            search() {\r\n                this.filterTreeData = [];\r\n                this.$refs.tree.filter(this.searchmsg);\r\n                if (this.searchmsg != '') {\r\n                    this.filterTreeData.some((val, index) => {\r\n                    if(index==0 && val.level==1){\r\n                    this.expandedarray=[val.id,val.children[0].id];\r\n                    this.searchs=val.children[0].children[0].value;\r\n                    this.siteno=val.children[0].children[0].label;\r\n                    return true;\r\n                    }else if(index==0 && val.level==2){\r\n                    this.expandedarray=[val.id];\r\n                    this.searchs=val.children[0].value;\r\n                    this.siteno=val.children[0].label;\r\n                    return true;\r\n                    }else if(index==0 && val.level==3){\r\n                    this.searchs = val.value;\r\n                    this.siteno=val.label;\r\n                    return true;\r\n                    }\r\n                });\r\n                    this.set_SKSQ_alarmInfo(this.searchs,data=>{\r\n                        this.Reload();\r\n                    });\r\n                }else{\r\n                    this.$refs.tree.root.childNodes.forEach((e)=>{\r\n                        e.expanded=false;\r\n                    }); \r\n                    this.expandedarray=[this.Treedata[0].id,this.Treedata[0].children[0].id];\r\n                    this.searchs = this.Treedata[0].children[0].children[0].value;   \r\n                    this.siteno= this.Treedata[0].children[0].children[0].label;    \r\n                    this.set_SKSQ_alarmInfo(this.searchs,data=>{\r\n                        this.Reload();\r\n                    });\r\n                }\r\n            },\r\n            handleDatePickerChange(){\r\n                this.table.shuiqing.currentPage = 1;\r\n                this.Reload();\r\n            },\r\n            timechange() {\r\n                console.log(this.form.date);\r\n                this.Reload();\r\n            },\r\n            cellclick() {\r\n                console.log(JSON.stringify(this.STinfo));\r\n                if (JSON.stringify(this.STinfo) == \"{}\") {\r\n                    this.$Message.warning('请先选择站点');\r\n                } else {\r\n                    if(this.STinfo.bj) this.STinfo.STCD = this.STinfo.canal_code;\r\n                    var evt = new Object();\r\n                    evt.graphic = new Object();\r\n                    evt.graphic.attributes = this.STinfo;\r\n                    evt.graphic.attributes.STNM = this.CZMC;\r\n                    evt.graphic.attributes.itype = \"shuikushuiqing\";\r\n                    evt.graphic.attributes.rowinfo = JSON.parse(JSON.stringify(this.STinfo));\r\n                    evt.graphic.attributes.rowinfo.tableType = {\r\n                        sksq: \"historyTable\"\r\n                    };\r\n                    var v = new Object;\r\n                    v.itype = \"shuikushuiqing\";\r\n                    console.log(\"evt\", evt);\r\n                    this.$App.showDrawer(evt, v);\r\n                }\r\n                // var evt = new Object();\r\n                // evt.graphic = new Object();\r\n                // evt.graphic.attributes = this.data1[0];\r\n                // evt.graphic.attributes.itype = \"zhafashuiqing\";\r\n                // evt.graphic.attributes.rowinfo = JSON.parse(JSON.stringify(this.data1[0]))\r\n                // evt.graphic.attributes.rowinfo.tableType = {\r\n                //   qdsq: \"historyTable\"\r\n                // };\r\n                // var v = new Object;\r\n                // v.itype = \"zhafashuiqing\";\r\n                // console.log(\"evt\",evt);\r\n                // this.$App.showDrawer(evt, v);\r\n            },\r\n            drawchart() {\r\n                var achart = this.$echarts.init(this.$refs.achart);\r\n                console.log(achart);\r\n                achart.resize();\r\n                achart.setOption({\r\n                    title: {text: this.data2.chartName},\r\n                    tooltip: {\r\n                        trigger: \"axis\"\r\n                    },\r\n                    legend: {\r\n                        data: [\"库水位\",\"库容\"],\r\n                        bottom:-5\r\n                    },\r\n                    toolbox: {\r\n                        show: true,\r\n                        feature: {\r\n                        mark: { show: true },\r\n                        magicType: { show: true, type: [\"line\", \"bar\"] },\r\n                        saveAsImage: { show: true }\r\n                        }\r\n                    },\r\n                    axisPointer: {\r\n                        link: {xAxisIndex: 'all'}\r\n                    },\r\n                    grid: [{\r\n                        left: 38,\r\n                        right: this.data2.right,\r\n                        height: '34%'\r\n                        }, {\r\n                        left: 38,\r\n                        right: this.data2.right,\r\n                        top: '59%',\r\n                        height: '34%'\r\n                    }],\r\n                    xAxis: [\r\n                        {\r\n                            boundaryGap: false,\r\n                            data: this.data2.x.list,\r\n                        },\r\n                        {\r\n                            gridIndex: 1,\r\n                            boundaryGap: false,\r\n                            data: this.data2.x.list,\r\n                            position: 'bottom'\r\n                        }\r\n                    ],\r\n                    yAxis: [\r\n                        {\r\n                            name: '库水位(m)',\r\n                            type: \"value\",\r\n                            minInterval:1, \r\n                            min:this.data2.y1.min,\r\n                            max:this.data2.y1.max\r\n                        },\r\n                        {\r\n                            gridIndex: 1,\r\n                            name: this.data2.y4.name+'(万m³)',\r\n                            type: \"value\",\r\n                            minInterval:1, \r\n                            min:this.data2.y4.min,\r\n                            max:this.data2.y4.max\r\n                        }\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: \"库水位\",\r\n                            type: \"line\",\r\n                            yAxisIndex: 0,\r\n                            data:this.data2.y1.list,\r\n                            showSymbol: false,\r\n                            smooth: true,\r\n                            itemStyle : {  \r\n                                normal : {  \r\n                                    color:'#6C84CE'  \r\n                                }  \r\n                            },  \r\n                            areaStyle: {},\r\n                            markLine : {\r\n                                symbol:'none',\r\n                                itemStyle : {  \r\n                                                normal : {  \r\n                                                    lineStyle:{  \r\n                                                    type:'solid',\r\n                                                        color:'red',\r\n                                                    }  \r\n                                                }  \r\n                                            },\r\n                                data : this.data2.markdata,\r\n                            },\r\n                        },\r\n                        {\r\n                            name: this.data2.y4.name,\r\n                            type: \"line\",\r\n                            xAxisIndex: 1,\r\n                            yAxisIndex: 1,\r\n                            data:this.data2.y4.list,\r\n                            showSymbol: false,\r\n                            smooth: true,\r\n                            itemStyle : {  \r\n                                normal : {  \r\n                                    color:'#91CC75'  \r\n                                }  \r\n                            },  \r\n                            areaStyle: {},\r\n                            markLine: {\r\n                            symbol:'none',\r\n                                itemStyle : {  \r\n                                                normal : {  \r\n                                                    lineStyle:{ \r\n                                                        type:'solid', \r\n                                                        color:'red',\r\n                                                    }  \r\n                                                }  \r\n                                            },\r\n                            data: this.data2.markdata2,\r\n                        }\r\n                        }\r\n                    ]\r\n                });\r\n            },\r\n            err() {\r\n                this.$Message.warning('该功能还在开发中...');\r\n            },\r\n            // 设置水库水情预警信息\r\n            set_SKSQ_alarmInfo(STCD,callback) {\r\n            this.$GetData.Survey_History_SKSQ(\r\n                \"alarmTable\",\r\n                {\r\n                STCD: STCD,\r\n                },\r\n                true,\r\n                data => {\r\n                var yujingdata = data.data[0];\r\n                this.yujingdata.FWL = yujingdata.FWL;\r\n                this.yujingdata.FWL79 = yujingdata.FWL79;\r\n                this.yujingdata.SJWL = yujingdata.SJWL;\r\n                this.yujingdata.JYWL = yujingdata.JYWL;\r\n                this.yujingdata.XHWL=yujingdata.XHWL;\r\n                this.yujingdata.ZCWL=yujingdata.ZCWL;\r\n                this.axios.get(`/guanqu/alarm/tzkrinfo?STCD=${STCD}`).then(res => {\r\n                    var tzkr=res.data;\r\n                    this.yujingdata.FLDCP=tzkr.fldcp;\r\n                    this.yujingdata.DDCP=tzkr.ddcp;\r\n                    this.yujingdata.TTCP=tzkr.ttcp;\r\n                    callback(yujingdata);\r\n                });                \r\n                }\r\n            );\r\n            },\r\n            // 切换 水情历史数据表类型\r\n            tableTypeOnChange_shuiqing(tableType) {\r\n            this.table[\"shuiqing\"].currentPage = 1;\r\n            this.table[\"shuiqing\"].sort = null;\r\n            this.table[\"shuiqing\"].date = null;\r\n            this.setDatePickerType_shuiqing(tableType); // 设置日期时间选择器的类型\r\n            this.setActiveColumns_shuiqing(tableType); // 设置水情历史数据表 当前激活的表头\r\n            if (this[`setTableDefaultDate_shuiqing_${tableType}`]) {\r\n                    this[`setTableDefaultDate_shuiqing_${tableType}`]();\r\n                }\r\n            // 获取对应水情历史数据表的数据\r\n            this.Reload();\r\n            },\r\n            // 水情历史数据表 当前正在激活的表头\r\n            setActiveColumns_shuiqing(tableType) {\r\n            this.table.shuiqing.activeColumns = this.table.shuiqing.columns[tableType];\r\n            this.select.shuiqing_select = tableType;\r\n            },\r\n            // 设置水位数据历史表默认查询日期\r\n            setTableDefaultDate_shuiqing_historyTable() {\r\n            const end = new Date();\r\n            const start = zeroPointOfTheDay();\r\n\r\n            var timeSlot = [start, end];\r\n\r\n            this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n            function zeroPointOfTheDay() {\r\n                var date = new Date();\r\n                date.setHours(0);\r\n                date.setMinutes(0);\r\n                date.setSeconds(0);\r\n                date.setMilliseconds(0);\r\n                return date;\r\n            }\r\n            },\r\n            // 设置水位数据小时表默认查询日期\r\n            setTableDefaultDate_shuiqing_hourTable() {\r\n            const end = new Date();\r\n            const start = zeroPointOfTheDay();\r\n\r\n            var timeSlot = [start, end];\r\n\r\n            this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n            function zeroPointOfTheDay() {\r\n                var date = new Date();\r\n                date.setHours(0);\r\n                date.setMinutes(0);\r\n                date.setSeconds(0);\r\n                date.setMilliseconds(0);\r\n                return date;\r\n            }\r\n            },\r\n            // 设置水位数据日表默认查询日期\r\n            setTableDefaultDate_shuiqing_dayTable() {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n\r\n            var timeSlot = [start, end];\r\n\r\n            this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n            function zeroPointOfTheDay() {\r\n                var date = new Date();\r\n                date.setHours(0);\r\n                date.setMinutes(0);\r\n                date.setSeconds(0);\r\n                date.setMilliseconds(0);\r\n                return date;\r\n            }\r\n            },\r\n            // 设置水位数据月表默认查询日期\r\n            setTableDefaultDate_shuiqing_monthTable() {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 160);\r\n\r\n            var timeSlot = [start, end];\r\n\r\n            this.setTableDate(\"shuiqing\", timeSlot);\r\n\r\n            function zeroPointOfTheDay() {\r\n                var date = new Date();\r\n                date.setHours(0);\r\n                date.setMinutes(0);\r\n                date.setSeconds(0);\r\n                date.setMilliseconds(0);\r\n                return date;\r\n            }\r\n            },\r\n            // 设置日期时间选择器的类型\r\n            setDatePickerType_shuiqing(tableType) {\r\n            var datePickerType;\r\n            switch (tableType) {\r\n                case \"historyTable\":\r\n                datePickerType = \"datetimerange\";\r\n                break;\r\n                case \"hourTable\":\r\n                datePickerType = \"datetimerange\";\r\n                break;\r\n                case \"dayTable\":\r\n                datePickerType = \"daterange\";\r\n                break;\r\n                case \"monthTable\":\r\n                datePickerType = \"monthrange\";\r\n                break;\r\n            }\r\n            this.table[\"shuiqing\"].datePickerType = datePickerType;\r\n            },\r\n            // 表格加载中\r\n            letTableLoading(tableName) {\r\n                this.table[tableName].loading = true;\r\n            },\r\n            // 取消表格加载\r\n            cancelTableLoading(tableName) {\r\n                this.table[tableName].loading = false;\r\n            },\r\n            ReloadBysort(){\r\n                var tableType = this.select.shuiqing_select;\r\n                this.letTableLoading(\"shuiqing\"); // 表格加载中\r\n                console.log('+++++++++++++'+tableType);\r\n                // 传递参数\r\n                var body = {\r\n                    STCD: this.searchs,\r\n                    _page: this.list_input.current,\r\n                    _page_size: this.list_input.pagesize\r\n                };\r\n\r\n                // 如果有选择排序，则传递排序参数\r\n                if (this.form.field!=null && this.form.field!='') {\r\n                    body._orderby = this.form.field;\r\n                }\r\n                // 如果有选择日期进行查询，根据表格类型传递参数\r\n                if (this.table.shuiqing.date) {\r\n                    switch (tableType) {\r\n                    case \"historyTable\":\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1];\r\n                        body.Time_max = DTT[2];\r\n                        break;\r\n                    case \"dayTable\":\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1].substr(0,10);\r\n                        body.Time_max = DTT[2].substr(0,10);\r\n                        break;\r\n                    case \"hourTable\":\r\n                        console.log('~~~~~~~~~~~~~~~~~~~~~~~'+tableType);\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1];\r\n                        body.Time_max = DTT[2];\r\n                        break;\r\n                    case \"monthTable\":\r\n                        var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date,\"monthTable\").split(\",\");\r\n                        body.Time_min = DTT[1].substring(0,7);\r\n                        body.Time_max = DTT[2].substring(0,7);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 获取水库水情历史数据\r\n                this.$GetData.Survey_History_SKSQ(\r\n                    tableType,\r\n                    body,\r\n                    {\r\n                    default: true,\r\n                    myFilter: data => {\r\n                        data.map(val => {\r\n                        val.currentPage = body._page;\r\n                        val.pageSizes = body._page_size;\r\n                        return val;\r\n                        });\r\n                        return data;\r\n                    }\r\n                    },\r\n                    data => {\r\n                    this.table.shuiqing.Rows_filter = data.data;\r\n                    this.list_input.total = data.total;\r\n                    }\r\n                );\r\n            },\r\n            Reload() {\r\n                var tableType = this.select.shuiqing_select;\r\n                this.letTableLoading(\"shuiqing\"); // 表格加载中\r\n                console.log('+++++++++++++'+tableType);\r\n                // 传递参数\r\n                var body = {\r\n                    STCD: this.searchs,\r\n                    _page: this.list_input.current,\r\n                    _page_size: this.list_input.pagesize\r\n                };\r\n\r\n                // 如果有选择排序，则传递排序参数\r\n                if (this.form.field!=null && this.form.field!='') {\r\n                    body._orderby = _this.form.field;\r\n                }\r\n                // 如果有选择日期进行查询，根据表格类型传递参数\r\n                if (this.table.shuiqing.date) {\r\n                    switch (tableType) {\r\n                    case \"historyTable\":\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1];\r\n                        body.Time_max = DTT[2];\r\n                        break;\r\n                    case \"dayTable\":\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1].substr(0,10);\r\n                        body.Time_max = DTT[2].substr(0,10);\r\n                        break;\r\n                    case \"hourTable\":\r\n                        console.log('~~~~~~~~~~~~~~~~~~~~~~~'+tableType);\r\n                        var DTT = this.$FilterData\r\n                        .elDatePicker_Filter(this.table.shuiqing.date)\r\n                        .split(\",\");\r\n                        body.Time_min = DTT[1];\r\n                        body.Time_max = DTT[2];\r\n                        break;\r\n                    case \"monthTable\":\r\n                        var DTT = this.$FilterData.elDatePicker_Filter(this.table.shuiqing.date,\"monthTable\").split(\",\");\r\n                        body.Time_min = DTT[1].substring(0,7);\r\n                        body.Time_max = DTT[2].substring(0,7);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 获取水库水情历史数据\r\n                this.$GetData.Survey_History_SKSQ(\r\n                    tableType,\r\n                    body,\r\n                    {\r\n                    default: true,\r\n                    myFilter: data => {\r\n                        data.map(val => {\r\n                        val.currentPage = body._page;\r\n                        val.pageSizes = body._page_size;\r\n                        return val;\r\n                        });\r\n                        return data;\r\n                    }\r\n                    },\r\n                    data => {\r\n                    this.table.shuiqing.Rows_filter = data.data;\r\n                    this.list_input.total = data.total;\r\n                    body._page_size = 999999999;\r\n                    body._page = 1;\r\n                    this.$GetData.Survey_History_SKSQ(\r\n                        tableType,\r\n                        body,\r\n                        {\r\n                        default: true,\r\n                        myFilter: data => {\r\n                            data.map(val => {\r\n                            val.currentPage = body._page;\r\n                            val.pageSizes = body._page_size;\r\n                            return val;\r\n                            });\r\n                            return data;\r\n                        }\r\n                        },\r\n                        chartData => {\r\n                          this.data2=chartData.data;\r\n                            if(this.data2==null || this.data2.length==0){\r\n                             return;\r\n                            }\r\n                            this.data2 = this.$App.transform_SKSQ_data_into_ehart_data(this.data2,tableType,true); // 水库水情历史统计表数据 转 ehart图形用数据 返回一个对象, 对象里分别装 Y1轴对象 Y2轴对象 X轴对象\r\n        console.log(this.data2);\r\n        this.data2.markdata=[];\r\n        this.data2.markdata2=[];\r\n        var swmax=Math.ceil(FilterMethods.methods.get_echart_max(this.data2.y1.list));\r\n        var y1max = Math.ceil(parseFloat(this.yujingdata.XHWL)),\r\n            y1min = Math.floor(FilterMethods.methods.get_echart_min(this.data2.y1.list));\r\n        if(swmax>y1max){\r\n            this.data2.y1.max=swmax;\r\n        }else{\r\n            this.data2.y1.max=y1max;\r\n        }       \r\n        this.data2.y1.min=y1min;\r\n        var mintime=this.data2.x.list[0].slice(0, 10),maxtime=this.data2.x.list[this.data2.x.list.length-1].slice(0, 10);\r\n        var minmonth=mintime.split(\"-\")[1],maxmonth=maxtime.split(\"-\")[1];\r\n          this.data2.y1.markval2=this.yujingdata.XHWL;\r\n        if((parseInt(minmonth)>=7 && parseInt(minmonth)<=9) || (parseInt(maxmonth)>=7 && parseInt(maxmonth)<=9)){\r\n          this.data2.y1.markval=this.yujingdata.FWL79;\r\n        }else{\r\n          this.data2.y1.markval=this.yujingdata.FWL;\r\n        }\r\n        //设置水位markLine\r\n                    var jhsw=new Object();\r\n                    jhsw.name='校核水位 '+this.data2.y1.markval2;\r\n                    jhsw.yAxis=parseFloat(this.yujingdata.XHWL);\r\n                    jhsw.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                    }\r\n                    this.data2.markdata.push(jhsw);\r\n                    var zcsw=new Object();\r\n                    zcsw.name='汛限水位 '+this.data2.y1.markval;\r\n                    zcsw.yAxis=parseFloat(this.data2.y1.markval);\r\n                    zcsw.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                    }\r\n                    this.data2.markdata.push(zcsw);\r\n        if(this.data2.y1.min>parseFloat(this.yujingdata.SWL)){\r\n          this.data2.y1.min=parseFloat(this.yujingdata.SWL);\r\n        }else{\r\n          var ssw=new Object();\r\n                      ssw.name='死水位 '+this.yujingdata.SWL;\r\n                      ssw.yAxis=parseFloat(this.yujingdata.SWL);\r\n                      ssw.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                    }\r\n                      this.data2.markdata.push(ssw);\r\n        }\r\n        var nowDate=new Date();\r\n        var now=this.getNowDayString(nowDate);\r\n        console.log(now);\r\n        this.data2.right=24;\r\n        if(mintime==now && maxtime==now && tableType=='historyTable'){\r\n            this.data2.chartName = \"今日水情图\";\r\n            //this.data2.right=10;\r\n            for(var i=0;i<this.data2.x.list.length;i++){\r\n              var time = this.data2.x.list[i].split(\" \");\r\n              this.data2.x.list[i]=time[1];\r\n            }\r\n        }else if(mintime.slice(0,4)==maxtime.slice(0,4) && maxtime.slice(0,4)==nowDate.getFullYear()){\r\n            for(var i=0;i<this.data2.x.list.length;i++){\r\n              var time = this.data2.x.list[i].substr(5);\r\n              this.data2.x.list[i]=time;\r\n            }\r\n        }\r\n        // y4轴\r\n                    this.data2.y4.name = \"库容\"; // Y2轴名字\r\n                    var y4max = Math.ceil(FilterMethods.methods.get_echart_max(this.data2.y4.list)),\r\n                        y4min = Math.floor(FilterMethods.methods.get_echart_min(this.data2.y4.list));\r\n                    var krmax=Math.ceil(this.yujingdata.TTCP)+50;\r\n                    var krmin=Math.floor(this.yujingdata.DDCP)-50;\r\n                    if(y4max<krmax){\r\n                      y4max=krmax;\r\n                    }\r\n                    if(y4min>krmin){\r\n                      y4min=krmin;\r\n                    }\r\n                    this.data2.y4.max = y4max; // y4最大值\r\n                    this.data2.y4.min = y4min < 0 ? 0 : y4min; // y4最小值\r\n        //设置库容markLine\r\n                    var fhkr=new Object();\r\n                    fhkr.name='防洪库容 '+this.yujingdata.FLDCP;\r\n                    fhkr.yAxis=parseFloat(this.yujingdata.FLDCP);\r\n                    fhkr.label={\r\n                           formatter: '{b}',\r\n                           position: 'middle',\r\n                    }\r\n                    this.data2.markdata2.push(fhkr);\r\n                    if(this.data2.y4.min<=parseFloat(this.yujingdata.DDCP)){\r\n                        var ddkr=new Object();\r\n                        ddkr.name='死库容 '+this.yujingdata.DDCP;\r\n                        ddkr.yAxis=parseFloat(this.yujingdata.DDCP);\r\n                        ddkr.label={\r\n                            formatter: '{b}',\r\n                           position: 'middle',\r\n                        }\r\n                        this.data2.markdata2.push(ddkr);\r\n                    }            \r\n                    var datalist1=[];\r\n                    var datalist2=[];\r\n                    for(var i=0;i<this.data2.x.list.length;i++){\r\n                      var obj_data1=[this.data2.x.list[i],this.data2.y1.list[i]];\r\n                      datalist1.push(obj_data1);\r\n                      var obj_data2=[this.data2.x.list[i],this.data2.y4.list[i]];\r\n                      datalist2.push(obj_data2);\r\n                    }\r\n                    this.data2.y1.list=datalist1;\r\n                    this.data2.y4.list=datalist2;\r\n        switch (this.data2.chartName) {\r\n                case \"历史表\":\r\n                    this.data2.chartName=\"历史水情图\";\r\n                    break;\r\n                case \"小时表\":\r\n                    this.data2.chartName=\"小时水情图\";\r\n                    break;\r\n                case \"日表\":\r\n                    this.data2.chartName=\"日水情图\";\r\n                    break;\r\n                case \"月表\":\r\n                    this.data2.chartName=\"月水情图\";\r\n                    break;\r\n                case \"年表\":\r\n                    this.data2.chartName=\"年水情图\";\r\n                    break;\r\n                }\r\n                this.drawchart();\r\n                         }                        \r\n                    );\r\n\r\n                    this.cancelTableLoading(\"shuiqing\"); // 取消表格加载\r\n                    }\r\n                );\r\n            },\r\n            //弹框显示水位库容曲线\r\n            handleClick(){\r\n                this.chartdetail=this.siteno+\"水位库容面积关系曲线\";\r\n              this.detailitem={STCD:this.searchs,itemshow:true};\r\n              this.detailVisible=true;\r\n            },\r\n            closeQxDialog(){\r\n              this.detailVisible=false;\r\n              this.detailitem.itemshow=false;\r\n            },\r\n            //返回日期\r\n    getNowDayString(now){\r\n      return now.getFullYear()+\"-\"+((now.getMonth()+1)<10?\"0\"+(now.getMonth()+1):(now.getMonth()+1))+\"-\"+(now.getDate()<10?\"0\"+now.getDate():now.getDate());\r\n    },\r\n            indexMethod(index) {\r\n                return index + 1 + (this.list_input.pagesize * (this.list_input.current - 1));\r\n            },\r\n            // 处理页码切换\r\n            CurrentChange(index) {\r\n                // console.log(index);\r\n                this.list_input.current = index;\r\n                this.ReloadBysort();\r\n            },\r\n            // 处理每页显示条数切换\r\n            PagesizeChange(pagesize) {\r\n                // console.log(pagesize)\r\n                this.list_input.current = 1;\r\n                this.list_input.pagesize = pagesize;\r\n                this.ReloadBysort();\r\n            }\r\n        },\r\n        created() {\r\n        },\r\n        computed: {\r\n            balabala() {\r\n                //console.log(this.$store.state.anniu);\r\n                return this.$store.state.anniu\r\n            }\r\n        },\r\n        watch: {\r\n            // 'this.$store.state.anniu': function(){\r\n            //   console.log(this.$store.state.anniu);\r\n            // }\r\n            balabala(curVal, oldVal) {\r\n                console.log(curVal);\r\n                this.test1(curVal)\r\n            }\r\n        },\r\n    };\r\n</script>\r\n\r\n<style type=\"text/css\" lang=\"less\">\r\n    .switch {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 55px;\r\n        display: flex;\r\n        align-items: center;\r\n        background: white;\r\n        border-top-left-radius: 5px;\r\n        border-bottom-left-radius: 5px;\r\n        border: #7eb7f0 2px solid;\r\n        border-right: 0;\r\n    }\r\n\r\n    .el-table th {\r\n        padding: 0 !important;\r\n    }\r\n</style>\r\n"]}]}